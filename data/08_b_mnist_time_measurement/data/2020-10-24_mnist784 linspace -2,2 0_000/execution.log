2020-10-24 16:02:49,601 - root - INFO - Package version 0.1.1
2020-10-24 16:02:49,601 - root - INFO - Saving data at /data/Lab/rewann/wann-results/data/mnist_extensive/time_measurement/data/2020-10-24_mnist784 linspace -2,2 0_000.
2020-10-24 16:02:49,601 - root - DEBUG - Loading training dataset
2020-10-24 16:02:53,483 - root - DEBUG - Loaded 60000 samples.
2020-10-24 16:02:53,484 - root - DEBUG - Running experiments with the following parameters:
debug = false
experiment_name = "mnist784 linspace -2,2 0"
experiment_path = "data/2020-10-24_mnist784 linspace -2,2 0_000"

[config]
num_workers = 1
debug = true
backend = "torch"

[postopt]
run_postopt = true
compile_report = true
num_weights = 100
num_samples = -1

[sampling]
seed = 0
post_init_seed = false
distribution = "linspace"
lower_bound = -2
upper_bound = 2
mean = 0
sigma = 0.5
num_weights_per_iteration = 6
num_samples_per_iteration = 2000
hof_evaluation_iterations = 4

[task]
name = "mnist784"
sample_order_seed = 0
test_portion = 0.2
sample_length = 10
num_categories = 8

[storage]
data_base_path = "data"
log_filename = "execution.log"
commit_elite_freq = -1
commit_metrics_freq = 10
include_prediction_records = false

[population]
num_generations = 160
size = 320
initial_enabled_edge_prob = 0.05
initial_genes = "full"
initial_func = "random"
hof_size = 10
enable_edge_signs = true
enabled_activation_funcs = "all"
initial_enabled_edge_probability = 0.05
enabled_activation_functions = "all"
initial_with_edges = true

[selection]
use_tournaments = true
elite_ratio = 0.1
culling_ratio = 0.2
tournament_size = 5
objectives = [ "-log_loss.min", "-log_loss.mean", "-n_hidden",]
recorded_metrics = [ "accuracy", "kappa", "log_loss",]
hof_metric = "accuracy.mean"

[mutation.new_edge]
probability = 0.2
strategy = "layer_agnostic"
propability = 0.2

[mutation.new_node]
probability = 0.25
propability = 0.3

[mutation.reenable_edge]
probability = 0.05
propability = 0.1

[mutation.change_activation]
probability = 0.5
propability = 0.4

[mutation.change_edge_sign]
probability = 0.2

[mutation.new_recurrent_edge]
probability = 0.2
strategy = "any"

[mutation.add_recurrent_edge]
probability = 0.3

2020-10-24 16:02:53,485 - root - INFO - Starting evolutionary algorithm
2020-10-24 16:02:53,719 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:03:35,636 - root - DEBUG - Updating hall of fame
2020-10-24 16:03:47,705 - root - INFO - Completed generation 1; 5.4e+01s elapsed, 5.4e+01s avg, 5.4e+01s total. Expected time remaining: 8.6e+03s
2020-10-24 16:03:47,811 - root - INFO - #1 MAX:accuracy.mean: 0.19
2020-10-24 16:03:47,990 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:04:29,776 - root - DEBUG - Updating hall of fame
2020-10-24 16:04:37,655 - root - INFO - Completed generation 2; 5e+01s elapsed, 5.2e+01s avg, 1e+02s total. Expected time remaining: 8.2e+03s
2020-10-24 16:04:37,760 - root - INFO - #2 MAX:accuracy.mean: 0.17
2020-10-24 16:04:37,921 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:05:20,445 - root - DEBUG - Updating hall of fame
2020-10-24 16:05:28,357 - root - INFO - Completed generation 3; 5.1e+01s elapsed, 5.2e+01s avg, 1.5e+02s total. Expected time remaining: 8.1e+03s
2020-10-24 16:05:28,462 - root - INFO - #3 MAX:accuracy.mean: 0.19
2020-10-24 16:05:28,628 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:06:12,663 - root - DEBUG - Updating hall of fame
2020-10-24 16:06:18,138 - root - INFO - Completed generation 4; 5e+01s elapsed, 5.1e+01s avg, 2e+02s total. Expected time remaining: 8e+03s
2020-10-24 16:06:18,245 - root - INFO - #4 MAX:accuracy.mean: 0.19
2020-10-24 16:06:18,406 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:07:01,774 - root - DEBUG - Updating hall of fame
2020-10-24 16:07:08,235 - root - INFO - Completed generation 5; 5e+01s elapsed, 5.1e+01s avg, 2.5e+02s total. Expected time remaining: 7.9e+03s
2020-10-24 16:07:08,337 - root - INFO - #5 MAX:accuracy.mean: 0.18
2020-10-24 16:07:08,494 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:07:51,414 - root - DEBUG - Updating hall of fame
2020-10-24 16:07:56,708 - root - INFO - Completed generation 6; 4.8e+01s elapsed, 5e+01s avg, 3e+02s total. Expected time remaining: 7.8e+03s
2020-10-24 16:07:56,810 - root - INFO - #6 MAX:accuracy.mean: 0.19
2020-10-24 16:07:56,979 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:08:41,053 - root - DEBUG - Updating hall of fame
2020-10-24 16:08:46,148 - root - INFO - Completed generation 7; 4.9e+01s elapsed, 5e+01s avg, 3.5e+02s total. Expected time remaining: 7.7e+03s
2020-10-24 16:08:46,251 - root - INFO - #7 MAX:accuracy.mean: 0.2
2020-10-24 16:08:46,406 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:09:31,802 - root - DEBUG - Updating hall of fame
2020-10-24 16:09:39,751 - root - INFO - Completed generation 8; 5.4e+01s elapsed, 5.1e+01s avg, 4.1e+02s total. Expected time remaining: 7.7e+03s
2020-10-24 16:09:39,861 - root - INFO - #8 MAX:accuracy.mean: 0.21
2020-10-24 16:09:40,040 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:10:25,022 - root - DEBUG - Updating hall of fame
2020-10-24 16:10:28,293 - root - INFO - Completed generation 9; 4.8e+01s elapsed, 5e+01s avg, 4.5e+02s total. Expected time remaining: 7.6e+03s
2020-10-24 16:10:28,401 - root - INFO - #9 MAX:accuracy.mean: 0.19
2020-10-24 16:10:28,566 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:11:13,723 - root - DEBUG - Updating hall of fame
2020-10-24 16:11:16,460 - root - INFO - Completed generation 10; 4.8e+01s elapsed, 5e+01s avg, 5e+02s total. Expected time remaining: 7.5e+03s
2020-10-24 16:11:16,566 - root - INFO - #10 MAX:accuracy.mean: 0.21
2020-10-24 16:11:16,753 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:12:01,602 - root - DEBUG - Updating hall of fame
2020-10-24 16:12:05,369 - root - INFO - Completed generation 11; 4.9e+01s elapsed, 5e+01s avg, 5.5e+02s total. Expected time remaining: 7.5e+03s
2020-10-24 16:12:05,471 - root - INFO - #11 MAX:accuracy.mean: 0.19
2020-10-24 16:12:05,634 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:12:50,894 - root - DEBUG - Updating hall of fame
2020-10-24 16:12:54,525 - root - INFO - Completed generation 12; 4.9e+01s elapsed, 5e+01s avg, 6e+02s total. Expected time remaining: 7.4e+03s
2020-10-24 16:12:54,629 - root - INFO - #12 MAX:accuracy.mean: 0.21
2020-10-24 16:12:54,797 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:13:42,757 - root - DEBUG - Updating hall of fame
2020-10-24 16:13:46,471 - root - INFO - Completed generation 13; 5.2e+01s elapsed, 5e+01s avg, 6.5e+02s total. Expected time remaining: 7.4e+03s
2020-10-24 16:13:46,574 - root - INFO - #13 MAX:accuracy.mean: 0.21
2020-10-24 16:13:46,737 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:14:33,460 - root - DEBUG - Updating hall of fame
2020-10-24 16:14:37,845 - root - INFO - Completed generation 14; 5.1e+01s elapsed, 5e+01s avg, 7e+02s total. Expected time remaining: 7.3e+03s
2020-10-24 16:14:37,984 - root - INFO - #14 MAX:accuracy.mean: 0.21
2020-10-24 16:14:38,198 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:15:25,490 - root - DEBUG - Updating hall of fame
2020-10-24 16:15:27,966 - root - INFO - Completed generation 15; 5e+01s elapsed, 5e+01s avg, 7.5e+02s total. Expected time remaining: 7.3e+03s
2020-10-24 16:15:28,118 - root - INFO - #15 MAX:accuracy.mean: 0.23
2020-10-24 16:15:28,324 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:16:14,325 - root - DEBUG - Updating hall of fame
2020-10-24 16:16:17,065 - root - INFO - Completed generation 16; 4.9e+01s elapsed, 5e+01s avg, 8e+02s total. Expected time remaining: 7.2e+03s
2020-10-24 16:16:17,171 - root - INFO - #16 MAX:accuracy.mean: 0.18
2020-10-24 16:16:17,332 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:17:03,191 - root - DEBUG - Updating hall of fame
2020-10-24 16:17:06,815 - root - INFO - Completed generation 17; 5e+01s elapsed, 5e+01s avg, 8.5e+02s total. Expected time remaining: 7.2e+03s
2020-10-24 16:17:06,920 - root - INFO - #17 MAX:accuracy.mean: 0.19
2020-10-24 16:17:07,083 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:17:53,134 - root - DEBUG - Updating hall of fame
2020-10-24 16:17:58,081 - root - INFO - Completed generation 18; 5.1e+01s elapsed, 5e+01s avg, 9e+02s total. Expected time remaining: 7.1e+03s
2020-10-24 16:17:58,185 - root - INFO - #18 MAX:accuracy.mean: 0.21
2020-10-24 16:17:58,347 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:18:44,955 - root - DEBUG - Updating hall of fame
2020-10-24 16:18:47,577 - root - INFO - Completed generation 19; 4.9e+01s elapsed, 5e+01s avg, 9.5e+02s total. Expected time remaining: 7.1e+03s
2020-10-24 16:18:47,681 - root - INFO - #19 MAX:accuracy.mean: 0.24
2020-10-24 16:18:47,849 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:19:35,134 - root - DEBUG - Updating hall of fame
2020-10-24 16:19:37,133 - root - INFO - Completed generation 20; 4.9e+01s elapsed, 5e+01s avg, 1e+03s total. Expected time remaining: 7e+03s
2020-10-24 16:19:37,238 - root - INFO - #20 MAX:accuracy.mean: 0.21
2020-10-24 16:19:37,430 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:20:24,635 - root - DEBUG - Updating hall of fame
2020-10-24 16:20:26,486 - root - INFO - Completed generation 21; 4.9e+01s elapsed, 5e+01s avg, 1.1e+03s total. Expected time remaining: 7e+03s
2020-10-24 16:20:26,592 - root - INFO - #21 MAX:accuracy.mean: 0.22
2020-10-24 16:20:26,759 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:21:13,590 - root - DEBUG - Updating hall of fame
2020-10-24 16:21:17,092 - root - INFO - Completed generation 22; 5.1e+01s elapsed, 5e+01s avg, 1.1e+03s total. Expected time remaining: 6.9e+03s
2020-10-24 16:21:17,193 - root - INFO - #22 MAX:accuracy.mean: 0.23
2020-10-24 16:21:17,353 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:22:03,220 - root - DEBUG - Updating hall of fame
2020-10-24 16:22:06,713 - root - INFO - Completed generation 23; 5e+01s elapsed, 5e+01s avg, 1.2e+03s total. Expected time remaining: 6.9e+03s
2020-10-24 16:22:06,819 - root - INFO - #23 MAX:accuracy.mean: 0.23
2020-10-24 16:22:06,982 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:22:53,312 - root - DEBUG - Updating hall of fame
2020-10-24 16:22:56,828 - root - INFO - Completed generation 24; 5e+01s elapsed, 5e+01s avg, 1.2e+03s total. Expected time remaining: 6.8e+03s
2020-10-24 16:22:56,940 - root - INFO - #24 MAX:accuracy.mean: 0.26
2020-10-24 16:22:57,114 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:23:44,163 - root - DEBUG - Updating hall of fame
2020-10-24 16:23:47,552 - root - INFO - Completed generation 25; 5.1e+01s elapsed, 5e+01s avg, 1.3e+03s total. Expected time remaining: 6.8e+03s
2020-10-24 16:23:47,653 - root - INFO - #25 MAX:accuracy.mean: 0.23
2020-10-24 16:23:47,815 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:24:35,291 - root - DEBUG - Updating hall of fame
2020-10-24 16:24:38,605 - root - INFO - Completed generation 26; 5.1e+01s elapsed, 5e+01s avg, 1.3e+03s total. Expected time remaining: 6.7e+03s
2020-10-24 16:24:38,707 - root - INFO - #26 MAX:accuracy.mean: 0.22
2020-10-24 16:24:38,874 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:25:27,711 - root - DEBUG - Updating hall of fame
2020-10-24 16:25:30,531 - root - INFO - Completed generation 27; 5.2e+01s elapsed, 5e+01s avg, 1.4e+03s total. Expected time remaining: 6.7e+03s
2020-10-24 16:25:30,637 - root - INFO - #27 MAX:accuracy.mean: 0.22
2020-10-24 16:25:30,801 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:26:19,389 - root - DEBUG - Updating hall of fame
2020-10-24 16:26:22,181 - root - INFO - Completed generation 28; 5.2e+01s elapsed, 5e+01s avg, 1.4e+03s total. Expected time remaining: 6.6e+03s
2020-10-24 16:26:22,286 - root - INFO - #28 MAX:accuracy.mean: 0.23
2020-10-24 16:26:22,451 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:27:10,031 - root - DEBUG - Updating hall of fame
2020-10-24 16:27:13,104 - root - INFO - Completed generation 29; 5.1e+01s elapsed, 5e+01s avg, 1.5e+03s total. Expected time remaining: 6.6e+03s
2020-10-24 16:27:13,206 - root - INFO - #29 MAX:accuracy.mean: 0.24
2020-10-24 16:27:13,363 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:28:00,283 - root - DEBUG - Updating hall of fame
2020-10-24 16:28:04,803 - root - INFO - Completed generation 30; 5.2e+01s elapsed, 5e+01s avg, 1.5e+03s total. Expected time remaining: 6.5e+03s
2020-10-24 16:28:04,909 - root - INFO - #30 MAX:accuracy.mean: 0.24
2020-10-24 16:28:05,109 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:28:52,824 - root - DEBUG - Updating hall of fame
2020-10-24 16:28:56,632 - root - INFO - Completed generation 31; 5.2e+01s elapsed, 5e+01s avg, 1.6e+03s total. Expected time remaining: 6.5e+03s
2020-10-24 16:28:56,738 - root - INFO - #31 MAX:accuracy.mean: 0.23
2020-10-24 16:28:56,921 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:29:46,464 - root - DEBUG - Updating hall of fame
2020-10-24 16:29:50,172 - root - INFO - Completed generation 32; 5.3e+01s elapsed, 5e+01s avg, 1.6e+03s total. Expected time remaining: 6.5e+03s
2020-10-24 16:29:50,275 - root - INFO - #32 MAX:accuracy.mean: 0.24
2020-10-24 16:29:50,443 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:30:40,474 - root - DEBUG - Updating hall of fame
2020-10-24 16:30:42,517 - root - INFO - Completed generation 33; 5.2e+01s elapsed, 5e+01s avg, 1.7e+03s total. Expected time remaining: 6.4e+03s
2020-10-24 16:30:42,619 - root - INFO - #33 MAX:accuracy.mean: 0.23
2020-10-24 16:30:42,782 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:31:31,229 - root - DEBUG - Updating hall of fame
2020-10-24 16:31:33,468 - root - INFO - Completed generation 34; 5.1e+01s elapsed, 5e+01s avg, 1.7e+03s total. Expected time remaining: 6.4e+03s
2020-10-24 16:31:33,574 - root - INFO - #34 MAX:accuracy.mean: 0.23
2020-10-24 16:31:33,737 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:32:22,523 - root - DEBUG - Updating hall of fame
2020-10-24 16:32:24,392 - root - INFO - Completed generation 35; 5.1e+01s elapsed, 5e+01s avg, 1.8e+03s total. Expected time remaining: 6.3e+03s
2020-10-24 16:32:24,497 - root - INFO - #35 MAX:accuracy.mean: 0.23
2020-10-24 16:32:24,671 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:33:12,844 - root - DEBUG - Updating hall of fame
2020-10-24 16:33:14,660 - root - INFO - Completed generation 36; 5e+01s elapsed, 5e+01s avg, 1.8e+03s total. Expected time remaining: 6.3e+03s
2020-10-24 16:33:14,765 - root - INFO - #36 MAX:accuracy.mean: 0.24
2020-10-24 16:33:14,939 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:34:05,339 - root - DEBUG - Updating hall of fame
2020-10-24 16:34:07,621 - root - INFO - Completed generation 37; 5.3e+01s elapsed, 5.1e+01s avg, 1.9e+03s total. Expected time remaining: 6.2e+03s
2020-10-24 16:34:07,723 - root - INFO - #37 MAX:accuracy.mean: 0.26
2020-10-24 16:34:07,884 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:34:55,387 - root - DEBUG - Updating hall of fame
2020-10-24 16:34:57,332 - root - INFO - Completed generation 38; 5e+01s elapsed, 5.1e+01s avg, 1.9e+03s total. Expected time remaining: 6.2e+03s
2020-10-24 16:34:57,436 - root - INFO - #38 MAX:accuracy.mean: 0.22
2020-10-24 16:34:57,609 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:35:44,343 - root - DEBUG - Updating hall of fame
2020-10-24 16:35:46,568 - root - INFO - Completed generation 39; 4.9e+01s elapsed, 5e+01s avg, 2e+03s total. Expected time remaining: 6.1e+03s
2020-10-24 16:35:46,675 - root - INFO - #39 MAX:accuracy.mean: 0.22
2020-10-24 16:35:46,838 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:36:34,709 - root - DEBUG - Updating hall of fame
2020-10-24 16:36:37,491 - root - INFO - Completed generation 40; 5.1e+01s elapsed, 5e+01s avg, 2e+03s total. Expected time remaining: 6.1e+03s
2020-10-24 16:36:37,595 - root - INFO - #40 MAX:accuracy.mean: 0.23
2020-10-24 16:36:37,788 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:37:26,769 - root - DEBUG - Updating hall of fame
2020-10-24 16:37:30,501 - root - INFO - Completed generation 41; 5.3e+01s elapsed, 5.1e+01s avg, 2.1e+03s total. Expected time remaining: 6e+03s
2020-10-24 16:37:30,606 - root - INFO - #41 MAX:accuracy.mean: 0.26
2020-10-24 16:37:30,769 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:38:19,514 - root - DEBUG - Updating hall of fame
2020-10-24 16:38:23,431 - root - INFO - Completed generation 42; 5.3e+01s elapsed, 5.1e+01s avg, 2.1e+03s total. Expected time remaining: 6e+03s
2020-10-24 16:38:23,537 - root - INFO - #42 MAX:accuracy.mean: 0.28
2020-10-24 16:38:23,699 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:39:12,413 - root - DEBUG - Updating hall of fame
2020-10-24 16:39:14,438 - root - INFO - Completed generation 43; 5.1e+01s elapsed, 5.1e+01s avg, 2.2e+03s total. Expected time remaining: 5.9e+03s
2020-10-24 16:39:14,542 - root - INFO - #43 MAX:accuracy.mean: 0.22
2020-10-24 16:39:14,705 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:40:02,695 - root - DEBUG - Updating hall of fame
2020-10-24 16:40:03,771 - root - INFO - Completed generation 44; 4.9e+01s elapsed, 5.1e+01s avg, 2.2e+03s total. Expected time remaining: 5.9e+03s
2020-10-24 16:40:03,874 - root - INFO - #44 MAX:accuracy.mean: 0.24
2020-10-24 16:40:04,043 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:40:51,674 - root - DEBUG - Updating hall of fame
2020-10-24 16:40:53,207 - root - INFO - Completed generation 45; 4.9e+01s elapsed, 5.1e+01s avg, 2.3e+03s total. Expected time remaining: 5.8e+03s
2020-10-24 16:40:53,310 - root - INFO - #45 MAX:accuracy.mean: 0.24
2020-10-24 16:40:53,472 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:41:40,808 - root - DEBUG - Updating hall of fame
2020-10-24 16:41:43,065 - root - INFO - Completed generation 46; 5e+01s elapsed, 5.1e+01s avg, 2.3e+03s total. Expected time remaining: 5.8e+03s
2020-10-24 16:41:43,181 - root - INFO - #46 MAX:accuracy.mean: 0.23
2020-10-24 16:41:43,375 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:42:30,630 - root - DEBUG - Updating hall of fame
2020-10-24 16:42:33,275 - root - INFO - Completed generation 47; 5e+01s elapsed, 5.1e+01s avg, 2.4e+03s total. Expected time remaining: 5.7e+03s
2020-10-24 16:42:33,379 - root - INFO - #47 MAX:accuracy.mean: 0.24
2020-10-24 16:42:33,541 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:43:21,661 - root - DEBUG - Updating hall of fame
2020-10-24 16:43:23,044 - root - INFO - Completed generation 48; 5e+01s elapsed, 5.1e+01s avg, 2.4e+03s total. Expected time remaining: 5.7e+03s
2020-10-24 16:43:23,150 - root - INFO - #48 MAX:accuracy.mean: 0.23
2020-10-24 16:43:23,320 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:44:12,123 - root - DEBUG - Updating hall of fame
2020-10-24 16:44:12,744 - root - INFO - Completed generation 49; 5e+01s elapsed, 5e+01s avg, 2.5e+03s total. Expected time remaining: 5.6e+03s
2020-10-24 16:44:12,845 - root - INFO - #49 MAX:accuracy.mean: 0.27
2020-10-24 16:44:13,024 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:45:02,570 - root - DEBUG - Updating hall of fame
2020-10-24 16:45:05,020 - root - INFO - Completed generation 50; 5.2e+01s elapsed, 5.1e+01s avg, 2.5e+03s total. Expected time remaining: 5.6e+03s
2020-10-24 16:45:05,127 - root - INFO - #50 MAX:accuracy.mean: 0.22
2020-10-24 16:45:05,326 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:45:53,625 - root - DEBUG - Updating hall of fame
2020-10-24 16:45:54,975 - root - INFO - Completed generation 51; 5e+01s elapsed, 5.1e+01s avg, 2.6e+03s total. Expected time remaining: 5.5e+03s
2020-10-24 16:45:55,092 - root - INFO - #51 MAX:accuracy.mean: 0.24
2020-10-24 16:45:55,256 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:46:43,755 - root - DEBUG - Updating hall of fame
2020-10-24 16:46:45,996 - root - INFO - Completed generation 52; 5.1e+01s elapsed, 5.1e+01s avg, 2.6e+03s total. Expected time remaining: 5.5e+03s
2020-10-24 16:46:46,111 - root - INFO - #52 MAX:accuracy.mean: 0.25
2020-10-24 16:46:46,277 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:47:35,200 - root - DEBUG - Updating hall of fame
2020-10-24 16:47:36,980 - root - INFO - Completed generation 53; 5.1e+01s elapsed, 5.1e+01s avg, 2.7e+03s total. Expected time remaining: 5.4e+03s
2020-10-24 16:47:37,095 - root - INFO - #53 MAX:accuracy.mean: 0.25
2020-10-24 16:47:37,261 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:48:26,262 - root - DEBUG - Updating hall of fame
2020-10-24 16:48:28,863 - root - INFO - Completed generation 54; 5.2e+01s elapsed, 5.1e+01s avg, 2.7e+03s total. Expected time remaining: 5.4e+03s
2020-10-24 16:48:28,966 - root - INFO - #54 MAX:accuracy.mean: 0.26
2020-10-24 16:48:29,142 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:49:18,591 - root - DEBUG - Updating hall of fame
2020-10-24 16:49:20,734 - root - INFO - Completed generation 55; 5.2e+01s elapsed, 5.1e+01s avg, 2.8e+03s total. Expected time remaining: 5.3e+03s
2020-10-24 16:49:20,840 - root - INFO - #55 MAX:accuracy.mean: 0.25
2020-10-24 16:49:21,018 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:50:11,265 - root - DEBUG - Updating hall of fame
2020-10-24 16:50:14,189 - root - INFO - Completed generation 56; 5.3e+01s elapsed, 5.1e+01s avg, 2.8e+03s total. Expected time remaining: 5.3e+03s
2020-10-24 16:50:14,292 - root - INFO - #56 MAX:accuracy.mean: 0.25
2020-10-24 16:50:14,459 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:51:03,467 - root - DEBUG - Updating hall of fame
2020-10-24 16:51:06,146 - root - INFO - Completed generation 57; 5.2e+01s elapsed, 5.1e+01s avg, 2.9e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 16:51:06,249 - root - INFO - #57 MAX:accuracy.mean: 0.26
2020-10-24 16:51:06,416 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:51:55,305 - root - DEBUG - Updating hall of fame
2020-10-24 16:51:59,872 - root - INFO - Completed generation 58; 5.4e+01s elapsed, 5.1e+01s avg, 2.9e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 16:51:59,979 - root - INFO - #58 MAX:accuracy.mean: 0.26
2020-10-24 16:52:00,155 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:52:47,620 - root - DEBUG - Updating hall of fame
2020-10-24 16:52:50,363 - root - INFO - Completed generation 59; 5e+01s elapsed, 5.1e+01s avg, 3e+03s total. Expected time remaining: 5.1e+03s
2020-10-24 16:52:50,470 - root - INFO - #59 MAX:accuracy.mean: 0.25
2020-10-24 16:52:50,640 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:53:39,915 - root - DEBUG - Updating hall of fame
2020-10-24 16:53:41,833 - root - INFO - Completed generation 60; 5.1e+01s elapsed, 5.1e+01s avg, 3e+03s total. Expected time remaining: 5.1e+03s
2020-10-24 16:53:41,939 - root - INFO - #60 MAX:accuracy.mean: 0.27
2020-10-24 16:53:42,141 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:54:29,552 - root - DEBUG - Updating hall of fame
2020-10-24 16:54:31,869 - root - INFO - Completed generation 61; 5e+01s elapsed, 5.1e+01s avg, 3.1e+03s total. Expected time remaining: 5e+03s
2020-10-24 16:54:31,977 - root - INFO - #61 MAX:accuracy.mean: 0.29
2020-10-24 16:54:32,146 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:55:22,141 - root - DEBUG - Updating hall of fame
2020-10-24 16:55:24,846 - root - INFO - Completed generation 62; 5.3e+01s elapsed, 5.1e+01s avg, 3.1e+03s total. Expected time remaining: 5e+03s
2020-10-24 16:55:24,994 - root - INFO - #62 MAX:accuracy.mean: 0.27
2020-10-24 16:55:25,185 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:56:14,386 - root - DEBUG - Updating hall of fame
2020-10-24 16:56:16,596 - root - INFO - Completed generation 63; 5.2e+01s elapsed, 5.1e+01s avg, 3.2e+03s total. Expected time remaining: 4.9e+03s
2020-10-24 16:56:16,698 - root - INFO - #63 MAX:accuracy.mean: 0.29
2020-10-24 16:56:16,869 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:57:04,048 - root - DEBUG - Updating hall of fame
2020-10-24 16:57:05,996 - root - INFO - Completed generation 64; 4.9e+01s elapsed, 5.1e+01s avg, 3.2e+03s total. Expected time remaining: 4.9e+03s
2020-10-24 16:57:06,110 - root - INFO - #64 MAX:accuracy.mean: 0.27
2020-10-24 16:57:06,277 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:57:53,645 - root - DEBUG - Updating hall of fame
2020-10-24 16:57:55,824 - root - INFO - Completed generation 65; 5e+01s elapsed, 5.1e+01s avg, 3.3e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 16:57:55,933 - root - INFO - #65 MAX:accuracy.mean: 0.29
2020-10-24 16:57:56,101 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:58:43,933 - root - DEBUG - Updating hall of fame
2020-10-24 16:58:45,963 - root - INFO - Completed generation 66; 5e+01s elapsed, 5.1e+01s avg, 3.3e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 16:58:46,072 - root - INFO - #66 MAX:accuracy.mean: 0.28
2020-10-24 16:58:46,234 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:59:33,304 - root - DEBUG - Updating hall of fame
2020-10-24 16:59:35,096 - root - INFO - Completed generation 67; 4.9e+01s elapsed, 5.1e+01s avg, 3.4e+03s total. Expected time remaining: 4.7e+03s
2020-10-24 16:59:35,202 - root - INFO - #67 MAX:accuracy.mean: 0.28
2020-10-24 16:59:35,375 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:00:25,408 - root - DEBUG - Updating hall of fame
2020-10-24 17:00:27,562 - root - INFO - Completed generation 68; 5.2e+01s elapsed, 5.1e+01s avg, 3.4e+03s total. Expected time remaining: 4.7e+03s
2020-10-24 17:00:27,667 - root - INFO - #68 MAX:accuracy.mean: 0.29
2020-10-24 17:00:27,835 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:01:16,668 - root - DEBUG - Updating hall of fame
2020-10-24 17:01:20,018 - root - INFO - Completed generation 69; 5.2e+01s elapsed, 5.1e+01s avg, 3.5e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 17:01:20,123 - root - INFO - #69 MAX:accuracy.mean: 0.29
2020-10-24 17:01:20,295 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:02:11,520 - root - DEBUG - Updating hall of fame
2020-10-24 17:02:13,443 - root - INFO - Completed generation 70; 5.3e+01s elapsed, 5.1e+01s avg, 3.6e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 17:02:13,554 - root - INFO - #70 MAX:accuracy.mean: 0.3
2020-10-24 17:02:13,759 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:03:04,588 - root - DEBUG - Updating hall of fame
2020-10-24 17:03:06,933 - root - INFO - Completed generation 71; 5.3e+01s elapsed, 5.1e+01s avg, 3.6e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 17:03:07,051 - root - INFO - #71 MAX:accuracy.mean: 0.28
2020-10-24 17:03:07,219 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:03:58,069 - root - DEBUG - Updating hall of fame
2020-10-24 17:03:59,697 - root - INFO - Completed generation 72; 5.3e+01s elapsed, 5.1e+01s avg, 3.7e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 17:03:59,800 - root - INFO - #72 MAX:accuracy.mean: 0.28
2020-10-24 17:03:59,968 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:04:48,253 - root - DEBUG - Updating hall of fame
2020-10-24 17:04:49,719 - root - INFO - Completed generation 73; 5e+01s elapsed, 5.1e+01s avg, 3.7e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 17:04:49,827 - root - INFO - #73 MAX:accuracy.mean: 0.29
2020-10-24 17:04:49,996 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:05:37,817 - root - DEBUG - Updating hall of fame
2020-10-24 17:05:38,757 - root - INFO - Completed generation 74; 4.9e+01s elapsed, 5.1e+01s avg, 3.8e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 17:05:38,862 - root - INFO - #74 MAX:accuracy.mean: 0.28
2020-10-24 17:05:39,037 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:06:28,840 - root - DEBUG - Updating hall of fame
2020-10-24 17:06:30,747 - root - INFO - Completed generation 75; 5.2e+01s elapsed, 5.1e+01s avg, 3.8e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 17:06:30,852 - root - INFO - #75 MAX:accuracy.mean: 0.29
2020-10-24 17:06:31,030 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:07:22,649 - root - DEBUG - Updating hall of fame
2020-10-24 17:07:26,102 - root - INFO - Completed generation 76; 5.5e+01s elapsed, 5.1e+01s avg, 3.9e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 17:07:26,204 - root - INFO - #76 MAX:accuracy.mean: 0.29
2020-10-24 17:07:26,373 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:08:17,063 - root - DEBUG - Updating hall of fame
2020-10-24 17:08:19,778 - root - INFO - Completed generation 77; 5.4e+01s elapsed, 5.1e+01s avg, 3.9e+03s total. Expected time remaining: 4.2e+03s
2020-10-24 17:08:19,890 - root - INFO - #77 MAX:accuracy.mean: 0.29
2020-10-24 17:08:20,059 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:09:08,784 - root - DEBUG - Updating hall of fame
2020-10-24 17:09:11,577 - root - INFO - Completed generation 78; 5.2e+01s elapsed, 5.1e+01s avg, 4e+03s total. Expected time remaining: 4.2e+03s
2020-10-24 17:09:11,682 - root - INFO - #78 MAX:accuracy.mean: 0.3
2020-10-24 17:09:11,851 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:10:00,880 - root - DEBUG - Updating hall of fame
2020-10-24 17:10:04,195 - root - INFO - Completed generation 79; 5.3e+01s elapsed, 5.1e+01s avg, 4e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 17:10:04,296 - root - INFO - #79 MAX:accuracy.mean: 0.3
2020-10-24 17:10:04,465 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:10:52,063 - root - DEBUG - Updating hall of fame
2020-10-24 17:10:54,178 - root - INFO - Completed generation 80; 5e+01s elapsed, 5.1e+01s avg, 4.1e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 17:10:54,281 - root - INFO - #80 MAX:accuracy.mean: 0.29
2020-10-24 17:10:54,495 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:11:42,780 - root - DEBUG - Updating hall of fame
2020-10-24 17:11:44,702 - root - INFO - Completed generation 81; 5e+01s elapsed, 5.1e+01s avg, 4.1e+03s total. Expected time remaining: 4e+03s
2020-10-24 17:11:44,807 - root - INFO - #81 MAX:accuracy.mean: 0.29
2020-10-24 17:11:44,979 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:12:33,283 - root - DEBUG - Updating hall of fame
2020-10-24 17:12:34,848 - root - INFO - Completed generation 82; 5e+01s elapsed, 5.1e+01s avg, 4.2e+03s total. Expected time remaining: 4e+03s
2020-10-24 17:12:34,952 - root - INFO - #82 MAX:accuracy.mean: 0.3
2020-10-24 17:12:35,146 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:13:27,433 - root - DEBUG - Updating hall of fame
2020-10-24 17:13:29,112 - root - INFO - Completed generation 83; 5.4e+01s elapsed, 5.1e+01s avg, 4.2e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 17:13:29,219 - root - INFO - #83 MAX:accuracy.mean: 0.29
2020-10-24 17:13:29,394 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:14:18,359 - root - DEBUG - Updating hall of fame
2020-10-24 17:14:19,271 - root - INFO - Completed generation 84; 5e+01s elapsed, 5.1e+01s avg, 4.3e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 17:14:19,374 - root - INFO - #84 MAX:accuracy.mean: 0.3
2020-10-24 17:14:19,547 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:15:09,652 - root - DEBUG - Updating hall of fame
2020-10-24 17:15:10,481 - root - INFO - Completed generation 85; 5.1e+01s elapsed, 5.1e+01s avg, 4.3e+03s total. Expected time remaining: 3.8e+03s
2020-10-24 17:15:10,584 - root - INFO - #85 MAX:accuracy.mean: 0.3
2020-10-24 17:15:10,750 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:16:00,441 - root - DEBUG - Updating hall of fame
2020-10-24 17:16:01,802 - root - INFO - Completed generation 86; 5.1e+01s elapsed, 5.1e+01s avg, 4.4e+03s total. Expected time remaining: 3.8e+03s
2020-10-24 17:16:01,907 - root - INFO - #86 MAX:accuracy.mean: 0.3
2020-10-24 17:16:02,089 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:16:51,815 - root - DEBUG - Updating hall of fame
2020-10-24 17:16:53,222 - root - INFO - Completed generation 87; 5.1e+01s elapsed, 5.1e+01s avg, 4.4e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 17:16:53,327 - root - INFO - #87 MAX:accuracy.mean: 0.3
2020-10-24 17:16:53,494 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:17:42,753 - root - DEBUG - Updating hall of fame
2020-10-24 17:17:44,598 - root - INFO - Completed generation 88; 5.1e+01s elapsed, 5.1e+01s avg, 4.5e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 17:17:44,704 - root - INFO - #88 MAX:accuracy.mean: 0.31
2020-10-24 17:17:44,878 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:18:36,633 - root - DEBUG - Updating hall of fame
2020-10-24 17:18:37,902 - root - INFO - Completed generation 89; 5.3e+01s elapsed, 5.1e+01s avg, 4.5e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 17:18:38,005 - root - INFO - #89 MAX:accuracy.mean: 0.31
2020-10-24 17:18:38,175 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:19:30,338 - root - DEBUG - Updating hall of fame
2020-10-24 17:19:32,071 - root - INFO - Completed generation 90; 5.4e+01s elapsed, 5.1e+01s avg, 4.6e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 17:19:32,173 - root - INFO - #90 MAX:accuracy.mean: 0.31
2020-10-24 17:19:32,379 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:20:22,399 - root - DEBUG - Updating hall of fame
2020-10-24 17:20:23,514 - root - INFO - Completed generation 91; 5.1e+01s elapsed, 5.1e+01s avg, 4.6e+03s total. Expected time remaining: 3.5e+03s
2020-10-24 17:20:23,617 - root - INFO - #91 MAX:accuracy.mean: 0.31
2020-10-24 17:20:23,788 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:21:16,220 - root - DEBUG - Updating hall of fame
2020-10-24 17:21:17,611 - root - INFO - Completed generation 92; 5.4e+01s elapsed, 5.1e+01s avg, 4.7e+03s total. Expected time remaining: 3.5e+03s
2020-10-24 17:21:17,713 - root - INFO - #92 MAX:accuracy.mean: 0.32
2020-10-24 17:21:17,888 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:22:09,127 - root - DEBUG - Updating hall of fame
2020-10-24 17:22:10,467 - root - INFO - Completed generation 93; 5.3e+01s elapsed, 5.1e+01s avg, 4.7e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 17:22:10,569 - root - INFO - #93 MAX:accuracy.mean: 0.31
2020-10-24 17:22:10,740 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:23:01,071 - root - DEBUG - Updating hall of fame
2020-10-24 17:23:02,243 - root - INFO - Completed generation 94; 5.2e+01s elapsed, 5.1e+01s avg, 4.8e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 17:23:02,350 - root - INFO - #94 MAX:accuracy.mean: 0.3
2020-10-24 17:23:02,520 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:23:52,085 - root - DEBUG - Updating hall of fame
2020-10-24 17:23:53,207 - root - INFO - Completed generation 95; 5.1e+01s elapsed, 5.1e+01s avg, 4.8e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 17:23:53,308 - root - INFO - #95 MAX:accuracy.mean: 0.3
2020-10-24 17:23:53,472 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:24:43,465 - root - DEBUG - Updating hall of fame
2020-10-24 17:24:44,167 - root - INFO - Completed generation 96; 5.1e+01s elapsed, 5.1e+01s avg, 4.9e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 17:24:44,275 - root - INFO - #96 MAX:accuracy.mean: 0.31
2020-10-24 17:24:44,446 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:25:34,971 - root - DEBUG - Updating hall of fame
2020-10-24 17:25:35,808 - root - INFO - Completed generation 97; 5.2e+01s elapsed, 5.1e+01s avg, 5e+03s total. Expected time remaining: 3.2e+03s
2020-10-24 17:25:35,912 - root - INFO - #97 MAX:accuracy.mean: 0.32
2020-10-24 17:25:36,097 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:26:29,466 - root - DEBUG - Updating hall of fame
2020-10-24 17:26:30,163 - root - INFO - Completed generation 98; 5.4e+01s elapsed, 5.1e+01s avg, 5e+03s total. Expected time remaining: 3.2e+03s
2020-10-24 17:26:30,270 - root - INFO - #98 MAX:accuracy.mean: 0.32
2020-10-24 17:26:30,440 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:27:20,044 - root - DEBUG - Updating hall of fame
2020-10-24 17:27:21,606 - root - INFO - Completed generation 99; 5.1e+01s elapsed, 5.1e+01s avg, 5.1e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 17:27:21,712 - root - INFO - #99 MAX:accuracy.mean: 0.32
2020-10-24 17:27:21,889 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:28:10,420 - root - DEBUG - Updating hall of fame
2020-10-24 17:28:11,877 - root - INFO - Completed generation 100; 5e+01s elapsed, 5.1e+01s avg, 5.1e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 17:28:11,979 - root - INFO - #100 MAX:accuracy.mean: 0.31
2020-10-24 17:28:12,199 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:29:01,993 - root - DEBUG - Updating hall of fame
2020-10-24 17:29:04,404 - root - INFO - Completed generation 101; 5.2e+01s elapsed, 5.1e+01s avg, 5.2e+03s total. Expected time remaining: 3e+03s
2020-10-24 17:29:04,506 - root - INFO - #101 MAX:accuracy.mean: 0.32
2020-10-24 17:29:04,674 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:29:54,939 - root - DEBUG - Updating hall of fame
2020-10-24 17:29:56,569 - root - INFO - Completed generation 102; 5.2e+01s elapsed, 5.1e+01s avg, 5.2e+03s total. Expected time remaining: 3e+03s
2020-10-24 17:29:56,676 - root - INFO - #102 MAX:accuracy.mean: 0.31
2020-10-24 17:29:56,851 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:30:50,951 - root - DEBUG - Updating hall of fame
2020-10-24 17:30:52,435 - root - INFO - Completed generation 103; 5.6e+01s elapsed, 5.1e+01s avg, 5.3e+03s total. Expected time remaining: 2.9e+03s
2020-10-24 17:30:52,538 - root - INFO - #103 MAX:accuracy.mean: 0.31
2020-10-24 17:30:52,719 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:31:45,418 - root - DEBUG - Updating hall of fame
2020-10-24 17:31:46,823 - root - INFO - Completed generation 104; 5.4e+01s elapsed, 5.1e+01s avg, 5.3e+03s total. Expected time remaining: 2.9e+03s
2020-10-24 17:31:46,928 - root - INFO - #104 MAX:accuracy.mean: 0.32
2020-10-24 17:31:47,111 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:32:37,415 - root - DEBUG - Updating hall of fame
2020-10-24 17:32:39,878 - root - INFO - Completed generation 105; 5.3e+01s elapsed, 5.1e+01s avg, 5.4e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 17:32:39,982 - root - INFO - #105 MAX:accuracy.mean: 0.32
2020-10-24 17:32:40,165 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:33:30,596 - root - DEBUG - Updating hall of fame
2020-10-24 17:33:34,141 - root - INFO - Completed generation 106; 5.4e+01s elapsed, 5.1e+01s avg, 5.4e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 17:33:34,255 - root - INFO - #106 MAX:accuracy.mean: 0.31
2020-10-24 17:33:34,458 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:34:23,826 - root - DEBUG - Updating hall of fame
2020-10-24 17:34:25,668 - root - INFO - Completed generation 107; 5.1e+01s elapsed, 5.1e+01s avg, 5.5e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 17:34:25,773 - root - INFO - #107 MAX:accuracy.mean: 0.32
2020-10-24 17:34:25,959 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:35:19,064 - root - DEBUG - Updating hall of fame
2020-10-24 17:35:20,765 - root - INFO - Completed generation 108; 5.5e+01s elapsed, 5.1e+01s avg, 5.5e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 17:35:20,887 - root - INFO - #108 MAX:accuracy.mean: 0.31
2020-10-24 17:35:21,077 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:36:13,029 - root - DEBUG - Updating hall of fame
2020-10-24 17:36:14,248 - root - INFO - Completed generation 109; 5.3e+01s elapsed, 5.1e+01s avg, 5.6e+03s total. Expected time remaining: 2.6e+03s
2020-10-24 17:36:14,354 - root - INFO - #109 MAX:accuracy.mean: 0.32
2020-10-24 17:36:14,533 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:37:07,242 - root - DEBUG - Updating hall of fame
2020-10-24 17:37:09,232 - root - INFO - Completed generation 110; 5.5e+01s elapsed, 5.1e+01s avg, 5.6e+03s total. Expected time remaining: 2.6e+03s
2020-10-24 17:37:09,336 - root - INFO - #110 MAX:accuracy.mean: 0.32
2020-10-24 17:37:09,559 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:38:03,884 - root - DEBUG - Updating hall of fame
2020-10-24 17:38:05,874 - root - INFO - Completed generation 111; 5.6e+01s elapsed, 5.1e+01s avg, 5.7e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 17:38:05,976 - root - INFO - #111 MAX:accuracy.mean: 0.32
2020-10-24 17:38:06,147 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:38:55,685 - root - DEBUG - Updating hall of fame
2020-10-24 17:38:57,357 - root - INFO - Completed generation 112; 5.1e+01s elapsed, 5.1e+01s avg, 5.8e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 17:38:57,464 - root - INFO - #112 MAX:accuracy.mean: 0.32
2020-10-24 17:38:57,639 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:39:49,351 - root - DEBUG - Updating hall of fame
2020-10-24 17:39:51,811 - root - INFO - Completed generation 113; 5.4e+01s elapsed, 5.1e+01s avg, 5.8e+03s total. Expected time remaining: 2.4e+03s
2020-10-24 17:39:51,917 - root - INFO - #113 MAX:accuracy.mean: 0.34
2020-10-24 17:39:52,091 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:40:43,154 - root - DEBUG - Updating hall of fame
2020-10-24 17:40:45,673 - root - INFO - Completed generation 114; 5.4e+01s elapsed, 5.1e+01s avg, 5.9e+03s total. Expected time remaining: 2.4e+03s
2020-10-24 17:40:45,779 - root - INFO - #114 MAX:accuracy.mean: 0.32
2020-10-24 17:40:45,951 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:41:38,195 - root - DEBUG - Updating hall of fame
2020-10-24 17:41:41,013 - root - INFO - Completed generation 115; 5.5e+01s elapsed, 5.1e+01s avg, 5.9e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 17:41:41,123 - root - INFO - #115 MAX:accuracy.mean: 0.32
2020-10-24 17:41:41,298 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:42:35,549 - root - DEBUG - Updating hall of fame
2020-10-24 17:42:38,236 - root - INFO - Completed generation 116; 5.7e+01s elapsed, 5.1e+01s avg, 6e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 17:42:38,340 - root - INFO - #116 MAX:accuracy.mean: 0.34
2020-10-24 17:42:38,505 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:43:29,676 - root - DEBUG - Updating hall of fame
2020-10-24 17:43:32,095 - root - INFO - Completed generation 117; 5.4e+01s elapsed, 5.2e+01s avg, 6e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 17:43:32,197 - root - INFO - #117 MAX:accuracy.mean: 0.33
2020-10-24 17:43:32,369 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:44:23,632 - root - DEBUG - Updating hall of fame
2020-10-24 17:44:26,257 - root - INFO - Completed generation 118; 5.4e+01s elapsed, 5.2e+01s avg, 6.1e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 17:44:26,359 - root - INFO - #118 MAX:accuracy.mean: 0.34
2020-10-24 17:44:26,528 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:45:18,420 - root - DEBUG - Updating hall of fame
2020-10-24 17:45:20,855 - root - INFO - Completed generation 119; 5.4e+01s elapsed, 5.2e+01s avg, 6.1e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 17:45:20,958 - root - INFO - #119 MAX:accuracy.mean: 0.34
2020-10-24 17:45:21,142 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:46:12,462 - root - DEBUG - Updating hall of fame
2020-10-24 17:46:13,954 - root - INFO - Completed generation 120; 5.3e+01s elapsed, 5.2e+01s avg, 6.2e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 17:46:14,070 - root - INFO - #120 MAX:accuracy.mean: 0.33
2020-10-24 17:46:14,287 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:47:06,523 - root - DEBUG - Updating hall of fame
2020-10-24 17:47:07,830 - root - INFO - Completed generation 121; 5.4e+01s elapsed, 5.2e+01s avg, 6.2e+03s total. Expected time remaining: 2e+03s
2020-10-24 17:47:07,936 - root - INFO - #121 MAX:accuracy.mean: 0.33
2020-10-24 17:47:08,117 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:47:59,588 - root - DEBUG - Updating hall of fame
2020-10-24 17:48:01,265 - root - INFO - Completed generation 122; 5.3e+01s elapsed, 5.2e+01s avg, 6.3e+03s total. Expected time remaining: 2e+03s
2020-10-24 17:48:01,370 - root - INFO - #122 MAX:accuracy.mean: 0.34
2020-10-24 17:48:01,540 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:48:53,767 - root - DEBUG - Updating hall of fame
2020-10-24 17:48:56,057 - root - INFO - Completed generation 123; 5.5e+01s elapsed, 5.2e+01s avg, 6.3e+03s total. Expected time remaining: 1.9e+03s
2020-10-24 17:48:56,159 - root - INFO - #123 MAX:accuracy.mean: 0.33
2020-10-24 17:48:56,334 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:49:48,829 - root - DEBUG - Updating hall of fame
2020-10-24 17:49:51,207 - root - INFO - Completed generation 124; 5.5e+01s elapsed, 5.2e+01s avg, 6.4e+03s total. Expected time remaining: 1.9e+03s
2020-10-24 17:49:51,314 - root - INFO - #124 MAX:accuracy.mean: 0.33
2020-10-24 17:49:51,486 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:50:42,470 - root - DEBUG - Updating hall of fame
2020-10-24 17:50:44,071 - root - INFO - Completed generation 125; 5.3e+01s elapsed, 5.2e+01s avg, 6.5e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 17:50:44,173 - root - INFO - #125 MAX:accuracy.mean: 0.34
2020-10-24 17:50:44,352 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:51:40,316 - root - DEBUG - Updating hall of fame
2020-10-24 17:51:43,229 - root - INFO - Completed generation 126; 5.9e+01s elapsed, 5.2e+01s avg, 6.5e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 17:51:43,332 - root - INFO - #126 MAX:accuracy.mean: 0.33
2020-10-24 17:51:43,506 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:52:36,723 - root - DEBUG - Updating hall of fame
2020-10-24 17:52:38,294 - root - INFO - Completed generation 127; 5.5e+01s elapsed, 5.2e+01s avg, 6.6e+03s total. Expected time remaining: 1.7e+03s
2020-10-24 17:52:38,397 - root - INFO - #127 MAX:accuracy.mean: 0.33
2020-10-24 17:52:38,575 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:53:33,204 - root - DEBUG - Updating hall of fame
2020-10-24 17:53:35,202 - root - INFO - Completed generation 128; 5.7e+01s elapsed, 5.2e+01s avg, 6.6e+03s total. Expected time remaining: 1.7e+03s
2020-10-24 17:53:35,306 - root - INFO - #128 MAX:accuracy.mean: 0.34
2020-10-24 17:53:35,483 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:54:29,448 - root - DEBUG - Updating hall of fame
2020-10-24 17:54:31,518 - root - INFO - Completed generation 129; 5.6e+01s elapsed, 5.2e+01s avg, 6.7e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 17:54:31,621 - root - INFO - #129 MAX:accuracy.mean: 0.35
2020-10-24 17:54:31,798 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:55:27,392 - root - DEBUG - Updating hall of fame
2020-10-24 17:55:29,431 - root - INFO - Completed generation 130; 5.8e+01s elapsed, 5.2e+01s avg, 6.7e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 17:55:29,535 - root - INFO - #130 MAX:accuracy.mean: 0.34
2020-10-24 17:55:29,762 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:56:24,163 - root - DEBUG - Updating hall of fame
2020-10-24 17:56:26,442 - root - INFO - Completed generation 131; 5.7e+01s elapsed, 5.2e+01s avg, 6.8e+03s total. Expected time remaining: 1.5e+03s
2020-10-24 17:56:26,550 - root - INFO - #131 MAX:accuracy.mean: 0.35
2020-10-24 17:56:26,734 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:57:20,054 - root - DEBUG - Updating hall of fame
2020-10-24 17:57:22,279 - root - INFO - Completed generation 132; 5.6e+01s elapsed, 5.2e+01s avg, 6.9e+03s total. Expected time remaining: 1.5e+03s
2020-10-24 17:57:22,385 - root - INFO - #132 MAX:accuracy.mean: 0.35
2020-10-24 17:57:22,558 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:58:17,934 - root - DEBUG - Updating hall of fame
2020-10-24 17:58:19,461 - root - INFO - Completed generation 133; 5.7e+01s elapsed, 5.2e+01s avg, 6.9e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 17:58:19,564 - root - INFO - #133 MAX:accuracy.mean: 0.33
2020-10-24 17:58:19,733 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 17:59:13,797 - root - DEBUG - Updating hall of fame
2020-10-24 17:59:14,544 - root - INFO - Completed generation 134; 5.5e+01s elapsed, 5.2e+01s avg, 7e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 17:59:14,648 - root - INFO - #134 MAX:accuracy.mean: 0.33
2020-10-24 17:59:14,813 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:00:05,908 - root - DEBUG - Updating hall of fame
2020-10-24 18:00:07,633 - root - INFO - Completed generation 135; 5.3e+01s elapsed, 5.2e+01s avg, 7e+03s total. Expected time remaining: 1.3e+03s
2020-10-24 18:00:07,739 - root - INFO - #135 MAX:accuracy.mean: 0.33
2020-10-24 18:00:07,910 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:01:00,084 - root - DEBUG - Updating hall of fame
2020-10-24 18:01:01,039 - root - INFO - Completed generation 136; 5.3e+01s elapsed, 5.2e+01s avg, 7.1e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 18:01:01,142 - root - INFO - #136 MAX:accuracy.mean: 0.33
2020-10-24 18:01:01,315 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:01:52,823 - root - DEBUG - Updating hall of fame
2020-10-24 18:01:54,512 - root - INFO - Completed generation 137; 5.3e+01s elapsed, 5.2e+01s avg, 7.1e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 18:01:54,615 - root - INFO - #137 MAX:accuracy.mean: 0.33
2020-10-24 18:01:54,850 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:02:46,725 - root - DEBUG - Updating hall of fame
2020-10-24 18:02:48,731 - root - INFO - Completed generation 138; 5.4e+01s elapsed, 5.2e+01s avg, 7.2e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 18:02:48,835 - root - INFO - #138 MAX:accuracy.mean: 0.34
2020-10-24 18:02:49,007 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:03:39,982 - root - DEBUG - Updating hall of fame
2020-10-24 18:03:41,112 - root - INFO - Completed generation 139; 5.2e+01s elapsed, 5.2e+01s avg, 7.2e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 18:03:41,214 - root - INFO - #139 MAX:accuracy.mean: 0.34
2020-10-24 18:03:41,387 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:04:32,421 - root - DEBUG - Updating hall of fame
2020-10-24 18:04:34,455 - root - INFO - Completed generation 140; 5.3e+01s elapsed, 5.2e+01s avg, 7.3e+03s total. Expected time remaining: 1e+03s
2020-10-24 18:04:34,559 - root - INFO - #140 MAX:accuracy.mean: 0.34
2020-10-24 18:04:34,788 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:05:30,727 - root - DEBUG - Updating hall of fame
2020-10-24 18:05:32,486 - root - INFO - Completed generation 141; 5.8e+01s elapsed, 5.2e+01s avg, 7.3e+03s total. Expected time remaining: 9.9e+02s
2020-10-24 18:05:32,588 - root - INFO - #141 MAX:accuracy.mean: 0.35
2020-10-24 18:05:32,760 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:06:24,695 - root - DEBUG - Updating hall of fame
2020-10-24 18:06:26,103 - root - INFO - Completed generation 142; 5.4e+01s elapsed, 5.2e+01s avg, 7.4e+03s total. Expected time remaining: 9.4e+02s
2020-10-24 18:06:26,209 - root - INFO - #142 MAX:accuracy.mean: 0.35
2020-10-24 18:06:26,374 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:07:20,067 - root - DEBUG - Updating hall of fame
2020-10-24 18:07:21,925 - root - INFO - Completed generation 143; 5.6e+01s elapsed, 5.2e+01s avg, 7.5e+03s total. Expected time remaining: 8.9e+02s
2020-10-24 18:07:22,033 - root - INFO - #143 MAX:accuracy.mean: 0.33
2020-10-24 18:07:22,205 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:08:13,762 - root - DEBUG - Updating hall of fame
2020-10-24 18:08:14,450 - root - INFO - Completed generation 144; 5.2e+01s elapsed, 5.2e+01s avg, 7.5e+03s total. Expected time remaining: 8.3e+02s
2020-10-24 18:08:14,554 - root - INFO - #144 MAX:accuracy.mean: 0.33
2020-10-24 18:08:14,728 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:09:05,667 - root - DEBUG - Updating hall of fame
2020-10-24 18:09:06,913 - root - INFO - Completed generation 145; 5.2e+01s elapsed, 5.2e+01s avg, 7.6e+03s total. Expected time remaining: 7.8e+02s
2020-10-24 18:09:07,019 - root - INFO - #145 MAX:accuracy.mean: 0.33
2020-10-24 18:09:07,187 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:09:59,758 - root - DEBUG - Updating hall of fame
2020-10-24 18:10:01,010 - root - INFO - Completed generation 146; 5.4e+01s elapsed, 5.2e+01s avg, 7.6e+03s total. Expected time remaining: 7.3e+02s
2020-10-24 18:10:01,116 - root - INFO - #146 MAX:accuracy.mean: 0.34
2020-10-24 18:10:01,283 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:10:54,963 - root - DEBUG - Updating hall of fame
2020-10-24 18:10:57,683 - root - INFO - Completed generation 147; 5.7e+01s elapsed, 5.2e+01s avg, 7.7e+03s total. Expected time remaining: 6.8e+02s
2020-10-24 18:10:57,789 - root - INFO - #147 MAX:accuracy.mean: 0.33
2020-10-24 18:10:57,968 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:11:49,525 - root - DEBUG - Updating hall of fame
2020-10-24 18:11:51,519 - root - INFO - Completed generation 148; 5.4e+01s elapsed, 5.2e+01s avg, 7.7e+03s total. Expected time remaining: 6.3e+02s
2020-10-24 18:11:51,624 - root - INFO - #148 MAX:accuracy.mean: 0.33
2020-10-24 18:11:51,795 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:12:43,506 - root - DEBUG - Updating hall of fame
2020-10-24 18:12:44,497 - root - INFO - Completed generation 149; 5.3e+01s elapsed, 5.2e+01s avg, 7.8e+03s total. Expected time remaining: 5.7e+02s
2020-10-24 18:12:44,600 - root - INFO - #149 MAX:accuracy.mean: 0.33
2020-10-24 18:12:44,766 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:13:37,441 - root - DEBUG - Updating hall of fame
2020-10-24 18:13:39,125 - root - INFO - Completed generation 150; 5.5e+01s elapsed, 5.2e+01s avg, 7.8e+03s total. Expected time remaining: 5.2e+02s
2020-10-24 18:13:39,228 - root - INFO - #150 MAX:accuracy.mean: 0.33
2020-10-24 18:13:39,448 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:14:31,931 - root - DEBUG - Updating hall of fame
2020-10-24 18:14:32,456 - root - INFO - Completed generation 151; 5.3e+01s elapsed, 5.2e+01s avg, 7.9e+03s total. Expected time remaining: 4.7e+02s
2020-10-24 18:14:32,561 - root - INFO - #151 MAX:accuracy.mean: 0.33
2020-10-24 18:14:32,744 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:15:27,765 - root - DEBUG - Updating hall of fame
2020-10-24 18:15:29,292 - root - INFO - Completed generation 152; 5.7e+01s elapsed, 5.2e+01s avg, 7.9e+03s total. Expected time remaining: 4.2e+02s
2020-10-24 18:15:29,398 - root - INFO - #152 MAX:accuracy.mean: 0.33
2020-10-24 18:15:29,567 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:16:24,628 - root - DEBUG - Updating hall of fame
2020-10-24 18:16:25,955 - root - INFO - Completed generation 153; 5.7e+01s elapsed, 5.2e+01s avg, 8e+03s total. Expected time remaining: 3.7e+02s
2020-10-24 18:16:26,090 - root - INFO - #153 MAX:accuracy.mean: 0.33
2020-10-24 18:16:26,270 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:17:22,750 - root - DEBUG - Updating hall of fame
2020-10-24 18:17:23,302 - root - INFO - Completed generation 154; 5.7e+01s elapsed, 5.2e+01s avg, 8.1e+03s total. Expected time remaining: 3.1e+02s
2020-10-24 18:17:23,405 - root - INFO - #154 MAX:accuracy.mean: 0.33
2020-10-24 18:17:23,580 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:18:17,443 - root - DEBUG - Updating hall of fame
2020-10-24 18:18:18,723 - root - INFO - Completed generation 155; 5.5e+01s elapsed, 5.2e+01s avg, 8.1e+03s total. Expected time remaining: 2.6e+02s
2020-10-24 18:18:18,827 - root - INFO - #155 MAX:accuracy.mean: 0.34
2020-10-24 18:18:19,004 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:19:10,627 - root - DEBUG - Updating hall of fame
2020-10-24 18:19:11,428 - root - INFO - Completed generation 156; 5.3e+01s elapsed, 5.2e+01s avg, 8.2e+03s total. Expected time remaining: 2.1e+02s
2020-10-24 18:19:11,530 - root - INFO - #156 MAX:accuracy.mean: 0.35
2020-10-24 18:19:11,704 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:20:06,858 - root - DEBUG - Updating hall of fame
2020-10-24 18:20:09,729 - root - INFO - Completed generation 157; 5.8e+01s elapsed, 5.2e+01s avg, 8.2e+03s total. Expected time remaining: 1.6e+02s
2020-10-24 18:20:09,832 - root - INFO - #157 MAX:accuracy.mean: 0.35
2020-10-24 18:20:10,008 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:21:00,918 - root - DEBUG - Updating hall of fame
2020-10-24 18:21:02,409 - root - INFO - Completed generation 158; 5.3e+01s elapsed, 5.2e+01s avg, 8.3e+03s total. Expected time remaining: 1e+02s
2020-10-24 18:21:02,513 - root - INFO - #158 MAX:accuracy.mean: 0.34
2020-10-24 18:21:02,693 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:21:58,013 - root - DEBUG - Updating hall of fame
2020-10-24 18:22:00,850 - root - INFO - Completed generation 159; 5.8e+01s elapsed, 5.2e+01s avg, 8.3e+03s total. Expected time remaining: 5.2e+01s
2020-10-24 18:22:00,958 - root - INFO - #159 MAX:accuracy.mean: 0.34
2020-10-24 18:22:01,135 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:22:54,857 - root - DEBUG - Updating hall of fame
2020-10-24 18:22:57,359 - root - INFO - Completed generation 160; 5.6e+01s elapsed, 5.2e+01s avg, 8.4e+03s total. Expected time remaining: 0.0s
2020-10-24 18:22:57,466 - root - INFO - #160 MAX:accuracy.mean: 0.33
2020-10-24 18:22:58,514 - root - DEBUG - Loaded 10000 samples.
2020-10-24 18:22:58,574 - root - INFO - Evaluating indivs in hall of fame.
2020-10-24 18:26:21,874 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-24 18:26:21,888 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,889 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-24 18:26:21,890 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,890 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,890 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,891 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-24 18:26:21,891 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,891 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,892 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,892 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:21,892 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,893 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,893 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-24 18:26:21,893 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,894 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,895 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,895 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,895 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,896 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,896 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,896 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,897 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,897 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,897 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,897 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,898 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,898 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-24 18:26:21,899 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,899 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,899 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,899 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,899 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,899 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,900 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,900 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,900 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,900 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:21,900 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,900 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium-Italic.ttf) italic normal medium normal>) = 11.145
2020-10-24 18:26:21,901 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,901 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,901 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,901 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,902 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:21,902 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,902 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,902 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,902 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,902 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:21,902 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,902 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,903 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,903 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,903 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (lobster.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,903 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,903 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,904 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,904 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bold Oblique' (UniversalisADFStd-BoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:21,904 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:21,904 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,904 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,905 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,905 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,905 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,905 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,905 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,906 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,906 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,906 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,906 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,906 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Solid-900.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:21,907 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:21,908 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,908 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:21,909 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:21,909 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,909 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,909 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,909 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,910 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,910 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,910 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,910 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,910 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,910 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 18:26:21,911 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,911 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,911 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,911 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,912 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,912 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,912 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,912 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,912 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,913 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,913 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,913 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,913 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,913 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,913 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,913 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,914 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,914 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,914 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,914 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,914 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBoldItalic.otf) italic normal semibold normal>) = 11.24
2020-10-24 18:26:21,914 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,915 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:21,915 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,915 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 18:26:21,915 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 18:26:21,915 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,915 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,916 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
2020-10-24 18:26:21,916 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,916 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,916 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,917 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,917 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,917 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 18:26:21,917 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,917 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,918 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,918 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,918 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,918 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,919 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,919 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,919 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,921 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Gazis' (GFSGazis.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,921 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,921 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,921 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,921 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,921 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,922 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,922 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,922 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Brands' (Font Awesome 5 Brands-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,926 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,926 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,926 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,926 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:21,926 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,926 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,927 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal light condensed>) = 11.44
2020-10-24 18:26:21,927 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,927 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,927 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,930 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,930 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,930 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,930 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenic.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,930 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-24 18:26:21,931 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,931 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,931 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS BodoniClassic' (GFSBodoniClassic.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,931 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:21,931 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,932 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,932 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:21,932 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal book normal>) = 11.05
2020-10-24 18:26:21,932 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,932 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,932 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:21,932 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:21,936 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,936 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-LightItalic.otf) italic normal light normal>) = 11.24
2020-10-24 18:26:21,936 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:21,937 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,937 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 18:26:21,937 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:21,938 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 18:26:21,938 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,938 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,938 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,939 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,939 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RBI.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,939 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,940 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,940 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Display O' (LinLibertine_DR.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,940 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,940 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,940 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,940 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:21,940 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,941 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,941 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,941 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:21,941 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:21,941 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 18:26:21,941 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,943 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:21,944 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,944 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,944 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
2020-10-24 18:26:21,944 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,944 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,945 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2020-10-24 18:26:21,946 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,947 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:21,947 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,947 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:21,947 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:21,947 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:21,948 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:21,948 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 18:26:22,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZ.otf) normal normal semibold normal>) = 10.24
2020-10-24 18:26:22,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2020-10-24 18:26:22,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard Sans' (BagnardSans.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
2020-10-24 18:26:22,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal light condensed>) = 10.44
2020-10-24 18:26:22,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZI.otf) italic normal semibold normal>) = 11.24
2020-10-24 18:26:22,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-24 18:26:22,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-boldslanted.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-24 18:26:22,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,044 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,044 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,044 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-24 18:26:22,044 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,044 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,044 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,044 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,045 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,045 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,045 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,045 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-24 18:26:22,045 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,046 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,046 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,046 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,046 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,046 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 18:26:22,046 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,046 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,047 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand_Dash.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,047 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,047 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,047 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,047 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,047 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,047 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,048 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,048 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,048 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,048 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,049 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,049 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,049 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-slanted.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,049 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,049 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,049 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,049 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,050 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,050 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,050 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,050 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,050 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,050 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,051 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,051 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal book normal>) = 11.05
2020-10-24 18:26:22,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2020-10-24 18:26:22,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Asana Math' (Asana-Math.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 18:26:22,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-24 18:26:22,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidot.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 18:26:22,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 18:26:22,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
2020-10-24 18:26:22,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareB.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 18:26:22,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
2020-10-24 18:26:22,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Medium.otf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCondObl.otf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot Classic' (GFSDidotClassic.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-24 18:26:22,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard' (Bagnard.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,218 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,218 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,218 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:22,218 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,219 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,219 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,219 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,219 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,219 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,219 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,219 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,220 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,220 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,220 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,220 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,221 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,221 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,221 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,221 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,222 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,222 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,222 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,222 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,222 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2020-10-24 18:26:22,222 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 18:26:22,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 18:26:22,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,224 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,224 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,224 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,226 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,226 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,226 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,226 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,226 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,228 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Light.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,228 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,229 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,229 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,229 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,229 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 18:26:22,229 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2020-10-24 18:26:22,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSArtemisiaBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
2020-10-24 18:26:22,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundR.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-MediumItalic.otf) italic normal medium normal>) = 11.145
2020-10-24 18:26:22,235 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,235 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,235 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,235 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,235 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
2020-10-24 18:26:22,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Solomos' (GFSSolomos.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-CondOblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-24 18:26:22,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 18:26:22,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,248 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,248 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,248 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Olga' (GFSOlga.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,248 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,249 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,249 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,249 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,249 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oblique' (UniversalisADFStd-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundB.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:22,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 700 normal>) = 11.335
2020-10-24 18:26:22,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphorigenic' (euphorigenic.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal regular condensed>) = 10.25
2020-10-24 18:26:22,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-LightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 18:26:22,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Complutum' (GFSPolyglot.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,288 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,288 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,288 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,288 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,288 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,289 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,289 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,289 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,289 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,290 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,290 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,290 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,290 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,290 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,290 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,291 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,291 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 18:26:22,291 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,291 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran' (amiri-quran.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,291 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,292 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,292 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,292 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,292 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum Keyboard O' (LinBiolinum_K.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,292 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,292 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,292 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,293 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,293 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,293 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisia.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,293 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,293 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,293 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,294 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,294 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,294 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 18:26:22,294 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,294 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,294 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,294 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,295 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,295 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,295 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Initials O' (LinLibertine_I.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,295 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Mono O' (LinLibertine_M.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,295 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,295 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,295 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,295 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,296 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,296 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,296 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,296 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,296 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,296 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,296 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,297 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,297 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 18:26:22,297 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,297 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,297 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,297 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,298 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,298 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
2020-10-24 18:26:22,298 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,298 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,298 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,298 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,298 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
2020-10-24 18:26:22,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran Colored' (amiri-quran-colored.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBold.otf) normal normal semibold normal>) = 10.24
2020-10-24 18:26:22,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:22,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Theokritos' (GFSTheokritos.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal demi condensed>) = 11.44
2020-10-24 18:26:22,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 18:26:22,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareR.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-24 18:26:22,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,312 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/data/Lab/rewann/venv/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-24 18:26:22,424 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-10-24 18:26:22,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-24 18:26:22,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-24 18:26:22,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-24 18:26:22,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-24 18:26:22,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium-Italic.ttf) italic normal medium normal>) = 11.145
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (lobster.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bold Oblique' (UniversalisADFStd-BoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,434 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,435 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,436 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,436 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,436 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,436 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Solid-900.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,436 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,436 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,436 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,436 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,437 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,437 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,437 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,437 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,437 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,437 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,437 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,437 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,438 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,438 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,438 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,438 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,438 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,438 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 18:26:22,438 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,438 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,439 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,440 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBoldItalic.otf) italic normal semibold normal>) = 11.24
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
2020-10-24 18:26:22,441 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,442 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,442 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,442 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,442 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,442 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 18:26:22,442 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,442 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,443 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,443 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,443 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,443 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,443 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,443 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,444 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,444 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Gazis' (GFSGazis.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,444 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,444 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,444 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,444 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,444 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,445 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,445 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,445 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Brands' (Font Awesome 5 Brands-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,445 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,445 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,445 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal light condensed>) = 11.44
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,446 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenic.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS BodoniClassic' (GFSBodoniClassic.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,447 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal book normal>) = 11.05
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-LightItalic.otf) italic normal light normal>) = 11.24
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 18:26:22,448 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RBI.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Display O' (LinLibertine_DR.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,449 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 18:26:22,450 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,451 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,452 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZ.otf) normal normal semibold normal>) = 10.24
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,453 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,454 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard Sans' (BagnardSans.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,455 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,456 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal light condensed>) = 10.44
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,457 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,458 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,458 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,458 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,458 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,458 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,458 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,458 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,459 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZI.otf) italic normal semibold normal>) = 11.24
2020-10-24 18:26:22,459 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,459 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-24 18:26:22,459 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,459 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,459 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,459 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,459 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-boldslanted.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-24 18:26:22,460 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,461 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,461 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,461 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,461 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-24 18:26:22,461 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,461 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,461 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,462 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,463 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,463 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 18:26:22,463 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,463 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,463 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand_Dash.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,463 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,463 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,463 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,464 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,465 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-slanted.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,465 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,465 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,465 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,465 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,465 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,465 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,465 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,466 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,467 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal book normal>) = 11.05
2020-10-24 18:26:22,467 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,467 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,467 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,467 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,467 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,467 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,467 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Asana Math' (Asana-Math.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,468 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,469 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,469 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,469 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,469 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,469 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,469 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 18:26:22,469 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,469 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidot.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,470 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,471 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 18:26:22,471 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 18:26:22,471 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,471 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,471 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,471 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,471 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,471 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
2020-10-24 18:26:22,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareB.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 18:26:22,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
2020-10-24 18:26:22,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Medium.otf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCondObl.otf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot Classic' (GFSDidotClassic.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard' (Bagnard.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:22,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Light.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSArtemisiaBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundR.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-MediumItalic.otf) italic normal medium normal>) = 11.145
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Solomos' (GFSSolomos.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-CondOblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Olga' (GFSOlga.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oblique' (UniversalisADFStd-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundB.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 700 normal>) = 11.335
2020-10-24 18:26:22,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphorigenic' (euphorigenic.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal regular condensed>) = 10.25
2020-10-24 18:26:22,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-LightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Complutum' (GFSPolyglot.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaBold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 18:26:22,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran' (amiri-quran.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum Keyboard O' (LinBiolinum_K.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisia.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 18:26:22,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Initials O' (LinLibertine_I.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Mono O' (LinLibertine_M.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
2020-10-24 18:26:22,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 18:26:22,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 18:26:22,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran Colored' (amiri-quran-colored.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBold.otf) normal normal semibold normal>) = 10.24
2020-10-24 18:26:22,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Theokritos' (GFSTheokritos.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal demi condensed>) = 11.44
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareR.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 18:26:22,528 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/data/Lab/rewann/venv/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-24 18:26:27,977 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f563b694f10>
2020-10-24 18:26:27,978 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:26:27,978 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f563b694f10>
2020-10-24 18:26:27,978 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:26:33,360 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f5617889eb0>
2020-10-24 18:26:33,360 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:26:33,360 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f5617889eb0>
2020-10-24 18:26:33,360 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:26:38,695 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f562407b670>
2020-10-24 18:26:38,695 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:26:38,695 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f562407b670>
2020-10-24 18:26:38,695 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:26:43,859 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f563bf56130>
2020-10-24 18:26:43,860 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:26:43,860 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f563bf56130>
2020-10-24 18:26:43,860 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:26:48,985 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f561794f490>
2020-10-24 18:26:48,985 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:26:48,985 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f561794f490>
2020-10-24 18:26:48,985 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:26:53,881 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f5617a6bca0>
2020-10-24 18:26:53,882 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:26:53,882 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f5617a6bca0>
2020-10-24 18:26:53,882 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:26:58,715 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f56173f9190>
2020-10-24 18:26:58,716 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:26:58,716 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f56173f9190>
2020-10-24 18:26:58,716 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:27:04,297 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f5617536a30>
2020-10-24 18:27:04,297 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:27:04,297 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f5617536a30>
2020-10-24 18:27:04,297 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:27:09,220 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f5617b3ddf0>
2020-10-24 18:27:09,221 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:27:09,221 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f5617b3ddf0>
2020-10-24 18:27:09,221 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:27:14,069 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f561789b760>
2020-10-24 18:27:14,070 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 18:27:14,070 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f561789b760>
2020-10-24 18:27:14,070 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 18:27:17,644 - root - INFO - Completed excution.
