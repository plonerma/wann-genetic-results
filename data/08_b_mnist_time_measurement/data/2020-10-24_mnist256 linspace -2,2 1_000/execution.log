2020-10-24 14:09:58,102 - root - INFO - Package version 0.1.1
2020-10-24 14:09:58,102 - root - INFO - Saving data at /data/Lab/rewann/wann-results/data/mnist_extensive/time_measurement/data/2020-10-24_mnist256 linspace -2,2 1_000.
2020-10-24 14:09:58,102 - root - DEBUG - Loading training dataset
2020-10-24 14:10:01,418 - root - DEBUG - Loaded 60000 samples.
2020-10-24 14:10:01,419 - root - DEBUG - Running experiments with the following parameters:
debug = false
experiment_name = "mnist256 linspace -2,2 1"
experiment_path = "data/2020-10-24_mnist256 linspace -2,2 1_000"

[config]
num_workers = 1
debug = true
backend = "torch"

[postopt]
run_postopt = true
compile_report = true
num_weights = 100
num_samples = -1

[sampling]
seed = 1
post_init_seed = false
distribution = "linspace"
lower_bound = -2
upper_bound = 2
mean = 0
sigma = 0.5
num_weights_per_iteration = 6
num_samples_per_iteration = 2000
hof_evaluation_iterations = 4

[task]
name = "mnist256"
sample_order_seed = 0
test_portion = 0.2
sample_length = 10
num_categories = 8

[storage]
data_base_path = "data"
log_filename = "execution.log"
commit_elite_freq = -1
commit_metrics_freq = 10
include_prediction_records = false

[population]
num_generations = 160
size = 320
initial_enabled_edge_prob = 0.05
initial_genes = "full"
initial_func = "random"
hof_size = 10
enable_edge_signs = true
enabled_activation_funcs = "all"
initial_enabled_edge_probability = 0.05
enabled_activation_functions = "all"
initial_with_edges = true

[selection]
use_tournaments = true
elite_ratio = 0.1
culling_ratio = 0.2
tournament_size = 5
objectives = [ "-log_loss.min", "-log_loss.mean", "-n_hidden",]
recorded_metrics = [ "accuracy", "kappa", "log_loss",]
hof_metric = "accuracy.mean"

[mutation.new_edge]
probability = 0.2
strategy = "layer_agnostic"
propability = 0.2

[mutation.new_node]
probability = 0.25
propability = 0.3

[mutation.reenable_edge]
probability = 0.05
propability = 0.1

[mutation.change_activation]
probability = 0.5
propability = 0.4

[mutation.change_edge_sign]
probability = 0.2

[mutation.new_recurrent_edge]
probability = 0.2
strategy = "any"

[mutation.add_recurrent_edge]
probability = 0.3

2020-10-24 14:10:01,420 - root - INFO - Starting evolutionary algorithm
2020-10-24 14:10:01,542 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:10:38,157 - root - DEBUG - Updating hall of fame
2020-10-24 14:10:55,014 - root - INFO - Completed generation 1; 5.4e+01s elapsed, 5.4e+01s avg, 5.4e+01s total. Expected time remaining: 8.5e+03s
2020-10-24 14:10:55,164 - root - INFO - #1 MAX:accuracy.mean: 0.16
2020-10-24 14:10:55,397 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:11:42,094 - root - DEBUG - Updating hall of fame
2020-10-24 14:11:51,765 - root - INFO - Completed generation 2; 5.7e+01s elapsed, 5.5e+01s avg, 1.1e+02s total. Expected time remaining: 8.7e+03s
2020-10-24 14:11:51,912 - root - INFO - #2 MAX:accuracy.mean: 0.16
2020-10-24 14:11:52,087 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:12:28,438 - root - DEBUG - Updating hall of fame
2020-10-24 14:12:36,245 - root - INFO - Completed generation 3; 4.4e+01s elapsed, 5.2e+01s avg, 1.5e+02s total. Expected time remaining: 8.1e+03s
2020-10-24 14:12:36,338 - root - INFO - #3 MAX:accuracy.mean: 0.18
2020-10-24 14:12:36,492 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:13:12,412 - root - DEBUG - Updating hall of fame
2020-10-24 14:13:18,981 - root - INFO - Completed generation 4; 4.3e+01s elapsed, 4.9e+01s avg, 2e+02s total. Expected time remaining: 7.7e+03s
2020-10-24 14:13:19,091 - root - INFO - #4 MAX:accuracy.mean: 0.17
2020-10-24 14:13:19,241 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:14:06,706 - root - DEBUG - Updating hall of fame
2020-10-24 14:14:14,095 - root - INFO - Completed generation 5; 5.5e+01s elapsed, 5e+01s avg, 2.5e+02s total. Expected time remaining: 7.8e+03s
2020-10-24 14:14:14,220 - root - INFO - #5 MAX:accuracy.mean: 0.18
2020-10-24 14:14:14,440 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:14:57,181 - root - DEBUG - Updating hall of fame
2020-10-24 14:15:02,414 - root - INFO - Completed generation 6; 4.8e+01s elapsed, 5e+01s avg, 3e+02s total. Expected time remaining: 7.7e+03s
2020-10-24 14:15:02,517 - root - INFO - #6 MAX:accuracy.mean: 0.18
2020-10-24 14:15:02,682 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:15:51,691 - root - DEBUG - Updating hall of fame
2020-10-24 14:15:59,150 - root - INFO - Completed generation 7; 5.7e+01s elapsed, 5.1e+01s avg, 3.6e+02s total. Expected time remaining: 7.8e+03s
2020-10-24 14:15:59,320 - root - INFO - #7 MAX:accuracy.mean: 0.18
2020-10-24 14:15:59,526 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:16:38,606 - root - DEBUG - Updating hall of fame
2020-10-24 14:16:42,507 - root - INFO - Completed generation 8; 4.3e+01s elapsed, 5e+01s avg, 4e+02s total. Expected time remaining: 7.6e+03s
2020-10-24 14:16:42,602 - root - INFO - #8 MAX:accuracy.mean: 0.19
2020-10-24 14:16:42,757 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:17:25,381 - root - DEBUG - Updating hall of fame
2020-10-24 14:17:30,629 - root - INFO - Completed generation 9; 4.8e+01s elapsed, 5e+01s avg, 4.5e+02s total. Expected time remaining: 7.5e+03s
2020-10-24 14:17:30,782 - root - INFO - #9 MAX:accuracy.mean: 0.19
2020-10-24 14:17:31,035 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:18:24,801 - root - DEBUG - Updating hall of fame
2020-10-24 14:18:29,580 - root - INFO - Completed generation 10; 5.9e+01s elapsed, 5.1e+01s avg, 5.1e+02s total. Expected time remaining: 7.6e+03s
2020-10-24 14:18:29,726 - root - INFO - #10 MAX:accuracy.mean: 0.2
2020-10-24 14:18:29,994 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:19:21,224 - root - DEBUG - Updating hall of fame
2020-10-24 14:19:29,414 - root - INFO - Completed generation 11; 6e+01s elapsed, 5.2e+01s avg, 5.7e+02s total. Expected time remaining: 7.7e+03s
2020-10-24 14:19:29,548 - root - INFO - #11 MAX:accuracy.mean: 0.19
2020-10-24 14:19:29,775 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:20:27,594 - root - DEBUG - Updating hall of fame
2020-10-24 14:20:33,143 - root - INFO - Completed generation 12; 6.4e+01s elapsed, 5.3e+01s avg, 6.3e+02s total. Expected time remaining: 7.8e+03s
2020-10-24 14:20:33,268 - root - INFO - #12 MAX:accuracy.mean: 0.21
2020-10-24 14:20:33,461 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:21:21,024 - root - DEBUG - Updating hall of fame
2020-10-24 14:21:25,057 - root - INFO - Completed generation 13; 5.2e+01s elapsed, 5.2e+01s avg, 6.8e+02s total. Expected time remaining: 7.7e+03s
2020-10-24 14:21:25,157 - root - INFO - #13 MAX:accuracy.mean: 0.21
2020-10-24 14:21:25,307 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:22:02,253 - root - DEBUG - Updating hall of fame
2020-10-24 14:22:06,119 - root - INFO - Completed generation 14; 4.1e+01s elapsed, 5.2e+01s avg, 7.2e+02s total. Expected time remaining: 7.5e+03s
2020-10-24 14:22:06,212 - root - INFO - #14 MAX:accuracy.mean: 0.22
2020-10-24 14:22:06,381 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:22:45,202 - root - DEBUG - Updating hall of fame
2020-10-24 14:22:48,913 - root - INFO - Completed generation 15; 4.3e+01s elapsed, 5.1e+01s avg, 7.7e+02s total. Expected time remaining: 7.4e+03s
2020-10-24 14:22:49,011 - root - INFO - #15 MAX:accuracy.mean: 0.21
2020-10-24 14:22:49,177 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:23:29,656 - root - DEBUG - Updating hall of fame
2020-10-24 14:23:32,945 - root - INFO - Completed generation 16; 4.4e+01s elapsed, 5.1e+01s avg, 8.1e+02s total. Expected time remaining: 7.3e+03s
2020-10-24 14:23:33,123 - root - INFO - #16 MAX:accuracy.mean: 0.21
2020-10-24 14:23:33,431 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:24:14,773 - root - DEBUG - Updating hall of fame
2020-10-24 14:24:17,375 - root - INFO - Completed generation 17; 4.4e+01s elapsed, 5e+01s avg, 8.5e+02s total. Expected time remaining: 7.2e+03s
2020-10-24 14:24:17,472 - root - INFO - #17 MAX:accuracy.mean: 0.21
2020-10-24 14:24:17,638 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:24:54,301 - root - DEBUG - Updating hall of fame
2020-10-24 14:24:57,053 - root - INFO - Completed generation 18; 4e+01s elapsed, 5e+01s avg, 8.9e+02s total. Expected time remaining: 7e+03s
2020-10-24 14:24:57,146 - root - INFO - #18 MAX:accuracy.mean: 0.21
2020-10-24 14:24:57,290 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:25:33,280 - root - DEBUG - Updating hall of fame
2020-10-24 14:25:35,952 - root - INFO - Completed generation 19; 3.9e+01s elapsed, 4.9e+01s avg, 9.3e+02s total. Expected time remaining: 6.9e+03s
2020-10-24 14:25:36,066 - root - INFO - #19 MAX:accuracy.mean: 0.23
2020-10-24 14:25:36,216 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:26:10,935 - root - DEBUG - Updating hall of fame
2020-10-24 14:26:12,926 - root - INFO - Completed generation 20; 3.7e+01s elapsed, 4.8e+01s avg, 9.7e+02s total. Expected time remaining: 6.8e+03s
2020-10-24 14:26:13,027 - root - INFO - #20 MAX:accuracy.mean: 0.23
2020-10-24 14:26:13,208 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:26:47,066 - root - DEBUG - Updating hall of fame
2020-10-24 14:26:50,057 - root - INFO - Completed generation 21; 3.7e+01s elapsed, 4.8e+01s avg, 1e+03s total. Expected time remaining: 6.7e+03s
2020-10-24 14:26:50,154 - root - INFO - #21 MAX:accuracy.mean: 0.24
2020-10-24 14:26:50,304 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:27:23,229 - root - DEBUG - Updating hall of fame
2020-10-24 14:27:25,644 - root - INFO - Completed generation 22; 3.5e+01s elapsed, 4.7e+01s avg, 1e+03s total. Expected time remaining: 6.5e+03s
2020-10-24 14:27:25,738 - root - INFO - #22 MAX:accuracy.mean: 0.22
2020-10-24 14:27:25,888 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:27:59,511 - root - DEBUG - Updating hall of fame
2020-10-24 14:28:02,745 - root - INFO - Completed generation 23; 3.7e+01s elapsed, 4.7e+01s avg, 1.1e+03s total. Expected time remaining: 6.4e+03s
2020-10-24 14:28:02,840 - root - INFO - #23 MAX:accuracy.mean: 0.24
2020-10-24 14:28:03,005 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:28:37,221 - root - DEBUG - Updating hall of fame
2020-10-24 14:28:39,653 - root - INFO - Completed generation 24; 3.7e+01s elapsed, 4.6e+01s avg, 1.1e+03s total. Expected time remaining: 6.3e+03s
2020-10-24 14:28:39,750 - root - INFO - #24 MAX:accuracy.mean: 0.23
2020-10-24 14:28:39,896 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:29:13,851 - root - DEBUG - Updating hall of fame
2020-10-24 14:29:15,184 - root - INFO - Completed generation 25; 3.5e+01s elapsed, 4.6e+01s avg, 1.2e+03s total. Expected time remaining: 6.2e+03s
2020-10-24 14:29:15,275 - root - INFO - #25 MAX:accuracy.mean: 0.23
2020-10-24 14:29:15,422 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:29:50,772 - root - DEBUG - Updating hall of fame
2020-10-24 14:29:52,420 - root - INFO - Completed generation 26; 3.7e+01s elapsed, 4.6e+01s avg, 1.2e+03s total. Expected time remaining: 6.1e+03s
2020-10-24 14:29:52,515 - root - INFO - #26 MAX:accuracy.mean: 0.23
2020-10-24 14:29:52,672 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:30:27,741 - root - DEBUG - Updating hall of fame
2020-10-24 14:30:30,094 - root - INFO - Completed generation 27; 3.8e+01s elapsed, 4.5e+01s avg, 1.2e+03s total. Expected time remaining: 6e+03s
2020-10-24 14:30:30,188 - root - INFO - #27 MAX:accuracy.mean: 0.25
2020-10-24 14:30:30,331 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:31:03,366 - root - DEBUG - Updating hall of fame
2020-10-24 14:31:05,283 - root - INFO - Completed generation 28; 3.5e+01s elapsed, 4.5e+01s avg, 1.3e+03s total. Expected time remaining: 5.9e+03s
2020-10-24 14:31:05,378 - root - INFO - #28 MAX:accuracy.mean: 0.24
2020-10-24 14:31:05,519 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:31:37,871 - root - DEBUG - Updating hall of fame
2020-10-24 14:31:39,749 - root - INFO - Completed generation 29; 3.4e+01s elapsed, 4.5e+01s avg, 1.3e+03s total. Expected time remaining: 5.9e+03s
2020-10-24 14:31:39,838 - root - INFO - #29 MAX:accuracy.mean: 0.25
2020-10-24 14:31:39,987 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:32:14,800 - root - DEBUG - Updating hall of fame
2020-10-24 14:32:16,961 - root - INFO - Completed generation 30; 3.7e+01s elapsed, 4.4e+01s avg, 1.3e+03s total. Expected time remaining: 5.8e+03s
2020-10-24 14:32:17,067 - root - INFO - #30 MAX:accuracy.mean: 0.24
2020-10-24 14:32:17,243 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:32:50,147 - root - DEBUG - Updating hall of fame
2020-10-24 14:32:51,931 - root - INFO - Completed generation 31; 3.5e+01s elapsed, 4.4e+01s avg, 1.4e+03s total. Expected time remaining: 5.7e+03s
2020-10-24 14:32:52,028 - root - INFO - #31 MAX:accuracy.mean: 0.24
2020-10-24 14:32:52,176 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:33:24,769 - root - DEBUG - Updating hall of fame
2020-10-24 14:33:26,663 - root - INFO - Completed generation 32; 3.5e+01s elapsed, 4.4e+01s avg, 1.4e+03s total. Expected time remaining: 5.6e+03s
2020-10-24 14:33:26,757 - root - INFO - #32 MAX:accuracy.mean: 0.25
2020-10-24 14:33:26,901 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:33:59,255 - root - DEBUG - Updating hall of fame
2020-10-24 14:34:00,527 - root - INFO - Completed generation 33; 3.4e+01s elapsed, 4.3e+01s avg, 1.4e+03s total. Expected time remaining: 5.5e+03s
2020-10-24 14:34:00,620 - root - INFO - #33 MAX:accuracy.mean: 0.25
2020-10-24 14:34:00,824 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:34:34,454 - root - DEBUG - Updating hall of fame
2020-10-24 14:34:35,792 - root - INFO - Completed generation 34; 3.5e+01s elapsed, 4.3e+01s avg, 1.5e+03s total. Expected time remaining: 5.4e+03s
2020-10-24 14:34:35,884 - root - INFO - #34 MAX:accuracy.mean: 0.25
2020-10-24 14:34:36,043 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:35:09,046 - root - DEBUG - Updating hall of fame
2020-10-24 14:35:10,655 - root - INFO - Completed generation 35; 3.5e+01s elapsed, 4.3e+01s avg, 1.5e+03s total. Expected time remaining: 5.4e+03s
2020-10-24 14:35:10,748 - root - INFO - #35 MAX:accuracy.mean: 0.25
2020-10-24 14:35:10,895 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:35:44,008 - root - DEBUG - Updating hall of fame
2020-10-24 14:35:45,392 - root - INFO - Completed generation 36; 3.5e+01s elapsed, 4.3e+01s avg, 1.5e+03s total. Expected time remaining: 5.3e+03s
2020-10-24 14:35:45,482 - root - INFO - #36 MAX:accuracy.mean: 0.27
2020-10-24 14:35:45,626 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:36:18,526 - root - DEBUG - Updating hall of fame
2020-10-24 14:36:20,435 - root - INFO - Completed generation 37; 3.5e+01s elapsed, 4.3e+01s avg, 1.6e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 14:36:20,527 - root - INFO - #37 MAX:accuracy.mean: 0.26
2020-10-24 14:36:20,677 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:36:53,548 - root - DEBUG - Updating hall of fame
2020-10-24 14:36:55,371 - root - INFO - Completed generation 38; 3.5e+01s elapsed, 4.2e+01s avg, 1.6e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 14:36:55,463 - root - INFO - #38 MAX:accuracy.mean: 0.26
2020-10-24 14:36:55,609 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:37:28,769 - root - DEBUG - Updating hall of fame
2020-10-24 14:37:29,882 - root - INFO - Completed generation 39; 3.4e+01s elapsed, 4.2e+01s avg, 1.6e+03s total. Expected time remaining: 5.1e+03s
2020-10-24 14:37:29,979 - root - INFO - #39 MAX:accuracy.mean: 0.25
2020-10-24 14:37:30,134 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:38:03,691 - root - DEBUG - Updating hall of fame
2020-10-24 14:38:05,633 - root - INFO - Completed generation 40; 3.6e+01s elapsed, 4.2e+01s avg, 1.7e+03s total. Expected time remaining: 5e+03s
2020-10-24 14:38:05,724 - root - INFO - #40 MAX:accuracy.mean: 0.26
2020-10-24 14:38:05,906 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:38:39,635 - root - DEBUG - Updating hall of fame
2020-10-24 14:38:40,626 - root - INFO - Completed generation 41; 3.5e+01s elapsed, 4.2e+01s avg, 1.7e+03s total. Expected time remaining: 5e+03s
2020-10-24 14:38:40,717 - root - INFO - #41 MAX:accuracy.mean: 0.25
2020-10-24 14:38:40,862 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:39:13,714 - root - DEBUG - Updating hall of fame
2020-10-24 14:39:14,998 - root - INFO - Completed generation 42; 3.4e+01s elapsed, 4.2e+01s avg, 1.7e+03s total. Expected time remaining: 4.9e+03s
2020-10-24 14:39:15,097 - root - INFO - #42 MAX:accuracy.mean: 0.26
2020-10-24 14:39:15,244 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:39:50,547 - root - DEBUG - Updating hall of fame
2020-10-24 14:39:52,430 - root - INFO - Completed generation 43; 3.7e+01s elapsed, 4.2e+01s avg, 1.8e+03s total. Expected time remaining: 4.9e+03s
2020-10-24 14:39:52,526 - root - INFO - #43 MAX:accuracy.mean: 0.25
2020-10-24 14:39:52,679 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:40:28,887 - root - DEBUG - Updating hall of fame
2020-10-24 14:40:30,609 - root - INFO - Completed generation 44; 3.8e+01s elapsed, 4.1e+01s avg, 1.8e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 14:40:30,704 - root - INFO - #44 MAX:accuracy.mean: 0.26
2020-10-24 14:40:30,853 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:41:08,633 - root - DEBUG - Updating hall of fame
2020-10-24 14:41:12,011 - root - INFO - Completed generation 45; 4.1e+01s elapsed, 4.1e+01s avg, 1.9e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 14:41:12,219 - root - INFO - #45 MAX:accuracy.mean: 0.25
2020-10-24 14:41:12,429 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:42:01,502 - root - DEBUG - Updating hall of fame
2020-10-24 14:42:04,508 - root - INFO - Completed generation 46; 5.2e+01s elapsed, 4.2e+01s avg, 1.9e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 14:42:04,677 - root - INFO - #46 MAX:accuracy.mean: 0.25
2020-10-24 14:42:05,052 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:42:45,704 - root - DEBUG - Updating hall of fame
2020-10-24 14:42:47,760 - root - INFO - Completed generation 47; 4.3e+01s elapsed, 4.2e+01s avg, 2e+03s total. Expected time remaining: 4.7e+03s
2020-10-24 14:42:47,857 - root - INFO - #47 MAX:accuracy.mean: 0.26
2020-10-24 14:42:48,014 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:43:27,547 - root - DEBUG - Updating hall of fame
2020-10-24 14:43:30,188 - root - INFO - Completed generation 48; 4.2e+01s elapsed, 4.2e+01s avg, 2e+03s total. Expected time remaining: 4.7e+03s
2020-10-24 14:43:30,287 - root - INFO - #48 MAX:accuracy.mean: 0.27
2020-10-24 14:43:30,446 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:44:12,998 - root - DEBUG - Updating hall of fame
2020-10-24 14:44:16,377 - root - INFO - Completed generation 49; 4.6e+01s elapsed, 4.2e+01s avg, 2e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 14:44:16,497 - root - INFO - #49 MAX:accuracy.mean: 0.26
2020-10-24 14:44:16,706 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:45:00,362 - root - DEBUG - Updating hall of fame
2020-10-24 14:45:03,779 - root - INFO - Completed generation 50; 4.7e+01s elapsed, 4.2e+01s avg, 2.1e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 14:45:03,892 - root - INFO - #50 MAX:accuracy.mean: 0.26
2020-10-24 14:45:04,115 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:45:49,101 - root - DEBUG - Updating hall of fame
2020-10-24 14:45:53,082 - root - INFO - Completed generation 51; 4.9e+01s elapsed, 4.2e+01s avg, 2.1e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 14:45:53,213 - root - INFO - #51 MAX:accuracy.mean: 0.26
2020-10-24 14:45:53,436 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:46:38,575 - root - DEBUG - Updating hall of fame
2020-10-24 14:46:40,852 - root - INFO - Completed generation 52; 4.8e+01s elapsed, 4.2e+01s avg, 2.2e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 14:46:40,966 - root - INFO - #52 MAX:accuracy.mean: 0.26
2020-10-24 14:46:41,164 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:47:25,897 - root - DEBUG - Updating hall of fame
2020-10-24 14:47:27,780 - root - INFO - Completed generation 53; 4.7e+01s elapsed, 4.2e+01s avg, 2.2e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 14:47:27,907 - root - INFO - #53 MAX:accuracy.mean: 0.27
2020-10-24 14:47:28,109 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:48:11,024 - root - DEBUG - Updating hall of fame
2020-10-24 14:48:12,898 - root - INFO - Completed generation 54; 4.5e+01s elapsed, 4.2e+01s avg, 2.3e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 14:48:13,039 - root - INFO - #54 MAX:accuracy.mean: 0.26
2020-10-24 14:48:13,222 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:48:56,357 - root - DEBUG - Updating hall of fame
2020-10-24 14:48:58,510 - root - INFO - Completed generation 55; 4.5e+01s elapsed, 4.2e+01s avg, 2.3e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 14:48:58,629 - root - INFO - #55 MAX:accuracy.mean: 0.25
2020-10-24 14:48:58,815 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:49:41,768 - root - DEBUG - Updating hall of fame
2020-10-24 14:49:43,929 - root - INFO - Completed generation 56; 4.5e+01s elapsed, 4.2e+01s avg, 2.4e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 14:49:44,058 - root - INFO - #56 MAX:accuracy.mean: 0.26
2020-10-24 14:49:44,236 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:50:28,142 - root - DEBUG - Updating hall of fame
2020-10-24 14:50:30,639 - root - INFO - Completed generation 57; 4.7e+01s elapsed, 4.3e+01s avg, 2.4e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 14:50:30,751 - root - INFO - #57 MAX:accuracy.mean: 0.27
2020-10-24 14:50:30,946 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:51:17,968 - root - DEBUG - Updating hall of fame
2020-10-24 14:51:20,301 - root - INFO - Completed generation 58; 5e+01s elapsed, 4.3e+01s avg, 2.5e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 14:51:20,411 - root - INFO - #58 MAX:accuracy.mean: 0.26
2020-10-24 14:51:20,602 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:52:07,278 - root - DEBUG - Updating hall of fame
2020-10-24 14:52:08,917 - root - INFO - Completed generation 59; 4.9e+01s elapsed, 4.3e+01s avg, 2.5e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 14:52:09,058 - root - INFO - #59 MAX:accuracy.mean: 0.26
2020-10-24 14:52:09,254 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:52:56,839 - root - DEBUG - Updating hall of fame
2020-10-24 14:52:58,510 - root - INFO - Completed generation 60; 4.9e+01s elapsed, 4.3e+01s avg, 2.6e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 14:52:58,623 - root - INFO - #60 MAX:accuracy.mean: 0.26
2020-10-24 14:52:58,864 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:53:46,354 - root - DEBUG - Updating hall of fame
2020-10-24 14:53:47,927 - root - INFO - Completed generation 61; 4.9e+01s elapsed, 4.3e+01s avg, 2.6e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 14:53:48,057 - root - INFO - #61 MAX:accuracy.mean: 0.26
2020-10-24 14:53:48,288 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:54:35,678 - root - DEBUG - Updating hall of fame
2020-10-24 14:54:36,993 - root - INFO - Completed generation 62; 4.9e+01s elapsed, 4.3e+01s avg, 2.7e+03s total. Expected time remaining: 4.2e+03s
2020-10-24 14:54:37,109 - root - INFO - #62 MAX:accuracy.mean: 0.26
2020-10-24 14:54:37,296 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:55:21,192 - root - DEBUG - Updating hall of fame
2020-10-24 14:55:22,431 - root - INFO - Completed generation 63; 4.5e+01s elapsed, 4.3e+01s avg, 2.7e+03s total. Expected time remaining: 4.2e+03s
2020-10-24 14:55:22,566 - root - INFO - #63 MAX:accuracy.mean: 0.25
2020-10-24 14:55:22,777 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:56:10,060 - root - DEBUG - Updating hall of fame
2020-10-24 14:56:11,212 - root - INFO - Completed generation 64; 4.9e+01s elapsed, 4.3e+01s avg, 2.8e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 14:56:11,327 - root - INFO - #64 MAX:accuracy.mean: 0.27
2020-10-24 14:56:11,519 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:57:00,714 - root - DEBUG - Updating hall of fame
2020-10-24 14:57:02,509 - root - INFO - Completed generation 65; 5.1e+01s elapsed, 4.3e+01s avg, 2.8e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 14:57:02,695 - root - INFO - #65 MAX:accuracy.mean: 0.26
2020-10-24 14:57:02,940 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:58:00,533 - root - DEBUG - Updating hall of fame
2020-10-24 14:58:01,235 - root - INFO - Completed generation 66; 5.9e+01s elapsed, 4.4e+01s avg, 2.9e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 14:58:01,344 - root - INFO - #66 MAX:accuracy.mean: 0.27
2020-10-24 14:58:01,529 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:59:07,950 - root - DEBUG - Updating hall of fame
2020-10-24 14:59:11,822 - root - INFO - Completed generation 67; 7e+01s elapsed, 4.4e+01s avg, 2.9e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 14:59:11,934 - root - INFO - #67 MAX:accuracy.mean: 0.27
2020-10-24 14:59:12,148 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:59:57,156 - root - DEBUG - Updating hall of fame
2020-10-24 14:59:57,849 - root - INFO - Completed generation 68; 4.6e+01s elapsed, 4.4e+01s avg, 3e+03s total. Expected time remaining: 4e+03s
2020-10-24 14:59:57,951 - root - INFO - #68 MAX:accuracy.mean: 0.26
2020-10-24 14:59:58,121 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:00:44,596 - root - DEBUG - Updating hall of fame
2020-10-24 15:00:45,244 - root - INFO - Completed generation 69; 4.7e+01s elapsed, 4.4e+01s avg, 3e+03s total. Expected time remaining: 4e+03s
2020-10-24 15:00:45,376 - root - INFO - #69 MAX:accuracy.mean: 0.26
2020-10-24 15:00:45,643 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:01:28,154 - root - DEBUG - Updating hall of fame
2020-10-24 15:01:30,160 - root - INFO - Completed generation 70; 4.5e+01s elapsed, 4.4e+01s avg, 3.1e+03s total. Expected time remaining: 4e+03s
2020-10-24 15:01:30,364 - root - INFO - #70 MAX:accuracy.mean: 0.26
2020-10-24 15:01:30,647 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:02:18,307 - root - DEBUG - Updating hall of fame
2020-10-24 15:02:21,161 - root - INFO - Completed generation 71; 5.1e+01s elapsed, 4.4e+01s avg, 3.1e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 15:02:21,361 - root - INFO - #71 MAX:accuracy.mean: 0.27
2020-10-24 15:02:21,667 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:03:12,674 - root - DEBUG - Updating hall of fame
2020-10-24 15:03:14,210 - root - INFO - Completed generation 72; 5.3e+01s elapsed, 4.4e+01s avg, 3.2e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 15:03:14,312 - root - INFO - #72 MAX:accuracy.mean: 0.26
2020-10-24 15:03:14,472 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:04:07,771 - root - DEBUG - Updating hall of fame
2020-10-24 15:04:09,189 - root - INFO - Completed generation 73; 5.5e+01s elapsed, 4.4e+01s avg, 3.2e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 15:04:09,299 - root - INFO - #73 MAX:accuracy.mean: 0.26
2020-10-24 15:04:09,483 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:04:52,923 - root - DEBUG - Updating hall of fame
2020-10-24 15:04:54,436 - root - INFO - Completed generation 74; 4.5e+01s elapsed, 4.4e+01s avg, 3.3e+03s total. Expected time remaining: 3.8e+03s
2020-10-24 15:04:54,554 - root - INFO - #74 MAX:accuracy.mean: 0.26
2020-10-24 15:04:54,747 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:05:37,402 - root - DEBUG - Updating hall of fame
2020-10-24 15:05:38,453 - root - INFO - Completed generation 75; 4.4e+01s elapsed, 4.4e+01s avg, 3.3e+03s total. Expected time remaining: 3.8e+03s
2020-10-24 15:05:38,560 - root - INFO - #75 MAX:accuracy.mean: 0.27
2020-10-24 15:05:38,743 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:06:21,608 - root - DEBUG - Updating hall of fame
2020-10-24 15:06:23,210 - root - INFO - Completed generation 76; 4.5e+01s elapsed, 4.4e+01s avg, 3.4e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 15:06:23,316 - root - INFO - #76 MAX:accuracy.mean: 0.27
2020-10-24 15:06:23,494 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:07:07,278 - root - DEBUG - Updating hall of fame
2020-10-24 15:07:08,986 - root - INFO - Completed generation 77; 4.6e+01s elapsed, 4.4e+01s avg, 3.4e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 15:07:09,108 - root - INFO - #77 MAX:accuracy.mean: 0.26
2020-10-24 15:07:09,298 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:07:54,260 - root - DEBUG - Updating hall of fame
2020-10-24 15:07:56,440 - root - INFO - Completed generation 78; 4.7e+01s elapsed, 4.4e+01s avg, 3.5e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 15:07:56,554 - root - INFO - #78 MAX:accuracy.mean: 0.28
2020-10-24 15:07:56,735 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:08:43,497 - root - DEBUG - Updating hall of fame
2020-10-24 15:08:46,157 - root - INFO - Completed generation 79; 5e+01s elapsed, 4.4e+01s avg, 3.5e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 15:08:46,274 - root - INFO - #79 MAX:accuracy.mean: 0.27
2020-10-24 15:08:46,474 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:09:31,131 - root - DEBUG - Updating hall of fame
2020-10-24 15:09:32,873 - root - INFO - Completed generation 80; 4.7e+01s elapsed, 4.5e+01s avg, 3.6e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 15:09:32,987 - root - INFO - #80 MAX:accuracy.mean: 0.26
2020-10-24 15:09:33,214 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:10:16,259 - root - DEBUG - Updating hall of fame
2020-10-24 15:10:18,048 - root - INFO - Completed generation 81; 4.5e+01s elapsed, 4.5e+01s avg, 3.6e+03s total. Expected time remaining: 3.5e+03s
2020-10-24 15:10:18,175 - root - INFO - #81 MAX:accuracy.mean: 0.27
2020-10-24 15:10:18,356 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:11:00,747 - root - DEBUG - Updating hall of fame
2020-10-24 15:11:03,024 - root - INFO - Completed generation 82; 4.5e+01s elapsed, 4.5e+01s avg, 3.7e+03s total. Expected time remaining: 3.5e+03s
2020-10-24 15:11:03,138 - root - INFO - #82 MAX:accuracy.mean: 0.27
2020-10-24 15:11:03,319 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:11:49,504 - root - DEBUG - Updating hall of fame
2020-10-24 15:11:51,571 - root - INFO - Completed generation 83; 4.8e+01s elapsed, 4.5e+01s avg, 3.7e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 15:11:51,670 - root - INFO - #83 MAX:accuracy.mean: 0.26
2020-10-24 15:11:51,843 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:12:38,270 - root - DEBUG - Updating hall of fame
2020-10-24 15:12:39,444 - root - INFO - Completed generation 84; 4.8e+01s elapsed, 4.5e+01s avg, 3.7e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 15:12:39,550 - root - INFO - #84 MAX:accuracy.mean: 0.27
2020-10-24 15:12:39,730 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:13:26,717 - root - DEBUG - Updating hall of fame
2020-10-24 15:13:28,829 - root - INFO - Completed generation 85; 4.9e+01s elapsed, 4.5e+01s avg, 3.8e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 15:13:28,952 - root - INFO - #85 MAX:accuracy.mean: 0.26
2020-10-24 15:13:29,172 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:14:17,951 - root - DEBUG - Updating hall of fame
2020-10-24 15:14:19,084 - root - INFO - Completed generation 86; 5e+01s elapsed, 4.5e+01s avg, 3.8e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 15:14:19,174 - root - INFO - #86 MAX:accuracy.mean: 0.26
2020-10-24 15:14:19,323 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:14:54,612 - root - DEBUG - Updating hall of fame
2020-10-24 15:14:55,950 - root - INFO - Completed generation 87; 3.7e+01s elapsed, 4.5e+01s avg, 3.9e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 15:14:56,054 - root - INFO - #87 MAX:accuracy.mean: 0.27
2020-10-24 15:14:56,201 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:15:32,388 - root - DEBUG - Updating hall of fame
2020-10-24 15:15:33,888 - root - INFO - Completed generation 88; 3.8e+01s elapsed, 4.5e+01s avg, 3.9e+03s total. Expected time remaining: 3.2e+03s
2020-10-24 15:15:33,981 - root - INFO - #88 MAX:accuracy.mean: 0.3
2020-10-24 15:15:34,134 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:16:10,722 - root - DEBUG - Updating hall of fame
2020-10-24 15:16:12,023 - root - INFO - Completed generation 89; 3.8e+01s elapsed, 4.4e+01s avg, 4e+03s total. Expected time remaining: 3.2e+03s
2020-10-24 15:16:12,114 - root - INFO - #89 MAX:accuracy.mean: 0.27
2020-10-24 15:16:12,266 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:16:49,561 - root - DEBUG - Updating hall of fame
2020-10-24 15:16:51,715 - root - INFO - Completed generation 90; 4e+01s elapsed, 4.4e+01s avg, 4e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 15:16:51,806 - root - INFO - #90 MAX:accuracy.mean: 0.27
2020-10-24 15:16:52,003 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:17:29,712 - root - DEBUG - Updating hall of fame
2020-10-24 15:17:31,524 - root - INFO - Completed generation 91; 4e+01s elapsed, 4.4e+01s avg, 4e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 15:17:31,614 - root - INFO - #91 MAX:accuracy.mean: 0.27
2020-10-24 15:17:31,760 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:18:06,593 - root - DEBUG - Updating hall of fame
2020-10-24 15:18:08,085 - root - INFO - Completed generation 92; 3.6e+01s elapsed, 4.4e+01s avg, 4.1e+03s total. Expected time remaining: 3e+03s
2020-10-24 15:18:08,176 - root - INFO - #92 MAX:accuracy.mean: 0.27
2020-10-24 15:18:08,325 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:18:43,818 - root - DEBUG - Updating hall of fame
2020-10-24 15:18:45,821 - root - INFO - Completed generation 93; 3.8e+01s elapsed, 4.4e+01s avg, 4.1e+03s total. Expected time remaining: 3e+03s
2020-10-24 15:18:45,912 - root - INFO - #93 MAX:accuracy.mean: 0.28
2020-10-24 15:18:46,074 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:19:21,595 - root - DEBUG - Updating hall of fame
2020-10-24 15:19:23,628 - root - INFO - Completed generation 94; 3.8e+01s elapsed, 4.4e+01s avg, 4.2e+03s total. Expected time remaining: 2.9e+03s
2020-10-24 15:19:23,720 - root - INFO - #94 MAX:accuracy.mean: 0.26
2020-10-24 15:19:23,867 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:19:59,263 - root - DEBUG - Updating hall of fame
2020-10-24 15:20:00,160 - root - INFO - Completed generation 95; 3.6e+01s elapsed, 4.4e+01s avg, 4.2e+03s total. Expected time remaining: 2.9e+03s
2020-10-24 15:20:00,255 - root - INFO - #95 MAX:accuracy.mean: 0.29
2020-10-24 15:20:00,401 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:20:35,761 - root - DEBUG - Updating hall of fame
2020-10-24 15:20:37,359 - root - INFO - Completed generation 96; 3.7e+01s elapsed, 4.4e+01s avg, 4.2e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 15:20:37,453 - root - INFO - #96 MAX:accuracy.mean: 0.28
2020-10-24 15:20:37,601 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:21:13,679 - root - DEBUG - Updating hall of fame
2020-10-24 15:21:15,674 - root - INFO - Completed generation 97; 3.8e+01s elapsed, 4.4e+01s avg, 4.3e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 15:21:15,767 - root - INFO - #97 MAX:accuracy.mean: 0.27
2020-10-24 15:21:15,918 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:21:50,633 - root - DEBUG - Updating hall of fame
2020-10-24 15:21:52,843 - root - INFO - Completed generation 98; 3.7e+01s elapsed, 4.4e+01s avg, 4.3e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 15:21:52,936 - root - INFO - #98 MAX:accuracy.mean: 0.28
2020-10-24 15:21:53,094 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:22:27,205 - root - DEBUG - Updating hall of fame
2020-10-24 15:22:28,753 - root - INFO - Completed generation 99; 3.6e+01s elapsed, 4.4e+01s avg, 4.3e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 15:22:28,844 - root - INFO - #99 MAX:accuracy.mean: 0.26
2020-10-24 15:22:28,991 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:23:03,169 - root - DEBUG - Updating hall of fame
2020-10-24 15:23:04,994 - root - INFO - Completed generation 100; 3.6e+01s elapsed, 4.4e+01s avg, 4.4e+03s total. Expected time remaining: 2.6e+03s
2020-10-24 15:23:05,095 - root - INFO - #100 MAX:accuracy.mean: 0.27
2020-10-24 15:23:05,285 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:23:42,054 - root - DEBUG - Updating hall of fame
2020-10-24 15:23:43,338 - root - INFO - Completed generation 101; 3.8e+01s elapsed, 4.4e+01s avg, 4.4e+03s total. Expected time remaining: 2.6e+03s
2020-10-24 15:23:43,429 - root - INFO - #101 MAX:accuracy.mean: 0.27
2020-10-24 15:23:43,581 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:24:18,833 - root - DEBUG - Updating hall of fame
2020-10-24 15:24:20,452 - root - INFO - Completed generation 102; 3.7e+01s elapsed, 4.4e+01s avg, 4.4e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 15:24:20,544 - root - INFO - #102 MAX:accuracy.mean: 0.27
2020-10-24 15:24:20,690 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:24:56,166 - root - DEBUG - Updating hall of fame
2020-10-24 15:24:57,865 - root - INFO - Completed generation 103; 3.7e+01s elapsed, 4.4e+01s avg, 4.5e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 15:24:57,957 - root - INFO - #103 MAX:accuracy.mean: 0.28
2020-10-24 15:24:58,108 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:25:31,460 - root - DEBUG - Updating hall of fame
2020-10-24 15:25:34,104 - root - INFO - Completed generation 104; 3.6e+01s elapsed, 4.3e+01s avg, 4.5e+03s total. Expected time remaining: 2.4e+03s
2020-10-24 15:25:34,194 - root - INFO - #104 MAX:accuracy.mean: 0.27
2020-10-24 15:25:34,339 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:26:09,159 - root - DEBUG - Updating hall of fame
2020-10-24 15:26:10,817 - root - INFO - Completed generation 105; 3.7e+01s elapsed, 4.3e+01s avg, 4.6e+03s total. Expected time remaining: 2.4e+03s
2020-10-24 15:26:10,910 - root - INFO - #105 MAX:accuracy.mean: 0.27
2020-10-24 15:26:11,066 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:26:45,687 - root - DEBUG - Updating hall of fame
2020-10-24 15:26:47,208 - root - INFO - Completed generation 106; 3.6e+01s elapsed, 4.3e+01s avg, 4.6e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 15:26:47,297 - root - INFO - #106 MAX:accuracy.mean: 0.27
2020-10-24 15:26:47,441 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:27:21,488 - root - DEBUG - Updating hall of fame
2020-10-24 15:27:22,474 - root - INFO - Completed generation 107; 3.5e+01s elapsed, 4.3e+01s avg, 4.6e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 15:27:22,565 - root - INFO - #107 MAX:accuracy.mean: 0.28
2020-10-24 15:27:22,709 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:27:57,361 - root - DEBUG - Updating hall of fame
2020-10-24 15:27:58,908 - root - INFO - Completed generation 108; 3.6e+01s elapsed, 4.3e+01s avg, 4.7e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 15:27:58,999 - root - INFO - #108 MAX:accuracy.mean: 0.27
2020-10-24 15:27:59,151 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:28:34,149 - root - DEBUG - Updating hall of fame
2020-10-24 15:28:36,223 - root - INFO - Completed generation 109; 3.7e+01s elapsed, 4.3e+01s avg, 4.7e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 15:28:36,370 - root - INFO - #109 MAX:accuracy.mean: 0.26
2020-10-24 15:28:36,517 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:29:11,752 - root - DEBUG - Updating hall of fame
2020-10-24 15:29:13,149 - root - INFO - Completed generation 110; 3.7e+01s elapsed, 4.3e+01s avg, 4.7e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 15:29:13,240 - root - INFO - #110 MAX:accuracy.mean: 0.28
2020-10-24 15:29:13,434 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:29:48,817 - root - DEBUG - Updating hall of fame
2020-10-24 15:29:49,921 - root - INFO - Completed generation 111; 3.7e+01s elapsed, 4.3e+01s avg, 4.8e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 15:29:50,019 - root - INFO - #111 MAX:accuracy.mean: 0.28
2020-10-24 15:29:50,177 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:30:27,851 - root - DEBUG - Updating hall of fame
2020-10-24 15:30:30,196 - root - INFO - Completed generation 112; 4e+01s elapsed, 4.3e+01s avg, 4.8e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 15:30:30,287 - root - INFO - #112 MAX:accuracy.mean: 0.3
2020-10-24 15:30:30,443 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:31:08,501 - root - DEBUG - Updating hall of fame
2020-10-24 15:31:09,858 - root - INFO - Completed generation 113; 4e+01s elapsed, 4.3e+01s avg, 4.9e+03s total. Expected time remaining: 2e+03s
2020-10-24 15:31:09,953 - root - INFO - #113 MAX:accuracy.mean: 0.28
2020-10-24 15:31:10,105 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:31:47,062 - root - DEBUG - Updating hall of fame
2020-10-24 15:31:47,774 - root - INFO - Completed generation 114; 3.8e+01s elapsed, 4.3e+01s avg, 4.9e+03s total. Expected time remaining: 2e+03s
2020-10-24 15:31:47,868 - root - INFO - #114 MAX:accuracy.mean: 0.27
2020-10-24 15:31:48,018 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:32:22,654 - root - DEBUG - Updating hall of fame
2020-10-24 15:32:23,954 - root - INFO - Completed generation 115; 3.6e+01s elapsed, 4.3e+01s avg, 4.9e+03s total. Expected time remaining: 1.9e+03s
2020-10-24 15:32:24,049 - root - INFO - #115 MAX:accuracy.mean: 0.27
2020-10-24 15:32:24,194 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:32:59,284 - root - DEBUG - Updating hall of fame
2020-10-24 15:33:00,250 - root - INFO - Completed generation 116; 3.6e+01s elapsed, 4.3e+01s avg, 5e+03s total. Expected time remaining: 1.9e+03s
2020-10-24 15:33:00,341 - root - INFO - #116 MAX:accuracy.mean: 0.29
2020-10-24 15:33:00,495 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:33:37,408 - root - DEBUG - Updating hall of fame
2020-10-24 15:33:38,546 - root - INFO - Completed generation 117; 3.8e+01s elapsed, 4.3e+01s avg, 5e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 15:33:38,635 - root - INFO - #117 MAX:accuracy.mean: 0.3
2020-10-24 15:33:38,785 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:34:16,327 - root - DEBUG - Updating hall of fame
2020-10-24 15:34:18,403 - root - INFO - Completed generation 118; 4e+01s elapsed, 4.3e+01s avg, 5e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 15:34:18,493 - root - INFO - #118 MAX:accuracy.mean: 0.3
2020-10-24 15:34:18,639 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:34:55,486 - root - DEBUG - Updating hall of fame
2020-10-24 15:34:56,359 - root - INFO - Completed generation 119; 3.8e+01s elapsed, 4.3e+01s avg, 5.1e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 15:34:56,452 - root - INFO - #119 MAX:accuracy.mean: 0.29
2020-10-24 15:34:56,607 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:35:34,242 - root - DEBUG - Updating hall of fame
2020-10-24 15:35:35,182 - root - INFO - Completed generation 120; 3.9e+01s elapsed, 4.3e+01s avg, 5.1e+03s total. Expected time remaining: 1.7e+03s
2020-10-24 15:35:35,274 - root - INFO - #120 MAX:accuracy.mean: 0.27
2020-10-24 15:35:35,471 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:36:10,278 - root - DEBUG - Updating hall of fame
2020-10-24 15:36:10,637 - root - INFO - Completed generation 121; 3.5e+01s elapsed, 4.3e+01s avg, 5.2e+03s total. Expected time remaining: 1.7e+03s
2020-10-24 15:36:10,729 - root - INFO - #121 MAX:accuracy.mean: 0.29
2020-10-24 15:36:10,880 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:36:44,825 - root - DEBUG - Updating hall of fame
2020-10-24 15:36:46,389 - root - INFO - Completed generation 122; 3.6e+01s elapsed, 4.3e+01s avg, 5.2e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 15:36:46,478 - root - INFO - #122 MAX:accuracy.mean: 0.27
2020-10-24 15:36:46,631 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:37:20,980 - root - DEBUG - Updating hall of fame
2020-10-24 15:37:21,946 - root - INFO - Completed generation 123; 3.5e+01s elapsed, 4.2e+01s avg, 5.2e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 15:37:22,045 - root - INFO - #123 MAX:accuracy.mean: 0.28
2020-10-24 15:37:22,191 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:37:58,199 - root - DEBUG - Updating hall of fame
2020-10-24 15:37:59,261 - root - INFO - Completed generation 124; 3.7e+01s elapsed, 4.2e+01s avg, 5.3e+03s total. Expected time remaining: 1.5e+03s
2020-10-24 15:37:59,352 - root - INFO - #124 MAX:accuracy.mean: 0.28
2020-10-24 15:37:59,499 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:38:34,114 - root - DEBUG - Updating hall of fame
2020-10-24 15:38:35,179 - root - INFO - Completed generation 125; 3.6e+01s elapsed, 4.2e+01s avg, 5.3e+03s total. Expected time remaining: 1.5e+03s
2020-10-24 15:38:35,269 - root - INFO - #125 MAX:accuracy.mean: 0.28
2020-10-24 15:38:35,422 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:39:14,392 - root - DEBUG - Updating hall of fame
2020-10-24 15:39:15,321 - root - INFO - Completed generation 126; 4e+01s elapsed, 4.2e+01s avg, 5.3e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 15:39:15,412 - root - INFO - #126 MAX:accuracy.mean: 0.31
2020-10-24 15:39:15,559 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:39:50,264 - root - DEBUG - Updating hall of fame
2020-10-24 15:39:51,365 - root - INFO - Completed generation 127; 3.6e+01s elapsed, 4.2e+01s avg, 5.4e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 15:39:51,457 - root - INFO - #127 MAX:accuracy.mean: 0.28
2020-10-24 15:39:51,610 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:40:29,639 - root - DEBUG - Updating hall of fame
2020-10-24 15:40:30,565 - root - INFO - Completed generation 128; 3.9e+01s elapsed, 4.2e+01s avg, 5.4e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 15:40:30,657 - root - INFO - #128 MAX:accuracy.mean: 0.28
2020-10-24 15:40:30,808 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:41:05,609 - root - DEBUG - Updating hall of fame
2020-10-24 15:41:06,989 - root - INFO - Completed generation 129; 3.6e+01s elapsed, 4.2e+01s avg, 5.5e+03s total. Expected time remaining: 1.3e+03s
2020-10-24 15:41:07,085 - root - INFO - #129 MAX:accuracy.mean: 0.28
2020-10-24 15:41:07,238 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:41:45,378 - root - DEBUG - Updating hall of fame
2020-10-24 15:41:46,692 - root - INFO - Completed generation 130; 4e+01s elapsed, 4.2e+01s avg, 5.5e+03s total. Expected time remaining: 1.3e+03s
2020-10-24 15:41:46,784 - root - INFO - #130 MAX:accuracy.mean: 0.31
2020-10-24 15:41:46,992 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:42:25,708 - root - DEBUG - Updating hall of fame
2020-10-24 15:42:26,592 - root - INFO - Completed generation 131; 4e+01s elapsed, 4.2e+01s avg, 5.5e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 15:42:26,684 - root - INFO - #131 MAX:accuracy.mean: 0.3
2020-10-24 15:42:26,839 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:43:06,034 - root - DEBUG - Updating hall of fame
2020-10-24 15:43:07,769 - root - INFO - Completed generation 132; 4.1e+01s elapsed, 4.2e+01s avg, 5.6e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 15:43:07,926 - root - INFO - #132 MAX:accuracy.mean: 0.29
2020-10-24 15:43:08,078 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:43:43,278 - root - DEBUG - Updating hall of fame
2020-10-24 15:43:44,094 - root - INFO - Completed generation 133; 3.6e+01s elapsed, 4.2e+01s avg, 5.6e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 15:43:44,186 - root - INFO - #133 MAX:accuracy.mean: 0.28
2020-10-24 15:43:44,334 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:44:21,679 - root - DEBUG - Updating hall of fame
2020-10-24 15:44:22,515 - root - INFO - Completed generation 134; 3.8e+01s elapsed, 4.2e+01s avg, 5.6e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 15:44:22,608 - root - INFO - #134 MAX:accuracy.mean: 0.29
2020-10-24 15:44:22,763 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:45:01,141 - root - DEBUG - Updating hall of fame
2020-10-24 15:45:02,456 - root - INFO - Completed generation 135; 4e+01s elapsed, 4.2e+01s avg, 5.7e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 15:45:02,547 - root - INFO - #135 MAX:accuracy.mean: 0.29
2020-10-24 15:45:02,694 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:45:36,469 - root - DEBUG - Updating hall of fame
2020-10-24 15:45:37,038 - root - INFO - Completed generation 136; 3.4e+01s elapsed, 4.2e+01s avg, 5.7e+03s total. Expected time remaining: 1e+03s
2020-10-24 15:45:37,127 - root - INFO - #136 MAX:accuracy.mean: 0.3
2020-10-24 15:45:37,273 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:46:12,982 - root - DEBUG - Updating hall of fame
2020-10-24 15:46:14,092 - root - INFO - Completed generation 137; 3.7e+01s elapsed, 4.2e+01s avg, 5.8e+03s total. Expected time remaining: 9.7e+02s
2020-10-24 15:46:14,185 - root - INFO - #137 MAX:accuracy.mean: 0.29
2020-10-24 15:46:14,339 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:46:48,822 - root - DEBUG - Updating hall of fame
2020-10-24 15:46:49,952 - root - INFO - Completed generation 138; 3.6e+01s elapsed, 4.2e+01s avg, 5.8e+03s total. Expected time remaining: 9.2e+02s
2020-10-24 15:46:50,052 - root - INFO - #138 MAX:accuracy.mean: 0.29
2020-10-24 15:46:50,211 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:47:28,278 - root - DEBUG - Updating hall of fame
2020-10-24 15:47:29,378 - root - INFO - Completed generation 139; 3.9e+01s elapsed, 4.2e+01s avg, 5.8e+03s total. Expected time remaining: 8.8e+02s
2020-10-24 15:47:29,471 - root - INFO - #139 MAX:accuracy.mean: 0.28
2020-10-24 15:47:29,628 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:48:08,043 - root - DEBUG - Updating hall of fame
2020-10-24 15:48:09,167 - root - INFO - Completed generation 140; 4e+01s elapsed, 4.2e+01s avg, 5.9e+03s total. Expected time remaining: 8.4e+02s
2020-10-24 15:48:09,259 - root - INFO - #140 MAX:accuracy.mean: 0.29
2020-10-24 15:48:09,525 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:48:48,287 - root - DEBUG - Updating hall of fame
2020-10-24 15:48:49,760 - root - INFO - Completed generation 141; 4e+01s elapsed, 4.2e+01s avg, 5.9e+03s total. Expected time remaining: 8e+02s
2020-10-24 15:48:49,856 - root - INFO - #141 MAX:accuracy.mean: 0.31
2020-10-24 15:48:50,015 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:49:28,271 - root - DEBUG - Updating hall of fame
2020-10-24 15:49:29,832 - root - INFO - Completed generation 142; 4e+01s elapsed, 4.2e+01s avg, 6e+03s total. Expected time remaining: 7.5e+02s
2020-10-24 15:49:29,924 - root - INFO - #142 MAX:accuracy.mean: 0.29
2020-10-24 15:49:30,083 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:50:08,319 - root - DEBUG - Updating hall of fame
2020-10-24 15:50:09,218 - root - INFO - Completed generation 143; 3.9e+01s elapsed, 4.2e+01s avg, 6e+03s total. Expected time remaining: 7.1e+02s
2020-10-24 15:50:09,312 - root - INFO - #143 MAX:accuracy.mean: 0.29
2020-10-24 15:50:09,465 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:50:48,608 - root - DEBUG - Updating hall of fame
2020-10-24 15:50:49,448 - root - INFO - Completed generation 144; 4e+01s elapsed, 4.2e+01s avg, 6e+03s total. Expected time remaining: 6.7e+02s
2020-10-24 15:50:49,541 - root - INFO - #144 MAX:accuracy.mean: 0.3
2020-10-24 15:50:49,701 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:51:24,922 - root - DEBUG - Updating hall of fame
2020-10-24 15:51:26,350 - root - INFO - Completed generation 145; 3.7e+01s elapsed, 4.2e+01s avg, 6.1e+03s total. Expected time remaining: 6.3e+02s
2020-10-24 15:51:26,442 - root - INFO - #145 MAX:accuracy.mean: 0.31
2020-10-24 15:51:26,596 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:52:05,662 - root - DEBUG - Updating hall of fame
2020-10-24 15:52:06,738 - root - INFO - Completed generation 146; 4e+01s elapsed, 4.2e+01s avg, 6.1e+03s total. Expected time remaining: 5.9e+02s
2020-10-24 15:52:06,829 - root - INFO - #146 MAX:accuracy.mean: 0.3
2020-10-24 15:52:06,985 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:52:41,580 - root - DEBUG - Updating hall of fame
2020-10-24 15:52:42,936 - root - INFO - Completed generation 147; 3.6e+01s elapsed, 4.2e+01s avg, 6.1e+03s total. Expected time remaining: 5.4e+02s
2020-10-24 15:52:43,031 - root - INFO - #147 MAX:accuracy.mean: 0.31
2020-10-24 15:52:43,178 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:53:17,441 - root - DEBUG - Updating hall of fame
2020-10-24 15:53:18,505 - root - INFO - Completed generation 148; 3.5e+01s elapsed, 4.2e+01s avg, 6.2e+03s total. Expected time remaining: 5e+02s
2020-10-24 15:53:18,595 - root - INFO - #148 MAX:accuracy.mean: 0.3
2020-10-24 15:53:18,746 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:53:54,451 - root - DEBUG - Updating hall of fame
2020-10-24 15:53:55,451 - root - INFO - Completed generation 149; 3.7e+01s elapsed, 4.2e+01s avg, 6.2e+03s total. Expected time remaining: 4.6e+02s
2020-10-24 15:53:55,541 - root - INFO - #149 MAX:accuracy.mean: 0.33
2020-10-24 15:53:55,694 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:54:32,866 - root - DEBUG - Updating hall of fame
2020-10-24 15:54:34,262 - root - INFO - Completed generation 150; 3.9e+01s elapsed, 4.2e+01s avg, 6.3e+03s total. Expected time remaining: 4.2e+02s
2020-10-24 15:54:34,353 - root - INFO - #150 MAX:accuracy.mean: 0.31
2020-10-24 15:54:34,550 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:55:11,354 - root - DEBUG - Updating hall of fame
2020-10-24 15:55:12,087 - root - INFO - Completed generation 151; 3.8e+01s elapsed, 4.2e+01s avg, 6.3e+03s total. Expected time remaining: 3.8e+02s
2020-10-24 15:55:12,176 - root - INFO - #151 MAX:accuracy.mean: 0.31
2020-10-24 15:55:12,323 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:55:48,881 - root - DEBUG - Updating hall of fame
2020-10-24 15:55:49,655 - root - INFO - Completed generation 152; 3.7e+01s elapsed, 4.2e+01s avg, 6.3e+03s total. Expected time remaining: 3.3e+02s
2020-10-24 15:55:49,748 - root - INFO - #152 MAX:accuracy.mean: 0.32
2020-10-24 15:55:49,895 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:56:25,496 - root - DEBUG - Updating hall of fame
2020-10-24 15:56:26,359 - root - INFO - Completed generation 153; 3.7e+01s elapsed, 4.2e+01s avg, 6.4e+03s total. Expected time remaining: 2.9e+02s
2020-10-24 15:56:26,448 - root - INFO - #153 MAX:accuracy.mean: 0.31
2020-10-24 15:56:26,598 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:57:02,828 - root - DEBUG - Updating hall of fame
2020-10-24 15:57:03,311 - root - INFO - Completed generation 154; 3.7e+01s elapsed, 4.2e+01s avg, 6.4e+03s total. Expected time remaining: 2.5e+02s
2020-10-24 15:57:03,404 - root - INFO - #154 MAX:accuracy.mean: 0.31
2020-10-24 15:57:03,554 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:57:39,390 - root - DEBUG - Updating hall of fame
2020-10-24 15:57:40,323 - root - INFO - Completed generation 155; 3.7e+01s elapsed, 4.2e+01s avg, 6.4e+03s total. Expected time remaining: 2.1e+02s
2020-10-24 15:57:40,412 - root - INFO - #155 MAX:accuracy.mean: 0.31
2020-10-24 15:57:40,564 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:58:19,997 - root - DEBUG - Updating hall of fame
2020-10-24 15:58:21,281 - root - INFO - Completed generation 156; 4.1e+01s elapsed, 4.2e+01s avg, 6.5e+03s total. Expected time remaining: 1.7e+02s
2020-10-24 15:58:21,372 - root - INFO - #156 MAX:accuracy.mean: 0.32
2020-10-24 15:58:21,526 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:59:01,006 - root - DEBUG - Updating hall of fame
2020-10-24 15:59:01,677 - root - INFO - Completed generation 157; 4e+01s elapsed, 4.2e+01s avg, 6.5e+03s total. Expected time remaining: 1.2e+02s
2020-10-24 15:59:01,776 - root - INFO - #157 MAX:accuracy.mean: 0.3
2020-10-24 15:59:01,930 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 15:59:37,641 - root - DEBUG - Updating hall of fame
2020-10-24 15:59:38,280 - root - INFO - Completed generation 158; 3.7e+01s elapsed, 4.2e+01s avg, 6.6e+03s total. Expected time remaining: 8.3e+01s
2020-10-24 15:59:38,375 - root - INFO - #158 MAX:accuracy.mean: 0.31
2020-10-24 15:59:38,531 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:00:14,261 - root - DEBUG - Updating hall of fame
2020-10-24 16:00:15,482 - root - INFO - Completed generation 159; 3.7e+01s elapsed, 4.1e+01s avg, 6.6e+03s total. Expected time remaining: 4.1e+01s
2020-10-24 16:00:15,575 - root - INFO - #159 MAX:accuracy.mean: 0.31
2020-10-24 16:00:15,722 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 16:00:51,884 - root - DEBUG - Updating hall of fame
2020-10-24 16:00:52,667 - root - INFO - Completed generation 160; 3.7e+01s elapsed, 4.1e+01s avg, 6.6e+03s total. Expected time remaining: 0.0s
2020-10-24 16:00:52,759 - root - INFO - #160 MAX:accuracy.mean: 0.33
2020-10-24 16:00:53,535 - root - DEBUG - Loaded 10000 samples.
2020-10-24 16:00:53,555 - root - INFO - Evaluating indivs in hall of fame.
2020-10-24 16:02:16,949 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-24 16:02:16,950 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,950 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,950 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,951 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,952 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,953 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,954 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium-Italic.ttf) italic normal medium normal>) = 11.145
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,955 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (lobster.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bold Oblique' (UniversalisADFStd-BoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,956 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,957 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Solid-900.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,958 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,959 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,960 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,961 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBoldItalic.otf) italic normal semibold normal>) = 11.24
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:16,962 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,963 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,964 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Gazis' (GFSGazis.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,965 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Brands' (Font Awesome 5 Brands-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal light condensed>) = 11.44
2020-10-24 16:02:16,966 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,967 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,967 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,967 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,967 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,967 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,967 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenic.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,967 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-24 16:02:16,967 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS BodoniClassic' (GFSBodoniClassic.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal book normal>) = 11.05
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:16,968 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-LightItalic.otf) italic normal light normal>) = 11.24
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,969 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RBI.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Display O' (LinLibertine_DR.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:16,970 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,971 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,972 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZ.otf) normal normal semibold normal>) = 10.24
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,973 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,974 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard Sans' (BagnardSans.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:16,975 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,976 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,977 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal light condensed>) = 10.44
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,978 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:16,979 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,979 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:16,979 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZI.otf) italic normal semibold normal>) = 11.24
2020-10-24 16:02:16,979 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:16,979 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-24 16:02:16,979 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,979 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,979 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-boldslanted.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,980 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,981 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,982 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,982 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,982 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-24 16:02:16,982 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,982 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,982 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,982 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,982 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,983 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 16:02:16,983 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,983 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,983 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand_Dash.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,983 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,983 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,983 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,984 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-slanted.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,985 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal book normal>) = 11.05
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,986 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2020-10-24 16:02:16,987 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Asana Math' (Asana-Math.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,988 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidot.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 16:02:16,989 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
2020-10-24 16:02:16,990 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareB.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,991 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,991 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,991 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,991 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,991 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,991 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,992 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:16,993 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,994 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Medium.otf) normal normal medium normal>) = 10.145
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCondObl.otf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,995 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,996 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot Classic' (GFSDidotClassic.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,997 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,998 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard' (Bagnard.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:16,999 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,000 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,000 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,000 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,000 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:17,000 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,000 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,001 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,002 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,003 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,004 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Light.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,005 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,006 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,007 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSArtemisiaBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundR.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,008 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-MediumItalic.otf) italic normal medium normal>) = 11.145
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,009 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,010 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,011 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,012 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Solomos' (GFSSolomos.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,013 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,014 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,015 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,016 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,016 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,016 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,016 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,016 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,016 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,016 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,016 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-CondOblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Olga' (GFSOlga.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,017 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oblique' (UniversalisADFStd-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,018 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundB.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,019 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,020 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,021 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,022 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 700 normal>) = 11.335
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphorigenic' (euphorigenic.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,023 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal regular condensed>) = 10.25
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,024 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-LightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Complutum' (GFSPolyglot.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,025 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,026 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,026 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,026 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,026 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,026 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,026 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,026 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,026 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,027 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,027 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,027 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,027 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,028 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran' (amiri-quran.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum Keyboard O' (LinBiolinum_K.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,029 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisia.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,030 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Initials O' (LinLibertine_I.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,031 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Mono O' (LinLibertine_M.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:17,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,032 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,033 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,034 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,035 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,036 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran Colored' (amiri-quran-colored.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBold.otf) normal normal semibold normal>) = 10.24
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,037 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Theokritos' (GFSTheokritos.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,038 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal demi condensed>) = 11.44
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,039 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareR.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,040 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,041 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,042 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-24 16:02:17,043 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,044 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/data/Lab/rewann/venv/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-24 16:02:17,099 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-10-24 16:02:17,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-24 16:02:17,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,100 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-24 16:02:17,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,101 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,102 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-24 16:02:17,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,103 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,104 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium-Italic.ttf) italic normal medium normal>) = 11.145
2020-10-24 16:02:17,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,105 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (lobster.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,106 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bold Oblique' (UniversalisADFStd-BoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:17,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,107 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,108 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Solid-900.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,109 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:17,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,110 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 16:02:17,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,111 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,112 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,113 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBoldItalic.otf) italic normal semibold normal>) = 11.24
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 16:02:17,114 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 16:02:17,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
2020-10-24 16:02:17,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,115 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 16:02:17,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,116 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Gazis' (GFSGazis.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,117 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Brands' (Font Awesome 5 Brands-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,118 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal light condensed>) = 11.44
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenic.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,119 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-24 16:02:17,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS BodoniClassic' (GFSBodoniClassic.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,120 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal book normal>) = 11.05
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-LightItalic.otf) italic normal light normal>) = 11.24
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,121 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 16:02:17,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 16:02:17,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RBI.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,122 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Display O' (LinLibertine_DR.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,123 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:17,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:17,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 16:02:17,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,124 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
2020-10-24 16:02:17,125 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,125 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,125 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2020-10-24 16:02:17,125 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,125 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,125 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,125 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:17,125 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 16:02:17,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,126 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZ.otf) normal normal semibold normal>) = 10.24
2020-10-24 16:02:17,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2020-10-24 16:02:17,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,127 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,128 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:17,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,129 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard Sans' (BagnardSans.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:17,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,130 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
2020-10-24 16:02:17,131 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:17,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal light condensed>) = 10.44
2020-10-24 16:02:17,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,132 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZI.otf) italic normal semibold normal>) = 11.24
2020-10-24 16:02:17,133 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 16:02:17,134 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-boldslanted.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,135 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-24 16:02:17,136 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand_Dash.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,137 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,138 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-slanted.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,139 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,140 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal book normal>) = 11.05
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:17,141 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Asana Math' (Asana-Math.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,142 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,143 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidot.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,144 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareB.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,145 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,146 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,147 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,148 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,149 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Medium.otf) normal normal medium normal>) = 10.145
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCondObl.otf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,150 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,151 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot Classic' (GFSDidotClassic.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,152 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,153 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard' (Bagnard.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,154 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,155 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,156 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 16:02:17,157 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,158 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,159 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Light.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,160 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,161 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSArtemisiaBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,162 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,163 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,163 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,163 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
2020-10-24 16:02:17,163 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,163 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,163 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundR.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,163 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-MediumItalic.otf) italic normal medium normal>) = 11.145
2020-10-24 16:02:17,163 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,164 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,165 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,166 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,167 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Solomos' (GFSSolomos.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,168 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,169 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,169 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,169 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,169 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,169 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,169 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,169 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,169 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,170 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,170 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,170 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,170 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,170 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,170 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,170 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,170 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,171 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,172 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-CondOblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-24 16:02:17,172 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 16:02:17,172 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,172 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,172 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,172 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,172 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Olga' (GFSOlga.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,172 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oblique' (UniversalisADFStd-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,173 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,174 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,174 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,174 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,174 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,174 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundB.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,174 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,174 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,174 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,175 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,176 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,176 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,176 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,176 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,176 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,176 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,176 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,176 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,177 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,178 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,178 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,178 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,178 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,178 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,178 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,178 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,178 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 700 normal>) = 11.335
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,179 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphorigenic' (euphorigenic.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,180 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,180 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,180 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,180 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,180 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal regular condensed>) = 10.25
2020-10-24 16:02:17,180 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,180 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,180 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,181 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,181 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,181 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,181 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,181 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,181 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,181 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,181 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,182 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,182 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,182 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-LightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 16:02:17,182 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,182 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,182 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,182 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Complutum' (GFSPolyglot.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,183 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaBold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,184 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran' (amiri-quran.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum Keyboard O' (LinBiolinum_K.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,185 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisia.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 16:02:17,186 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Initials O' (LinLibertine_I.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Mono O' (LinLibertine_M.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,187 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,188 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,189 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,189 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 16:02:17,189 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,189 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,189 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,189 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,189 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,189 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,190 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,191 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,191 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,191 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,191 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,191 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,191 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,192 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran Colored' (amiri-quran-colored.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBold.otf) normal normal semibold normal>) = 10.24
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,193 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Theokritos' (GFSTheokritos.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,194 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal demi condensed>) = 11.44
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,195 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareR.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,196 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,197 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 16:02:17,198 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,199 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,199 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 16:02:17,199 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,199 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2020-10-24 16:02:17,199 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 16:02:17,199 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-24 16:02:17,200 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 16:02:17,200 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/data/Lab/rewann/venv/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-24 16:02:18,988 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f0134026940>
2020-10-24 16:02:18,989 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:18,989 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f0134026940>
2020-10-24 16:02:18,989 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:21,844 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011b042d00>
2020-10-24 16:02:21,845 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:21,845 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011b042d00>
2020-10-24 16:02:21,845 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:24,631 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f012c0611c0>
2020-10-24 16:02:24,631 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:24,631 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f012c0611c0>
2020-10-24 16:02:24,632 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:27,470 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011a85d940>
2020-10-24 16:02:27,470 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:27,470 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011a85d940>
2020-10-24 16:02:27,470 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:30,291 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011b0631f0>
2020-10-24 16:02:30,292 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:30,292 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011b0631f0>
2020-10-24 16:02:30,292 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:33,016 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011afe55b0>
2020-10-24 16:02:33,016 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:33,016 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011afe55b0>
2020-10-24 16:02:33,016 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:35,743 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011a598b50>
2020-10-24 16:02:35,743 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:35,743 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011a598b50>
2020-10-24 16:02:35,743 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:38,839 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f012c144070>
2020-10-24 16:02:38,839 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:38,839 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f012c144070>
2020-10-24 16:02:38,840 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:41,610 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011a92fb80>
2020-10-24 16:02:41,610 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:41,610 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011a92fb80>
2020-10-24 16:02:41,610 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:44,671 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011b043550>
2020-10-24 16:02:44,671 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 16:02:44,671 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f011b043550>
2020-10-24 16:02:44,672 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 16:02:46,501 - root - INFO - Completed excution.
