2020-10-24 12:14:43,753 - root - INFO - Package version 0.1.1
2020-10-24 12:14:43,754 - root - INFO - Saving data at /data/Lab/rewann/wann-results/data/mnist_extensive/time_measurement/data/2020-10-24_mnist256 linspace -2,2 0_000.
2020-10-24 12:14:43,754 - root - DEBUG - Loading training dataset
2020-10-24 12:14:46,962 - root - DEBUG - Loaded 60000 samples.
2020-10-24 12:14:46,963 - root - DEBUG - Running experiments with the following parameters:
debug = false
experiment_name = "mnist256 linspace -2,2 0"
experiment_path = "data/2020-10-24_mnist256 linspace -2,2 0_000"

[config]
num_workers = 1
debug = true
backend = "torch"

[postopt]
run_postopt = true
compile_report = true
num_weights = 100
num_samples = -1

[sampling]
seed = 0
post_init_seed = false
distribution = "linspace"
lower_bound = -2
upper_bound = 2
mean = 0
sigma = 0.5
num_weights_per_iteration = 6
num_samples_per_iteration = 2000
hof_evaluation_iterations = 4

[task]
name = "mnist256"
sample_order_seed = 0
test_portion = 0.2
sample_length = 10
num_categories = 8

[storage]
data_base_path = "data"
log_filename = "execution.log"
commit_elite_freq = -1
commit_metrics_freq = 10
include_prediction_records = false

[population]
num_generations = 160
size = 320
initial_enabled_edge_prob = 0.05
initial_genes = "full"
initial_func = "random"
hof_size = 10
enable_edge_signs = true
enabled_activation_funcs = "all"
initial_enabled_edge_probability = 0.05
enabled_activation_functions = "all"
initial_with_edges = true

[selection]
use_tournaments = true
elite_ratio = 0.1
culling_ratio = 0.2
tournament_size = 5
objectives = [ "-log_loss.min", "-log_loss.mean", "-n_hidden",]
recorded_metrics = [ "accuracy", "kappa", "log_loss",]
hof_metric = "accuracy.mean"

[mutation.new_edge]
probability = 0.2
strategy = "layer_agnostic"
propability = 0.2

[mutation.new_node]
probability = 0.25
propability = 0.3

[mutation.reenable_edge]
probability = 0.05
propability = 0.1

[mutation.change_activation]
probability = 0.5
propability = 0.4

[mutation.change_edge_sign]
probability = 0.2

[mutation.new_recurrent_edge]
probability = 0.2
strategy = "any"

[mutation.add_recurrent_edge]
probability = 0.3

2020-10-24 12:14:46,964 - root - INFO - Starting evolutionary algorithm
2020-10-24 12:14:47,103 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:15:20,547 - root - DEBUG - Updating hall of fame
2020-10-24 12:15:30,814 - root - INFO - Completed generation 1; 4.4e+01s elapsed, 4.4e+01s avg, 4.4e+01s total. Expected time remaining: 7e+03s
2020-10-24 12:15:31,014 - root - INFO - #1 MAX:accuracy.mean: 0.18
2020-10-24 12:15:31,361 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:16:18,364 - root - DEBUG - Updating hall of fame
2020-10-24 12:16:27,956 - root - INFO - Completed generation 2; 5.7e+01s elapsed, 5e+01s avg, 1e+02s total. Expected time remaining: 8e+03s
2020-10-24 12:16:28,179 - root - INFO - #2 MAX:accuracy.mean: 0.15
2020-10-24 12:16:28,458 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:17:09,902 - root - DEBUG - Updating hall of fame
2020-10-24 12:17:17,511 - root - INFO - Completed generation 3; 4.9e+01s elapsed, 5e+01s avg, 1.5e+02s total. Expected time remaining: 7.9e+03s
2020-10-24 12:17:17,613 - root - INFO - #3 MAX:accuracy.mean: 0.18
2020-10-24 12:17:17,751 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:17:53,287 - root - DEBUG - Updating hall of fame
2020-10-24 12:18:01,095 - root - INFO - Completed generation 4; 4.3e+01s elapsed, 4.8e+01s avg, 1.9e+02s total. Expected time remaining: 7.6e+03s
2020-10-24 12:18:01,196 - root - INFO - #4 MAX:accuracy.mean: 0.17
2020-10-24 12:18:01,334 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:18:37,179 - root - DEBUG - Updating hall of fame
2020-10-24 12:18:42,504 - root - INFO - Completed generation 5; 4.1e+01s elapsed, 4.7e+01s avg, 2.3e+02s total. Expected time remaining: 7.3e+03s
2020-10-24 12:18:42,601 - root - INFO - #5 MAX:accuracy.mean: 0.18
2020-10-24 12:18:42,758 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:19:19,939 - root - DEBUG - Updating hall of fame
2020-10-24 12:19:25,007 - root - INFO - Completed generation 6; 4.2e+01s elapsed, 4.6e+01s avg, 2.8e+02s total. Expected time remaining: 7.1e+03s
2020-10-24 12:19:25,103 - root - INFO - #6 MAX:accuracy.mean: 0.21
2020-10-24 12:19:25,246 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:19:57,100 - root - DEBUG - Updating hall of fame
2020-10-24 12:20:01,429 - root - INFO - Completed generation 7; 3.6e+01s elapsed, 4.5e+01s avg, 3.1e+02s total. Expected time remaining: 6.9e+03s
2020-10-24 12:20:01,519 - root - INFO - #7 MAX:accuracy.mean: 0.18
2020-10-24 12:20:01,660 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:20:33,404 - root - DEBUG - Updating hall of fame
2020-10-24 12:20:35,946 - root - INFO - Completed generation 8; 3.4e+01s elapsed, 4.4e+01s avg, 3.5e+02s total. Expected time remaining: 6.6e+03s
2020-10-24 12:20:36,045 - root - INFO - #8 MAX:accuracy.mean: 0.2
2020-10-24 12:20:36,187 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:21:09,344 - root - DEBUG - Updating hall of fame
2020-10-24 12:21:13,528 - root - INFO - Completed generation 9; 3.7e+01s elapsed, 4.3e+01s avg, 3.9e+02s total. Expected time remaining: 6.5e+03s
2020-10-24 12:21:13,620 - root - INFO - #9 MAX:accuracy.mean: 0.19
2020-10-24 12:21:13,768 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:21:46,494 - root - DEBUG - Updating hall of fame
2020-10-24 12:21:48,774 - root - INFO - Completed generation 10; 3.5e+01s elapsed, 4.2e+01s avg, 4.2e+02s total. Expected time remaining: 6.3e+03s
2020-10-24 12:21:48,864 - root - INFO - #10 MAX:accuracy.mean: 0.22
2020-10-24 12:21:49,036 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:22:20,811 - root - DEBUG - Updating hall of fame
2020-10-24 12:22:24,857 - root - INFO - Completed generation 11; 3.6e+01s elapsed, 4.2e+01s avg, 4.6e+02s total. Expected time remaining: 6.2e+03s
2020-10-24 12:22:24,967 - root - INFO - #11 MAX:accuracy.mean: 0.23
2020-10-24 12:22:25,125 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:22:56,443 - root - DEBUG - Updating hall of fame
2020-10-24 12:22:59,395 - root - INFO - Completed generation 12; 3.4e+01s elapsed, 4.1e+01s avg, 4.9e+02s total. Expected time remaining: 6.1e+03s
2020-10-24 12:22:59,483 - root - INFO - #12 MAX:accuracy.mean: 0.23
2020-10-24 12:22:59,623 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:23:30,770 - root - DEBUG - Updating hall of fame
2020-10-24 12:23:33,081 - root - INFO - Completed generation 13; 3.4e+01s elapsed, 4e+01s avg, 5.2e+02s total. Expected time remaining: 5.9e+03s
2020-10-24 12:23:33,171 - root - INFO - #13 MAX:accuracy.mean: 0.23
2020-10-24 12:23:33,323 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:24:08,319 - root - DEBUG - Updating hall of fame
2020-10-24 12:24:09,994 - root - INFO - Completed generation 14; 3.7e+01s elapsed, 4e+01s avg, 5.6e+02s total. Expected time remaining: 5.9e+03s
2020-10-24 12:24:10,099 - root - INFO - #14 MAX:accuracy.mean: 0.24
2020-10-24 12:24:10,239 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:24:43,761 - root - DEBUG - Updating hall of fame
2020-10-24 12:24:46,312 - root - INFO - Completed generation 15; 3.6e+01s elapsed, 4e+01s avg, 6e+02s total. Expected time remaining: 5.8e+03s
2020-10-24 12:24:46,398 - root - INFO - #15 MAX:accuracy.mean: 0.23
2020-10-24 12:24:46,553 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:25:19,484 - root - DEBUG - Updating hall of fame
2020-10-24 12:25:22,137 - root - INFO - Completed generation 16; 3.6e+01s elapsed, 4e+01s avg, 6.3e+02s total. Expected time remaining: 5.7e+03s
2020-10-24 12:25:22,226 - root - INFO - #16 MAX:accuracy.mean: 0.24
2020-10-24 12:25:22,380 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:25:55,944 - root - DEBUG - Updating hall of fame
2020-10-24 12:25:57,637 - root - INFO - Completed generation 17; 3.5e+01s elapsed, 3.9e+01s avg, 6.7e+02s total. Expected time remaining: 5.6e+03s
2020-10-24 12:25:57,724 - root - INFO - #17 MAX:accuracy.mean: 0.25
2020-10-24 12:25:57,864 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:26:32,764 - root - DEBUG - Updating hall of fame
2020-10-24 12:26:36,205 - root - INFO - Completed generation 18; 3.8e+01s elapsed, 3.9e+01s avg, 7.1e+02s total. Expected time remaining: 5.6e+03s
2020-10-24 12:26:36,297 - root - INFO - #18 MAX:accuracy.mean: 0.25
2020-10-24 12:26:36,439 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:27:13,699 - root - DEBUG - Updating hall of fame
2020-10-24 12:27:16,150 - root - INFO - Completed generation 19; 4e+01s elapsed, 3.9e+01s avg, 7.5e+02s total. Expected time remaining: 5.5e+03s
2020-10-24 12:27:16,271 - root - INFO - #19 MAX:accuracy.mean: 0.25
2020-10-24 12:27:16,424 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:27:49,550 - root - DEBUG - Updating hall of fame
2020-10-24 12:27:52,848 - root - INFO - Completed generation 20; 3.7e+01s elapsed, 3.9e+01s avg, 7.8e+02s total. Expected time remaining: 5.5e+03s
2020-10-24 12:27:52,935 - root - INFO - #20 MAX:accuracy.mean: 0.24
2020-10-24 12:27:53,114 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:28:25,194 - root - DEBUG - Updating hall of fame
2020-10-24 12:28:27,179 - root - INFO - Completed generation 21; 3.4e+01s elapsed, 3.9e+01s avg, 8.2e+02s total. Expected time remaining: 5.4e+03s
2020-10-24 12:28:27,266 - root - INFO - #21 MAX:accuracy.mean: 0.25
2020-10-24 12:28:27,405 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:29:03,680 - root - DEBUG - Updating hall of fame
2020-10-24 12:29:06,886 - root - INFO - Completed generation 22; 4e+01s elapsed, 3.9e+01s avg, 8.6e+02s total. Expected time remaining: 5.4e+03s
2020-10-24 12:29:06,975 - root - INFO - #22 MAX:accuracy.mean: 0.24
2020-10-24 12:29:07,174 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:29:43,931 - root - DEBUG - Updating hall of fame
2020-10-24 12:29:45,873 - root - INFO - Completed generation 23; 3.9e+01s elapsed, 3.9e+01s avg, 9e+02s total. Expected time remaining: 5.3e+03s
2020-10-24 12:29:45,974 - root - INFO - #23 MAX:accuracy.mean: 0.26
2020-10-24 12:29:46,144 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:30:26,584 - root - DEBUG - Updating hall of fame
2020-10-24 12:30:28,435 - root - INFO - Completed generation 24; 4.2e+01s elapsed, 3.9e+01s avg, 9.4e+02s total. Expected time remaining: 5.3e+03s
2020-10-24 12:30:28,547 - root - INFO - #24 MAX:accuracy.mean: 0.27
2020-10-24 12:30:28,706 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:31:07,908 - root - DEBUG - Updating hall of fame
2020-10-24 12:31:10,590 - root - INFO - Completed generation 25; 4.2e+01s elapsed, 3.9e+01s avg, 9.8e+02s total. Expected time remaining: 5.3e+03s
2020-10-24 12:31:10,688 - root - INFO - #25 MAX:accuracy.mean: 0.26
2020-10-24 12:31:10,832 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:31:48,530 - root - DEBUG - Updating hall of fame
2020-10-24 12:31:51,278 - root - INFO - Completed generation 26; 4.1e+01s elapsed, 3.9e+01s avg, 1e+03s total. Expected time remaining: 5.3e+03s
2020-10-24 12:31:51,378 - root - INFO - #26 MAX:accuracy.mean: 0.25
2020-10-24 12:31:51,526 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:32:30,771 - root - DEBUG - Updating hall of fame
2020-10-24 12:32:32,443 - root - INFO - Completed generation 27; 4.1e+01s elapsed, 3.9e+01s avg, 1.1e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 12:32:32,547 - root - INFO - #27 MAX:accuracy.mean: 0.26
2020-10-24 12:32:32,697 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:33:11,711 - root - DEBUG - Updating hall of fame
2020-10-24 12:33:15,315 - root - INFO - Completed generation 28; 4.3e+01s elapsed, 3.9e+01s avg, 1.1e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 12:33:15,479 - root - INFO - #28 MAX:accuracy.mean: 0.25
2020-10-24 12:33:15,692 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:33:54,317 - root - DEBUG - Updating hall of fame
2020-10-24 12:33:55,847 - root - INFO - Completed generation 29; 4e+01s elapsed, 4e+01s avg, 1.1e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 12:33:55,953 - root - INFO - #29 MAX:accuracy.mean: 0.25
2020-10-24 12:33:56,125 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:34:34,793 - root - DEBUG - Updating hall of fame
2020-10-24 12:34:36,801 - root - INFO - Completed generation 30; 4.1e+01s elapsed, 4e+01s avg, 1.2e+03s total. Expected time remaining: 5.1e+03s
2020-10-24 12:34:36,900 - root - INFO - #30 MAX:accuracy.mean: 0.25
2020-10-24 12:34:37,208 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:35:13,965 - root - DEBUG - Updating hall of fame
2020-10-24 12:35:17,121 - root - INFO - Completed generation 31; 4e+01s elapsed, 4e+01s avg, 1.2e+03s total. Expected time remaining: 5.1e+03s
2020-10-24 12:35:17,250 - root - INFO - #31 MAX:accuracy.mean: 0.26
2020-10-24 12:35:17,396 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:35:53,778 - root - DEBUG - Updating hall of fame
2020-10-24 12:35:56,010 - root - INFO - Completed generation 32; 3.9e+01s elapsed, 4e+01s avg, 1.3e+03s total. Expected time remaining: 5.1e+03s
2020-10-24 12:35:56,124 - root - INFO - #32 MAX:accuracy.mean: 0.25
2020-10-24 12:35:56,306 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:36:33,101 - root - DEBUG - Updating hall of fame
2020-10-24 12:36:33,752 - root - INFO - Completed generation 33; 3.8e+01s elapsed, 3.9e+01s avg, 1.3e+03s total. Expected time remaining: 5e+03s
2020-10-24 12:36:33,840 - root - INFO - #33 MAX:accuracy.mean: 0.25
2020-10-24 12:36:33,978 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:37:06,791 - root - DEBUG - Updating hall of fame
2020-10-24 12:37:08,821 - root - INFO - Completed generation 34; 3.5e+01s elapsed, 3.9e+01s avg, 1.3e+03s total. Expected time remaining: 5e+03s
2020-10-24 12:37:08,909 - root - INFO - #34 MAX:accuracy.mean: 0.25
2020-10-24 12:37:09,069 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:37:40,177 - root - DEBUG - Updating hall of fame
2020-10-24 12:37:41,829 - root - INFO - Completed generation 35; 3.3e+01s elapsed, 3.9e+01s avg, 1.4e+03s total. Expected time remaining: 4.9e+03s
2020-10-24 12:37:41,918 - root - INFO - #35 MAX:accuracy.mean: 0.25
2020-10-24 12:37:42,062 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:38:15,738 - root - DEBUG - Updating hall of fame
2020-10-24 12:38:17,831 - root - INFO - Completed generation 36; 3.6e+01s elapsed, 3.9e+01s avg, 1.4e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 12:38:17,919 - root - INFO - #36 MAX:accuracy.mean: 0.25
2020-10-24 12:38:18,069 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:38:51,032 - root - DEBUG - Updating hall of fame
2020-10-24 12:38:52,260 - root - INFO - Completed generation 37; 3.4e+01s elapsed, 3.9e+01s avg, 1.4e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 12:38:52,355 - root - INFO - #37 MAX:accuracy.mean: 0.25
2020-10-24 12:38:52,515 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:39:28,743 - root - DEBUG - Updating hall of fame
2020-10-24 12:39:30,524 - root - INFO - Completed generation 38; 3.8e+01s elapsed, 3.9e+01s avg, 1.5e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 12:39:30,613 - root - INFO - #38 MAX:accuracy.mean: 0.26
2020-10-24 12:39:30,753 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:40:03,676 - root - DEBUG - Updating hall of fame
2020-10-24 12:40:05,434 - root - INFO - Completed generation 39; 3.5e+01s elapsed, 3.9e+01s avg, 1.5e+03s total. Expected time remaining: 4.7e+03s
2020-10-24 12:40:05,536 - root - INFO - #39 MAX:accuracy.mean: 0.29
2020-10-24 12:40:05,697 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:40:39,715 - root - DEBUG - Updating hall of fame
2020-10-24 12:40:41,060 - root - INFO - Completed generation 40; 3.6e+01s elapsed, 3.9e+01s avg, 1.5e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 12:40:41,147 - root - INFO - #40 MAX:accuracy.mean: 0.27
2020-10-24 12:40:41,313 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:41:21,399 - root - DEBUG - Updating hall of fame
2020-10-24 12:41:24,497 - root - INFO - Completed generation 41; 4.3e+01s elapsed, 3.9e+01s avg, 1.6e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 12:41:24,624 - root - INFO - #41 MAX:accuracy.mean: 0.3
2020-10-24 12:41:24,853 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:42:04,442 - root - DEBUG - Updating hall of fame
2020-10-24 12:42:07,308 - root - INFO - Completed generation 42; 4.3e+01s elapsed, 3.9e+01s avg, 1.6e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 12:42:07,414 - root - INFO - #42 MAX:accuracy.mean: 0.31
2020-10-24 12:42:07,575 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:42:51,006 - root - DEBUG - Updating hall of fame
2020-10-24 12:42:54,518 - root - INFO - Completed generation 43; 4.7e+01s elapsed, 3.9e+01s avg, 1.7e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 12:42:54,617 - root - INFO - #43 MAX:accuracy.mean: 0.3
2020-10-24 12:42:54,758 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:43:34,209 - root - DEBUG - Updating hall of fame
2020-10-24 12:43:37,652 - root - INFO - Completed generation 44; 4.3e+01s elapsed, 3.9e+01s avg, 1.7e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 12:43:37,746 - root - INFO - #44 MAX:accuracy.mean: 0.3
2020-10-24 12:43:37,886 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:44:15,467 - root - DEBUG - Updating hall of fame
2020-10-24 12:44:16,768 - root - INFO - Completed generation 45; 3.9e+01s elapsed, 3.9e+01s avg, 1.8e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 12:44:16,859 - root - INFO - #45 MAX:accuracy.mean: 0.3
2020-10-24 12:44:17,022 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:44:50,835 - root - DEBUG - Updating hall of fame
2020-10-24 12:44:52,249 - root - INFO - Completed generation 46; 3.5e+01s elapsed, 3.9e+01s avg, 1.8e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 12:44:52,338 - root - INFO - #46 MAX:accuracy.mean: 0.3
2020-10-24 12:44:52,480 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:45:26,660 - root - DEBUG - Updating hall of fame
2020-10-24 12:45:28,317 - root - INFO - Completed generation 47; 3.6e+01s elapsed, 3.9e+01s avg, 1.8e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 12:45:28,506 - root - INFO - #47 MAX:accuracy.mean: 0.29
2020-10-24 12:45:28,762 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:46:02,500 - root - DEBUG - Updating hall of fame
2020-10-24 12:46:03,391 - root - INFO - Completed generation 48; 3.5e+01s elapsed, 3.9e+01s avg, 1.9e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 12:46:03,490 - root - INFO - #48 MAX:accuracy.mean: 0.29
2020-10-24 12:46:03,648 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:46:42,309 - root - DEBUG - Updating hall of fame
2020-10-24 12:46:43,637 - root - INFO - Completed generation 49; 4e+01s elapsed, 3.9e+01s avg, 1.9e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 12:46:43,728 - root - INFO - #49 MAX:accuracy.mean: 0.29
2020-10-24 12:46:43,869 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:47:19,307 - root - DEBUG - Updating hall of fame
2020-10-24 12:47:20,731 - root - INFO - Completed generation 50; 3.7e+01s elapsed, 3.9e+01s avg, 1.9e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 12:47:20,822 - root - INFO - #50 MAX:accuracy.mean: 0.3
2020-10-24 12:47:21,010 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:47:56,622 - root - DEBUG - Updating hall of fame
2020-10-24 12:47:59,212 - root - INFO - Completed generation 51; 3.8e+01s elapsed, 3.9e+01s avg, 2e+03s total. Expected time remaining: 4.2e+03s
2020-10-24 12:47:59,304 - root - INFO - #51 MAX:accuracy.mean: 0.3
2020-10-24 12:47:59,445 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:48:39,103 - root - DEBUG - Updating hall of fame
2020-10-24 12:48:39,855 - root - INFO - Completed generation 52; 4.1e+01s elapsed, 3.9e+01s avg, 2e+03s total. Expected time remaining: 4.2e+03s
2020-10-24 12:48:39,956 - root - INFO - #52 MAX:accuracy.mean: 0.3
2020-10-24 12:48:40,119 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:49:15,154 - root - DEBUG - Updating hall of fame
2020-10-24 12:49:16,580 - root - INFO - Completed generation 53; 3.7e+01s elapsed, 3.9e+01s avg, 2.1e+03s total. Expected time remaining: 4.2e+03s
2020-10-24 12:49:16,683 - root - INFO - #53 MAX:accuracy.mean: 0.31
2020-10-24 12:49:16,844 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:49:57,945 - root - DEBUG - Updating hall of fame
2020-10-24 12:49:58,956 - root - INFO - Completed generation 54; 4.2e+01s elapsed, 3.9e+01s avg, 2.1e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 12:49:59,064 - root - INFO - #54 MAX:accuracy.mean: 0.31
2020-10-24 12:49:59,253 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:50:34,936 - root - DEBUG - Updating hall of fame
2020-10-24 12:50:36,093 - root - INFO - Completed generation 55; 3.7e+01s elapsed, 3.9e+01s avg, 2.1e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 12:50:36,192 - root - INFO - #55 MAX:accuracy.mean: 0.3
2020-10-24 12:50:36,446 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:51:15,736 - root - DEBUG - Updating hall of fame
2020-10-24 12:51:17,159 - root - INFO - Completed generation 56; 4.1e+01s elapsed, 3.9e+01s avg, 2.2e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 12:51:17,250 - root - INFO - #56 MAX:accuracy.mean: 0.3
2020-10-24 12:51:17,392 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:51:51,176 - root - DEBUG - Updating hall of fame
2020-10-24 12:51:52,813 - root - INFO - Completed generation 57; 3.6e+01s elapsed, 3.9e+01s avg, 2.2e+03s total. Expected time remaining: 4e+03s
2020-10-24 12:51:52,903 - root - INFO - #57 MAX:accuracy.mean: 0.3
2020-10-24 12:51:53,064 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:52:38,634 - root - DEBUG - Updating hall of fame
2020-10-24 12:52:39,868 - root - INFO - Completed generation 58; 4.7e+01s elapsed, 3.9e+01s avg, 2.3e+03s total. Expected time remaining: 4e+03s
2020-10-24 12:52:39,967 - root - INFO - #58 MAX:accuracy.mean: 0.3
2020-10-24 12:52:40,123 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:53:29,053 - root - DEBUG - Updating hall of fame
2020-10-24 12:53:30,549 - root - INFO - Completed generation 59; 5.1e+01s elapsed, 3.9e+01s avg, 2.3e+03s total. Expected time remaining: 4e+03s
2020-10-24 12:53:30,643 - root - INFO - #59 MAX:accuracy.mean: 0.3
2020-10-24 12:53:30,800 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:54:11,525 - root - DEBUG - Updating hall of fame
2020-10-24 12:54:14,090 - root - INFO - Completed generation 60; 4.3e+01s elapsed, 3.9e+01s avg, 2.4e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 12:54:14,180 - root - INFO - #60 MAX:accuracy.mean: 0.31
2020-10-24 12:54:14,357 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:54:53,825 - root - DEBUG - Updating hall of fame
2020-10-24 12:54:55,536 - root - INFO - Completed generation 61; 4.1e+01s elapsed, 3.9e+01s avg, 2.4e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 12:54:55,628 - root - INFO - #61 MAX:accuracy.mean: 0.3
2020-10-24 12:54:55,777 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:55:31,049 - root - DEBUG - Updating hall of fame
2020-10-24 12:55:32,453 - root - INFO - Completed generation 62; 3.7e+01s elapsed, 3.9e+01s avg, 2.4e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 12:55:32,636 - root - INFO - #62 MAX:accuracy.mean: 0.3
2020-10-24 12:55:32,958 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:56:12,601 - root - DEBUG - Updating hall of fame
2020-10-24 12:56:14,004 - root - INFO - Completed generation 63; 4.1e+01s elapsed, 3.9e+01s avg, 2.5e+03s total. Expected time remaining: 3.8e+03s
2020-10-24 12:56:14,102 - root - INFO - #63 MAX:accuracy.mean: 0.3
2020-10-24 12:56:14,242 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:56:47,186 - root - DEBUG - Updating hall of fame
2020-10-24 12:56:50,739 - root - INFO - Completed generation 64; 3.7e+01s elapsed, 3.9e+01s avg, 2.5e+03s total. Expected time remaining: 3.8e+03s
2020-10-24 12:56:50,916 - root - INFO - #64 MAX:accuracy.mean: 0.31
2020-10-24 12:56:51,096 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:57:33,124 - root - DEBUG - Updating hall of fame
2020-10-24 12:57:34,463 - root - INFO - Completed generation 65; 4.4e+01s elapsed, 3.9e+01s avg, 2.6e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 12:57:34,564 - root - INFO - #65 MAX:accuracy.mean: 0.31
2020-10-24 12:57:34,729 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:58:15,113 - root - DEBUG - Updating hall of fame
2020-10-24 12:58:16,656 - root - INFO - Completed generation 66; 4.2e+01s elapsed, 3.9e+01s avg, 2.6e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 12:58:16,761 - root - INFO - #66 MAX:accuracy.mean: 0.3
2020-10-24 12:58:16,929 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:58:56,095 - root - DEBUG - Updating hall of fame
2020-10-24 12:58:58,458 - root - INFO - Completed generation 67; 4.2e+01s elapsed, 3.9e+01s avg, 2.6e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 12:58:58,558 - root - INFO - #67 MAX:accuracy.mean: 0.33
2020-10-24 12:58:58,720 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 12:59:38,612 - root - DEBUG - Updating hall of fame
2020-10-24 12:59:40,031 - root - INFO - Completed generation 68; 4.1e+01s elapsed, 3.9e+01s avg, 2.7e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 12:59:40,141 - root - INFO - #68 MAX:accuracy.mean: 0.33
2020-10-24 12:59:40,322 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:00:19,464 - root - DEBUG - Updating hall of fame
2020-10-24 13:00:22,339 - root - INFO - Completed generation 69; 4.2e+01s elapsed, 4e+01s avg, 2.7e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 13:00:22,474 - root - INFO - #69 MAX:accuracy.mean: 0.3
2020-10-24 13:00:22,671 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:01:01,047 - root - DEBUG - Updating hall of fame
2020-10-24 13:01:02,196 - root - INFO - Completed generation 70; 4e+01s elapsed, 4e+01s avg, 2.8e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 13:01:02,302 - root - INFO - #70 MAX:accuracy.mean: 0.3
2020-10-24 13:01:02,525 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:01:40,540 - root - DEBUG - Updating hall of fame
2020-10-24 13:01:42,605 - root - INFO - Completed generation 71; 4e+01s elapsed, 4e+01s avg, 2.8e+03s total. Expected time remaining: 3.5e+03s
2020-10-24 13:01:42,709 - root - INFO - #71 MAX:accuracy.mean: 0.3
2020-10-24 13:01:42,880 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:02:21,325 - root - DEBUG - Updating hall of fame
2020-10-24 13:02:23,932 - root - INFO - Completed generation 72; 4.1e+01s elapsed, 4e+01s avg, 2.8e+03s total. Expected time remaining: 3.5e+03s
2020-10-24 13:02:24,044 - root - INFO - #72 MAX:accuracy.mean: 0.3
2020-10-24 13:02:24,207 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:03:02,954 - root - DEBUG - Updating hall of fame
2020-10-24 13:03:04,593 - root - INFO - Completed generation 73; 4.1e+01s elapsed, 4e+01s avg, 2.9e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 13:03:04,694 - root - INFO - #73 MAX:accuracy.mean: 0.33
2020-10-24 13:03:04,860 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:03:43,415 - root - DEBUG - Updating hall of fame
2020-10-24 13:03:44,373 - root - INFO - Completed generation 74; 4e+01s elapsed, 4e+01s avg, 2.9e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 13:03:44,475 - root - INFO - #74 MAX:accuracy.mean: 0.34
2020-10-24 13:03:44,658 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:04:22,662 - root - DEBUG - Updating hall of fame
2020-10-24 13:04:24,750 - root - INFO - Completed generation 75; 4e+01s elapsed, 4e+01s avg, 3e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 13:04:24,856 - root - INFO - #75 MAX:accuracy.mean: 0.3
2020-10-24 13:04:25,019 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:05:02,817 - root - DEBUG - Updating hall of fame
2020-10-24 13:05:05,097 - root - INFO - Completed generation 76; 4e+01s elapsed, 4e+01s avg, 3e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 13:05:05,199 - root - INFO - #76 MAX:accuracy.mean: 0.3
2020-10-24 13:05:05,382 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:05:43,418 - root - DEBUG - Updating hall of fame
2020-10-24 13:05:45,971 - root - INFO - Completed generation 77; 4.1e+01s elapsed, 4e+01s avg, 3.1e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 13:05:46,091 - root - INFO - #77 MAX:accuracy.mean: 0.3
2020-10-24 13:05:46,257 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:06:25,055 - root - DEBUG - Updating hall of fame
2020-10-24 13:06:27,342 - root - INFO - Completed generation 78; 4.1e+01s elapsed, 4e+01s avg, 3.1e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 13:06:27,509 - root - INFO - #78 MAX:accuracy.mean: 0.3
2020-10-24 13:06:27,681 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:07:07,772 - root - DEBUG - Updating hall of fame
2020-10-24 13:07:09,348 - root - INFO - Completed generation 79; 4.2e+01s elapsed, 4e+01s avg, 3.1e+03s total. Expected time remaining: 3.2e+03s
2020-10-24 13:07:09,451 - root - INFO - #79 MAX:accuracy.mean: 0.34
2020-10-24 13:07:09,620 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:07:51,338 - root - DEBUG - Updating hall of fame
2020-10-24 13:07:53,476 - root - INFO - Completed generation 80; 4.4e+01s elapsed, 4e+01s avg, 3.2e+03s total. Expected time remaining: 3.2e+03s
2020-10-24 13:07:53,588 - root - INFO - #80 MAX:accuracy.mean: 0.3
2020-10-24 13:07:53,811 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:08:36,518 - root - DEBUG - Updating hall of fame
2020-10-24 13:08:37,801 - root - INFO - Completed generation 81; 4.4e+01s elapsed, 4e+01s avg, 3.2e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 13:08:37,904 - root - INFO - #81 MAX:accuracy.mean: 0.32
2020-10-24 13:08:38,081 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:09:16,968 - root - DEBUG - Updating hall of fame
2020-10-24 13:09:19,081 - root - INFO - Completed generation 82; 4.1e+01s elapsed, 4e+01s avg, 3.3e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 13:09:19,187 - root - INFO - #82 MAX:accuracy.mean: 0.31
2020-10-24 13:09:19,352 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:09:59,972 - root - DEBUG - Updating hall of fame
2020-10-24 13:10:01,915 - root - INFO - Completed generation 83; 4.3e+01s elapsed, 4e+01s avg, 3.3e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 13:10:02,038 - root - INFO - #83 MAX:accuracy.mean: 0.32
2020-10-24 13:10:02,227 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:10:42,912 - root - DEBUG - Updating hall of fame
2020-10-24 13:10:45,538 - root - INFO - Completed generation 84; 4.3e+01s elapsed, 4e+01s avg, 3.3e+03s total. Expected time remaining: 3e+03s
2020-10-24 13:10:45,649 - root - INFO - #84 MAX:accuracy.mean: 0.31
2020-10-24 13:10:45,831 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:11:26,585 - root - DEBUG - Updating hall of fame
2020-10-24 13:11:28,644 - root - INFO - Completed generation 85; 4.3e+01s elapsed, 4e+01s avg, 3.4e+03s total. Expected time remaining: 3e+03s
2020-10-24 13:11:28,747 - root - INFO - #85 MAX:accuracy.mean: 0.33
2020-10-24 13:11:28,911 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:12:09,957 - root - DEBUG - Updating hall of fame
2020-10-24 13:12:11,743 - root - INFO - Completed generation 86; 4.3e+01s elapsed, 4e+01s avg, 3.4e+03s total. Expected time remaining: 3e+03s
2020-10-24 13:12:11,851 - root - INFO - #86 MAX:accuracy.mean: 0.33
2020-10-24 13:12:12,017 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:12:54,218 - root - DEBUG - Updating hall of fame
2020-10-24 13:12:55,865 - root - INFO - Completed generation 87; 4.4e+01s elapsed, 4e+01s avg, 3.5e+03s total. Expected time remaining: 2.9e+03s
2020-10-24 13:12:55,967 - root - INFO - #87 MAX:accuracy.mean: 0.32
2020-10-24 13:12:56,157 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:13:38,835 - root - DEBUG - Updating hall of fame
2020-10-24 13:13:41,652 - root - INFO - Completed generation 88; 4.6e+01s elapsed, 4e+01s avg, 3.5e+03s total. Expected time remaining: 2.9e+03s
2020-10-24 13:13:41,752 - root - INFO - #88 MAX:accuracy.mean: 0.31
2020-10-24 13:13:41,916 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:14:22,251 - root - DEBUG - Updating hall of fame
2020-10-24 13:14:24,156 - root - INFO - Completed generation 89; 4.2e+01s elapsed, 4e+01s avg, 3.6e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 13:14:24,271 - root - INFO - #89 MAX:accuracy.mean: 0.31
2020-10-24 13:14:24,435 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:15:05,782 - root - DEBUG - Updating hall of fame
2020-10-24 13:15:08,052 - root - INFO - Completed generation 90; 4.4e+01s elapsed, 4e+01s avg, 3.6e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 13:15:08,159 - root - INFO - #90 MAX:accuracy.mean: 0.32
2020-10-24 13:15:08,388 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:15:48,894 - root - DEBUG - Updating hall of fame
2020-10-24 13:15:51,112 - root - INFO - Completed generation 91; 4.3e+01s elapsed, 4e+01s avg, 3.7e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 13:15:51,219 - root - INFO - #91 MAX:accuracy.mean: 0.33
2020-10-24 13:15:51,382 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:16:31,974 - root - DEBUG - Updating hall of fame
2020-10-24 13:16:33,589 - root - INFO - Completed generation 92; 4.2e+01s elapsed, 4e+01s avg, 3.7e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 13:16:33,688 - root - INFO - #92 MAX:accuracy.mean: 0.32
2020-10-24 13:16:33,860 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:17:15,022 - root - DEBUG - Updating hall of fame
2020-10-24 13:17:16,166 - root - INFO - Completed generation 93; 4.2e+01s elapsed, 4e+01s avg, 3.7e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 13:17:16,261 - root - INFO - #93 MAX:accuracy.mean: 0.32
2020-10-24 13:17:16,439 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:18:03,922 - root - DEBUG - Updating hall of fame
2020-10-24 13:18:05,582 - root - INFO - Completed generation 94; 4.9e+01s elapsed, 4e+01s avg, 3.8e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 13:18:05,694 - root - INFO - #94 MAX:accuracy.mean: 0.33
2020-10-24 13:18:05,882 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:18:48,629 - root - DEBUG - Updating hall of fame
2020-10-24 13:18:49,987 - root - INFO - Completed generation 95; 4.4e+01s elapsed, 4e+01s avg, 3.8e+03s total. Expected time remaining: 2.6e+03s
2020-10-24 13:18:50,128 - root - INFO - #95 MAX:accuracy.mean: 0.34
2020-10-24 13:18:50,338 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:19:32,669 - root - DEBUG - Updating hall of fame
2020-10-24 13:19:34,423 - root - INFO - Completed generation 96; 4.4e+01s elapsed, 4e+01s avg, 3.9e+03s total. Expected time remaining: 2.6e+03s
2020-10-24 13:19:34,528 - root - INFO - #96 MAX:accuracy.mean: 0.35
2020-10-24 13:19:34,693 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:20:15,716 - root - DEBUG - Updating hall of fame
2020-10-24 13:20:17,725 - root - INFO - Completed generation 97; 4.3e+01s elapsed, 4e+01s avg, 3.9e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 13:20:17,850 - root - INFO - #97 MAX:accuracy.mean: 0.33
2020-10-24 13:20:18,042 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:20:58,218 - root - DEBUG - Updating hall of fame
2020-10-24 13:20:59,753 - root - INFO - Completed generation 98; 4.2e+01s elapsed, 4e+01s avg, 4e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 13:20:59,856 - root - INFO - #98 MAX:accuracy.mean: 0.33
2020-10-24 13:21:00,054 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:21:39,878 - root - DEBUG - Updating hall of fame
2020-10-24 13:21:41,332 - root - INFO - Completed generation 99; 4.1e+01s elapsed, 4e+01s avg, 4e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 13:21:41,445 - root - INFO - #99 MAX:accuracy.mean: 0.34
2020-10-24 13:21:41,627 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:22:22,233 - root - DEBUG - Updating hall of fame
2020-10-24 13:22:23,566 - root - INFO - Completed generation 100; 4.2e+01s elapsed, 4e+01s avg, 4e+03s total. Expected time remaining: 2.4e+03s
2020-10-24 13:22:23,669 - root - INFO - #100 MAX:accuracy.mean: 0.37
2020-10-24 13:22:23,884 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:23:05,573 - root - DEBUG - Updating hall of fame
2020-10-24 13:23:07,166 - root - INFO - Completed generation 101; 4.3e+01s elapsed, 4e+01s avg, 4.1e+03s total. Expected time remaining: 2.4e+03s
2020-10-24 13:23:07,277 - root - INFO - #101 MAX:accuracy.mean: 0.37
2020-10-24 13:23:07,443 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:23:46,925 - root - DEBUG - Updating hall of fame
2020-10-24 13:23:49,122 - root - INFO - Completed generation 102; 4.2e+01s elapsed, 4e+01s avg, 4.1e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 13:23:49,226 - root - INFO - #102 MAX:accuracy.mean: 0.37
2020-10-24 13:23:49,431 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:24:29,861 - root - DEBUG - Updating hall of fame
2020-10-24 13:24:31,974 - root - INFO - Completed generation 103; 4.3e+01s elapsed, 4.1e+01s avg, 4.2e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 13:24:32,083 - root - INFO - #103 MAX:accuracy.mean: 0.37
2020-10-24 13:24:32,247 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:25:11,678 - root - DEBUG - Updating hall of fame
2020-10-24 13:25:12,563 - root - INFO - Completed generation 104; 4e+01s elapsed, 4.1e+01s avg, 4.2e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 13:25:12,678 - root - INFO - #104 MAX:accuracy.mean: 0.36
2020-10-24 13:25:12,843 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:25:52,952 - root - DEBUG - Updating hall of fame
2020-10-24 13:25:54,806 - root - INFO - Completed generation 105; 4.2e+01s elapsed, 4.1e+01s avg, 4.3e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 13:25:54,910 - root - INFO - #105 MAX:accuracy.mean: 0.37
2020-10-24 13:25:55,109 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:26:34,578 - root - DEBUG - Updating hall of fame
2020-10-24 13:26:36,282 - root - INFO - Completed generation 106; 4.1e+01s elapsed, 4.1e+01s avg, 4.3e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 13:26:36,390 - root - INFO - #106 MAX:accuracy.mean: 0.36
2020-10-24 13:26:36,559 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:27:16,782 - root - DEBUG - Updating hall of fame
2020-10-24 13:27:18,108 - root - INFO - Completed generation 107; 4.2e+01s elapsed, 4.1e+01s avg, 4.3e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 13:27:18,211 - root - INFO - #107 MAX:accuracy.mean: 0.37
2020-10-24 13:27:18,375 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:27:58,463 - root - DEBUG - Updating hall of fame
2020-10-24 13:27:59,754 - root - INFO - Completed generation 108; 4.2e+01s elapsed, 4.1e+01s avg, 4.4e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 13:27:59,857 - root - INFO - #108 MAX:accuracy.mean: 0.37
2020-10-24 13:28:00,028 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:28:40,028 - root - DEBUG - Updating hall of fame
2020-10-24 13:28:41,424 - root - INFO - Completed generation 109; 4.2e+01s elapsed, 4.1e+01s avg, 4.4e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 13:28:41,528 - root - INFO - #109 MAX:accuracy.mean: 0.38
2020-10-24 13:28:41,700 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:29:24,242 - root - DEBUG - Updating hall of fame
2020-10-24 13:29:25,931 - root - INFO - Completed generation 110; 4.4e+01s elapsed, 4.1e+01s avg, 4.5e+03s total. Expected time remaining: 2e+03s
2020-10-24 13:29:26,049 - root - INFO - #110 MAX:accuracy.mean: 0.37
2020-10-24 13:29:26,265 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:30:06,801 - root - DEBUG - Updating hall of fame
2020-10-24 13:30:07,994 - root - INFO - Completed generation 111; 4.2e+01s elapsed, 4.1e+01s avg, 4.5e+03s total. Expected time remaining: 2e+03s
2020-10-24 13:30:08,096 - root - INFO - #111 MAX:accuracy.mean: 0.36
2020-10-24 13:30:08,247 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:30:51,713 - root - DEBUG - Updating hall of fame
2020-10-24 13:30:53,535 - root - INFO - Completed generation 112; 4.5e+01s elapsed, 4.1e+01s avg, 4.6e+03s total. Expected time remaining: 2e+03s
2020-10-24 13:30:53,730 - root - INFO - #112 MAX:accuracy.mean: 0.36
2020-10-24 13:30:53,901 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:31:41,175 - root - DEBUG - Updating hall of fame
2020-10-24 13:31:43,991 - root - INFO - Completed generation 113; 5e+01s elapsed, 4.1e+01s avg, 4.6e+03s total. Expected time remaining: 1.9e+03s
2020-10-24 13:31:44,109 - root - INFO - #113 MAX:accuracy.mean: 0.36
2020-10-24 13:31:44,277 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:32:27,325 - root - DEBUG - Updating hall of fame
2020-10-24 13:32:29,219 - root - INFO - Completed generation 114; 4.5e+01s elapsed, 4.1e+01s avg, 4.6e+03s total. Expected time remaining: 1.9e+03s
2020-10-24 13:32:29,343 - root - INFO - #114 MAX:accuracy.mean: 0.38
2020-10-24 13:32:29,529 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:33:14,195 - root - DEBUG - Updating hall of fame
2020-10-24 13:33:14,975 - root - INFO - Completed generation 115; 4.6e+01s elapsed, 4.1e+01s avg, 4.7e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 13:33:15,080 - root - INFO - #115 MAX:accuracy.mean: 0.37
2020-10-24 13:33:15,235 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:34:04,348 - root - DEBUG - Updating hall of fame
2020-10-24 13:34:05,852 - root - INFO - Completed generation 116; 5.1e+01s elapsed, 4.1e+01s avg, 4.7e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 13:34:05,978 - root - INFO - #116 MAX:accuracy.mean: 0.37
2020-10-24 13:34:06,153 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:34:48,796 - root - DEBUG - Updating hall of fame
2020-10-24 13:34:50,714 - root - INFO - Completed generation 117; 4.5e+01s elapsed, 4.1e+01s avg, 4.8e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 13:34:50,895 - root - INFO - #117 MAX:accuracy.mean: 0.37
2020-10-24 13:34:51,197 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:35:36,851 - root - DEBUG - Updating hall of fame
2020-10-24 13:35:38,141 - root - INFO - Completed generation 118; 4.7e+01s elapsed, 4.1e+01s avg, 4.8e+03s total. Expected time remaining: 1.7e+03s
2020-10-24 13:35:38,261 - root - INFO - #118 MAX:accuracy.mean: 0.38
2020-10-24 13:35:38,645 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:36:27,758 - root - DEBUG - Updating hall of fame
2020-10-24 13:36:28,883 - root - INFO - Completed generation 119; 5.1e+01s elapsed, 4.1e+01s avg, 4.9e+03s total. Expected time remaining: 1.7e+03s
2020-10-24 13:36:29,026 - root - INFO - #119 MAX:accuracy.mean: 0.38
2020-10-24 13:36:29,243 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:37:08,094 - root - DEBUG - Updating hall of fame
2020-10-24 13:37:09,286 - root - INFO - Completed generation 120; 4e+01s elapsed, 4.1e+01s avg, 4.9e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 13:37:09,400 - root - INFO - #120 MAX:accuracy.mean: 0.38
2020-10-24 13:37:09,630 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:37:52,387 - root - DEBUG - Updating hall of fame
2020-10-24 13:37:53,321 - root - INFO - Completed generation 121; 4.4e+01s elapsed, 4.1e+01s avg, 5e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 13:37:53,412 - root - INFO - #121 MAX:accuracy.mean: 0.37
2020-10-24 13:37:53,601 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:38:35,628 - root - DEBUG - Updating hall of fame
2020-10-24 13:38:37,745 - root - INFO - Completed generation 122; 4.4e+01s elapsed, 4.1e+01s avg, 5e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 13:38:37,955 - root - INFO - #122 MAX:accuracy.mean: 0.38
2020-10-24 13:38:38,270 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:39:21,030 - root - DEBUG - Updating hall of fame
2020-10-24 13:39:22,176 - root - INFO - Completed generation 123; 4.4e+01s elapsed, 4.1e+01s avg, 5.1e+03s total. Expected time remaining: 1.5e+03s
2020-10-24 13:39:22,272 - root - INFO - #123 MAX:accuracy.mean: 0.37
2020-10-24 13:39:22,429 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:39:57,127 - root - DEBUG - Updating hall of fame
2020-10-24 13:39:58,237 - root - INFO - Completed generation 124; 3.6e+01s elapsed, 4.1e+01s avg, 5.1e+03s total. Expected time remaining: 1.5e+03s
2020-10-24 13:39:58,344 - root - INFO - #124 MAX:accuracy.mean: 0.38
2020-10-24 13:39:58,491 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:40:40,391 - root - DEBUG - Updating hall of fame
2020-10-24 13:40:41,738 - root - INFO - Completed generation 125; 4.3e+01s elapsed, 4.1e+01s avg, 5.1e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 13:40:41,832 - root - INFO - #125 MAX:accuracy.mean: 0.38
2020-10-24 13:40:41,976 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:41:28,916 - root - DEBUG - Updating hall of fame
2020-10-24 13:41:31,125 - root - INFO - Completed generation 126; 4.9e+01s elapsed, 4.1e+01s avg, 5.2e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 13:41:31,273 - root - INFO - #126 MAX:accuracy.mean: 0.38
2020-10-24 13:41:31,523 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:42:17,491 - root - DEBUG - Updating hall of fame
2020-10-24 13:42:19,430 - root - INFO - Completed generation 127; 4.8e+01s elapsed, 4.1e+01s avg, 5.2e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 13:42:19,532 - root - INFO - #127 MAX:accuracy.mean: 0.38
2020-10-24 13:42:19,701 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:43:02,627 - root - DEBUG - Updating hall of fame
2020-10-24 13:43:04,401 - root - INFO - Completed generation 128; 4.5e+01s elapsed, 4.1e+01s avg, 5.3e+03s total. Expected time remaining: 1.3e+03s
2020-10-24 13:43:04,498 - root - INFO - #128 MAX:accuracy.mean: 0.38
2020-10-24 13:43:04,654 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:43:44,930 - root - DEBUG - Updating hall of fame
2020-10-24 13:43:45,801 - root - INFO - Completed generation 129; 4.1e+01s elapsed, 4.1e+01s avg, 5.3e+03s total. Expected time remaining: 1.3e+03s
2020-10-24 13:43:45,909 - root - INFO - #129 MAX:accuracy.mean: 0.38
2020-10-24 13:43:46,100 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:44:31,607 - root - DEBUG - Updating hall of fame
2020-10-24 13:44:33,267 - root - INFO - Completed generation 130; 4.7e+01s elapsed, 4.1e+01s avg, 5.4e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 13:44:33,357 - root - INFO - #130 MAX:accuracy.mean: 0.37
2020-10-24 13:44:33,564 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:45:22,857 - root - DEBUG - Updating hall of fame
2020-10-24 13:45:23,777 - root - INFO - Completed generation 131; 5e+01s elapsed, 4.1e+01s avg, 5.4e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 13:45:23,866 - root - INFO - #131 MAX:accuracy.mean: 0.39
2020-10-24 13:45:24,012 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:46:03,586 - root - DEBUG - Updating hall of fame
2020-10-24 13:46:04,700 - root - INFO - Completed generation 132; 4.1e+01s elapsed, 4.1e+01s avg, 5.5e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 13:46:04,796 - root - INFO - #132 MAX:accuracy.mean: 0.4
2020-10-24 13:46:04,957 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:46:49,243 - root - DEBUG - Updating hall of fame
2020-10-24 13:46:52,040 - root - INFO - Completed generation 133; 4.7e+01s elapsed, 4.1e+01s avg, 5.5e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 13:46:52,185 - root - INFO - #133 MAX:accuracy.mean: 0.4
2020-10-24 13:46:52,348 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:47:33,025 - root - DEBUG - Updating hall of fame
2020-10-24 13:47:35,249 - root - INFO - Completed generation 134; 4.3e+01s elapsed, 4.1e+01s avg, 5.6e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 13:47:35,341 - root - INFO - #134 MAX:accuracy.mean: 0.4
2020-10-24 13:47:35,564 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:48:19,781 - root - DEBUG - Updating hall of fame
2020-10-24 13:48:21,288 - root - INFO - Completed generation 135; 4.6e+01s elapsed, 4.1e+01s avg, 5.6e+03s total. Expected time remaining: 1e+03s
2020-10-24 13:48:21,377 - root - INFO - #135 MAX:accuracy.mean: 0.4
2020-10-24 13:48:21,520 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:49:03,449 - root - DEBUG - Updating hall of fame
2020-10-24 13:49:05,228 - root - INFO - Completed generation 136; 4.4e+01s elapsed, 4.1e+01s avg, 5.6e+03s total. Expected time remaining: 1e+03s
2020-10-24 13:49:05,396 - root - INFO - #136 MAX:accuracy.mean: 0.4
2020-10-24 13:49:05,699 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:49:51,134 - root - DEBUG - Updating hall of fame
2020-10-24 13:49:52,953 - root - INFO - Completed generation 137; 4.8e+01s elapsed, 4.2e+01s avg, 5.7e+03s total. Expected time remaining: 9.6e+02s
2020-10-24 13:49:53,048 - root - INFO - #137 MAX:accuracy.mean: 0.43
2020-10-24 13:49:53,193 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:50:40,125 - root - DEBUG - Updating hall of fame
2020-10-24 13:50:41,615 - root - INFO - Completed generation 138; 4.9e+01s elapsed, 4.2e+01s avg, 5.7e+03s total. Expected time remaining: 9.1e+02s
2020-10-24 13:50:41,730 - root - INFO - #138 MAX:accuracy.mean: 0.41
2020-10-24 13:50:41,895 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:51:30,583 - root - DEBUG - Updating hall of fame
2020-10-24 13:51:32,600 - root - INFO - Completed generation 139; 5.1e+01s elapsed, 4.2e+01s avg, 5.8e+03s total. Expected time remaining: 8.7e+02s
2020-10-24 13:51:32,700 - root - INFO - #139 MAX:accuracy.mean: 0.41
2020-10-24 13:51:32,844 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:52:22,340 - root - DEBUG - Updating hall of fame
2020-10-24 13:52:25,414 - root - INFO - Completed generation 140; 5.3e+01s elapsed, 4.2e+01s avg, 5.8e+03s total. Expected time remaining: 8.3e+02s
2020-10-24 13:52:25,581 - root - INFO - #140 MAX:accuracy.mean: 0.41
2020-10-24 13:52:25,907 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:53:23,363 - root - DEBUG - Updating hall of fame
2020-10-24 13:53:24,867 - root - INFO - Completed generation 141; 5.9e+01s elapsed, 4.2e+01s avg, 5.9e+03s total. Expected time remaining: 8e+02s
2020-10-24 13:53:25,061 - root - INFO - #141 MAX:accuracy.mean: 0.4
2020-10-24 13:53:25,303 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:54:11,229 - root - DEBUG - Updating hall of fame
2020-10-24 13:54:13,115 - root - INFO - Completed generation 142; 4.8e+01s elapsed, 4.2e+01s avg, 5.9e+03s total. Expected time remaining: 7.5e+02s
2020-10-24 13:54:13,263 - root - INFO - #142 MAX:accuracy.mean: 0.41
2020-10-24 13:54:13,437 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:54:57,430 - root - DEBUG - Updating hall of fame
2020-10-24 13:54:58,710 - root - INFO - Completed generation 143; 4.5e+01s elapsed, 4.2e+01s avg, 6e+03s total. Expected time remaining: 7.1e+02s
2020-10-24 13:54:58,803 - root - INFO - #143 MAX:accuracy.mean: 0.4
2020-10-24 13:54:58,953 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:55:47,462 - root - DEBUG - Updating hall of fame
2020-10-24 13:55:48,528 - root - INFO - Completed generation 144; 5e+01s elapsed, 4.2e+01s avg, 6e+03s total. Expected time remaining: 6.7e+02s
2020-10-24 13:55:48,626 - root - INFO - #144 MAX:accuracy.mean: 0.41
2020-10-24 13:55:48,782 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:56:29,082 - root - DEBUG - Updating hall of fame
2020-10-24 13:56:29,994 - root - INFO - Completed generation 145; 4.1e+01s elapsed, 4.2e+01s avg, 6.1e+03s total. Expected time remaining: 6.3e+02s
2020-10-24 13:56:30,095 - root - INFO - #145 MAX:accuracy.mean: 0.4
2020-10-24 13:56:30,249 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:57:13,967 - root - DEBUG - Updating hall of fame
2020-10-24 13:57:14,981 - root - INFO - Completed generation 146; 4.5e+01s elapsed, 4.2e+01s avg, 6.1e+03s total. Expected time remaining: 5.9e+02s
2020-10-24 13:57:15,080 - root - INFO - #146 MAX:accuracy.mean: 0.41
2020-10-24 13:57:15,325 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:57:59,966 - root - DEBUG - Updating hall of fame
2020-10-24 13:58:01,388 - root - INFO - Completed generation 147; 4.6e+01s elapsed, 4.2e+01s avg, 6.2e+03s total. Expected time remaining: 5.5e+02s
2020-10-24 13:58:01,480 - root - INFO - #147 MAX:accuracy.mean: 0.41
2020-10-24 13:58:01,641 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:58:39,616 - root - DEBUG - Updating hall of fame
2020-10-24 13:58:40,875 - root - INFO - Completed generation 148; 3.9e+01s elapsed, 4.2e+01s avg, 6.2e+03s total. Expected time remaining: 5e+02s
2020-10-24 13:58:40,967 - root - INFO - #148 MAX:accuracy.mean: 0.41
2020-10-24 13:58:41,129 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:59:20,031 - root - DEBUG - Updating hall of fame
2020-10-24 13:59:20,940 - root - INFO - Completed generation 149; 4e+01s elapsed, 4.2e+01s avg, 6.3e+03s total. Expected time remaining: 4.6e+02s
2020-10-24 13:59:21,045 - root - INFO - #149 MAX:accuracy.mean: 0.41
2020-10-24 13:59:21,213 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 13:59:59,977 - root - DEBUG - Updating hall of fame
2020-10-24 14:00:00,496 - root - INFO - Completed generation 150; 3.9e+01s elapsed, 4.2e+01s avg, 6.3e+03s total. Expected time remaining: 4.2e+02s
2020-10-24 14:00:00,590 - root - INFO - #150 MAX:accuracy.mean: 0.41
2020-10-24 14:00:00,792 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:00:39,168 - root - DEBUG - Updating hall of fame
2020-10-24 14:00:40,385 - root - INFO - Completed generation 151; 4e+01s elapsed, 4.2e+01s avg, 6.3e+03s total. Expected time remaining: 3.8e+02s
2020-10-24 14:00:40,480 - root - INFO - #151 MAX:accuracy.mean: 0.41
2020-10-24 14:00:40,630 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:01:18,379 - root - DEBUG - Updating hall of fame
2020-10-24 14:01:20,027 - root - INFO - Completed generation 152; 4e+01s elapsed, 4.2e+01s avg, 6.4e+03s total. Expected time remaining: 3.4e+02s
2020-10-24 14:01:20,126 - root - INFO - #152 MAX:accuracy.mean: 0.41
2020-10-24 14:01:20,278 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:01:58,752 - root - DEBUG - Updating hall of fame
2020-10-24 14:01:59,883 - root - INFO - Completed generation 153; 4e+01s elapsed, 4.2e+01s avg, 6.4e+03s total. Expected time remaining: 2.9e+02s
2020-10-24 14:01:59,979 - root - INFO - #153 MAX:accuracy.mean: 0.41
2020-10-24 14:02:00,147 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:02:39,312 - root - DEBUG - Updating hall of fame
2020-10-24 14:02:40,487 - root - INFO - Completed generation 154; 4.1e+01s elapsed, 4.2e+01s avg, 6.5e+03s total. Expected time remaining: 2.5e+02s
2020-10-24 14:02:40,580 - root - INFO - #154 MAX:accuracy.mean: 0.41
2020-10-24 14:02:40,729 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:03:19,470 - root - DEBUG - Updating hall of fame
2020-10-24 14:03:20,662 - root - INFO - Completed generation 155; 4e+01s elapsed, 4.2e+01s avg, 6.5e+03s total. Expected time remaining: 2.1e+02s
2020-10-24 14:03:20,753 - root - INFO - #155 MAX:accuracy.mean: 0.41
2020-10-24 14:03:20,915 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:03:57,867 - root - DEBUG - Updating hall of fame
2020-10-24 14:03:59,248 - root - INFO - Completed generation 156; 3.8e+01s elapsed, 4.2e+01s avg, 6.5e+03s total. Expected time remaining: 1.7e+02s
2020-10-24 14:03:59,341 - root - INFO - #156 MAX:accuracy.mean: 0.42
2020-10-24 14:03:59,497 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:04:36,734 - root - DEBUG - Updating hall of fame
2020-10-24 14:04:38,617 - root - INFO - Completed generation 157; 3.9e+01s elapsed, 4.2e+01s avg, 6.6e+03s total. Expected time remaining: 1.3e+02s
2020-10-24 14:04:38,710 - root - INFO - #157 MAX:accuracy.mean: 0.41
2020-10-24 14:04:38,857 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:05:15,706 - root - DEBUG - Updating hall of fame
2020-10-24 14:05:16,228 - root - INFO - Completed generation 158; 3.8e+01s elapsed, 4.2e+01s avg, 6.6e+03s total. Expected time remaining: 8.4e+01s
2020-10-24 14:05:16,320 - root - INFO - #158 MAX:accuracy.mean: 0.42
2020-10-24 14:05:16,473 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:05:57,374 - root - DEBUG - Updating hall of fame
2020-10-24 14:05:58,709 - root - INFO - Completed generation 159; 4.2e+01s elapsed, 4.2e+01s avg, 6.7e+03s total. Expected time remaining: 4.2e+01s
2020-10-24 14:05:58,798 - root - INFO - #159 MAX:accuracy.mean: 0.42
2020-10-24 14:05:58,941 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 14:06:48,845 - root - DEBUG - Updating hall of fame
2020-10-24 14:06:50,490 - root - INFO - Completed generation 160; 5.2e+01s elapsed, 4.2e+01s avg, 6.7e+03s total. Expected time remaining: 0.0s
2020-10-24 14:06:50,645 - root - INFO - #160 MAX:accuracy.mean: 0.42
2020-10-24 14:06:53,632 - root - DEBUG - Loaded 10000 samples.
2020-10-24 14:06:53,663 - root - INFO - Evaluating indivs in hall of fame.
2020-10-24 14:09:18,342 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-24 14:09:18,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-24 14:09:18,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-24 14:09:18,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium-Italic.ttf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (lobster.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bold Oblique' (UniversalisADFStd-BoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Solid-900.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBoldItalic.otf) italic normal semibold normal>) = 11.24
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Gazis' (GFSGazis.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Brands' (Font Awesome 5 Brands-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal light condensed>) = 11.44
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenic.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-24 14:09:18,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS BodoniClassic' (GFSBodoniClassic.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal book normal>) = 11.05
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-LightItalic.otf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RBI.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Display O' (LinLibertine_DR.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZ.otf) normal normal semibold normal>) = 10.24
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard Sans' (BagnardSans.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,368 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,369 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal light condensed>) = 10.44
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,370 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZI.otf) italic normal semibold normal>) = 11.24
2020-10-24 14:09:18,371 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 14:09:18,372 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,373 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-boldslanted.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,373 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,373 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,373 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,373 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-24 14:09:18,373 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,373 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,373 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,374 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,375 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand_Dash.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,376 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-slanted.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,377 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,378 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal book normal>) = 11.05
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,379 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Asana Math' (Asana-Math.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,380 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,381 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidot.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 14:09:18,382 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,383 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareB.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,384 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,385 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,386 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,387 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Medium.otf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCondObl.otf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,388 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,389 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot Classic' (GFSDidotClassic.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,390 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-24 14:09:18,391 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,392 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,392 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,392 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,392 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,392 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,392 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,392 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,392 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,393 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,393 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,393 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard' (Bagnard.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,393 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,393 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,393 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,393 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,393 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,394 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,395 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,396 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,397 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Light.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,398 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2020-10-24 14:09:18,399 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,400 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSArtemisiaBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundR.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,401 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-MediumItalic.otf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,402 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,403 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,404 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,405 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Solomos' (GFSSolomos.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,406 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,407 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,408 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-CondOblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Olga' (GFSOlga.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,409 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oblique' (UniversalisADFStd-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,410 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundB.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,411 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,412 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,413 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,414 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 700 normal>) = 11.335
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphorigenic' (euphorigenic.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,415 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal regular condensed>) = 10.25
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,416 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-LightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,417 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Complutum' (GFSPolyglot.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,418 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,419 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran' (amiri-quran.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,420 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum Keyboard O' (LinBiolinum_K.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisia.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,421 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Initials O' (LinLibertine_I.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Mono O' (LinLibertine_M.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,422 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,423 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,424 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,425 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
2020-10-24 14:09:18,426 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran Colored' (amiri-quran-colored.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,427 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBold.otf) normal normal semibold normal>) = 10.24
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,428 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Theokritos' (GFSTheokritos.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal demi condensed>) = 11.44
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,429 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareR.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,430 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,431 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,432 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,433 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/data/Lab/rewann/venv/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-24 14:09:18,499 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-10-24 14:09:18,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-24 14:09:18,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-24 14:09:18,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-24 14:09:18,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-24 14:09:18,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium-Italic.ttf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (lobster.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bold Oblique' (UniversalisADFStd-BoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Solid-900.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 14:09:18,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBoldItalic.otf) italic normal semibold normal>) = 11.24
2020-10-24 14:09:18,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
2020-10-24 14:09:18,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Gazis' (GFSGazis.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Brands' (Font Awesome 5 Brands-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal light condensed>) = 11.44
2020-10-24 14:09:18,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenic.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-24 14:09:18,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS BodoniClassic' (GFSBodoniClassic.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal book normal>) = 11.05
2020-10-24 14:09:18,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-LightItalic.otf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 14:09:18,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RBI.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Display O' (LinLibertine_DR.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 14:09:18,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
2020-10-24 14:09:18,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2020-10-24 14:09:18,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 14:09:18,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZ.otf) normal normal semibold normal>) = 10.24
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard Sans' (BagnardSans.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal light condensed>) = 10.44
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZI.otf) italic normal semibold normal>) = 11.24
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-boldslanted.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand_Dash.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-slanted.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal book normal>) = 11.05
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Asana Math' (Asana-Math.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,541 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidot.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,542 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareB.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,543 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,544 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,545 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,546 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Medium.otf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCondObl.otf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,547 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,548 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,549 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,549 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,549 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,549 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,549 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,549 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot Classic' (GFSDidotClassic.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,549 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,550 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,550 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,550 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,550 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,550 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,550 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,550 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 14:09:18,550 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,551 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-24 14:09:18,551 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,551 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,551 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,551 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,551 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,551 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,552 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,552 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,552 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,552 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,552 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,552 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard' (Bagnard.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,553 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,553 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,553 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,553 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,553 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,553 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,554 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,554 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,554 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,554 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,554 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,554 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,555 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,555 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,555 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,555 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,555 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,555 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,556 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,556 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,556 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,556 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,556 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,556 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,557 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,557 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2020-10-24 14:09:18,557 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,557 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,557 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,557 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,558 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,558 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,558 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,558 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,558 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,558 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,559 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,559 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,559 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,559 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,559 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,559 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,560 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,560 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,560 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,560 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,560 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,560 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,561 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,561 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,561 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,561 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Light.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,561 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,561 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,562 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,562 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,562 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 14:09:18,562 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,562 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,563 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,563 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,563 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,563 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,563 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,563 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2020-10-24 14:09:18,564 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,564 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,564 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,564 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,564 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,564 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,565 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,565 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,565 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,565 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,566 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,566 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSArtemisiaBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,566 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,566 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,566 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,567 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,567 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,567 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,567 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,567 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,568 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundR.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,568 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-MediumItalic.otf) italic normal medium normal>) = 11.145
2020-10-24 14:09:18,568 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,568 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,568 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,568 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,569 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,569 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,569 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,569 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,569 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,569 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,570 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,570 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,570 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,570 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,570 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,571 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,571 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,571 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,571 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,571 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
2020-10-24 14:09:18,571 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,572 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,572 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,572 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,572 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,572 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,572 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,572 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,573 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,573 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,573 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,573 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,573 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,573 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,574 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,574 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,574 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,574 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,574 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,574 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,575 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,575 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,575 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,575 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,575 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,575 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Solomos' (GFSSolomos.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,576 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 14:09:18,576 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,576 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,576 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,576 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,576 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,577 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,577 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,577 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,577 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,577 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,577 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,578 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,578 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,578 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,578 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,578 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,579 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,579 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,579 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,580 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,580 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,580 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,580 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,580 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,580 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-CondOblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-24 14:09:18,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 14:09:18,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Olga' (GFSOlga.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oblique' (UniversalisADFStd-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundB.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 14:09:18,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 700 normal>) = 11.335
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphorigenic' (euphorigenic.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal regular condensed>) = 10.25
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-LightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Complutum' (GFSPolyglot.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaBold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran' (amiri-quran.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum Keyboard O' (LinBiolinum_K.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisia.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Initials O' (LinLibertine_I.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Mono O' (LinLibertine_M.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran Colored' (amiri-quran-colored.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBold.otf) normal normal semibold normal>) = 10.24
2020-10-24 14:09:18,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 14:09:18,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Theokritos' (GFSTheokritos.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal demi condensed>) = 11.44
2020-10-24 14:09:18,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 14:09:18,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareR.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 14:09:18,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,612 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 14:09:18,613 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/data/Lab/rewann/venv/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-24 14:09:20,568 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd110074070>
2020-10-24 14:09:20,569 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:20,569 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd110074070>
2020-10-24 14:09:20,569 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:24,057 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd0ff6d6bb0>
2020-10-24 14:09:24,057 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:24,057 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd0ff6d6bb0>
2020-10-24 14:09:24,058 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:27,769 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd0ff1023a0>
2020-10-24 14:09:27,770 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:27,770 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd0ff1023a0>
2020-10-24 14:09:27,770 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:31,235 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd1101a1a90>
2020-10-24 14:09:31,235 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:31,235 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd1101a1a90>
2020-10-24 14:09:31,236 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:34,707 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd1041e4d90>
2020-10-24 14:09:34,707 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:34,707 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd1041e4d90>
2020-10-24 14:09:34,707 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:38,065 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd0fedf7730>
2020-10-24 14:09:38,065 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:38,065 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd0fedf7730>
2020-10-24 14:09:38,065 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:41,542 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd0ff683760>
2020-10-24 14:09:41,542 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:41,542 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd0ff683760>
2020-10-24 14:09:41,542 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:45,075 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd1040bfa00>
2020-10-24 14:09:45,075 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:45,076 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd1040bfa00>
2020-10-24 14:09:45,076 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:48,601 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd11adea130>
2020-10-24 14:09:48,602 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:48,602 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd11adea130>
2020-10-24 14:09:48,602 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:52,247 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd1041d1340>
2020-10-24 14:09:52,248 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 14:09:52,248 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fd1041d1340>
2020-10-24 14:09:52,248 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 14:09:54,353 - root - INFO - Completed excution.
