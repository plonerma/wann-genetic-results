2020-10-24 18:27:22,956 - root - INFO - Package version 0.1.1
2020-10-24 18:27:22,957 - root - INFO - Saving data at /data/Lab/rewann/wann-results/data/mnist_extensive/time_measurement/data/2020-10-24_mnist784 linspace -2,2 1_000.
2020-10-24 18:27:22,957 - root - DEBUG - Loading training dataset
2020-10-24 18:27:26,865 - root - DEBUG - Loaded 60000 samples.
2020-10-24 18:27:26,866 - root - DEBUG - Running experiments with the following parameters:
debug = false
experiment_name = "mnist784 linspace -2,2 1"
experiment_path = "data/2020-10-24_mnist784 linspace -2,2 1_000"

[config]
num_workers = 1
debug = true
backend = "torch"

[postopt]
run_postopt = true
compile_report = true
num_weights = 100
num_samples = -1

[sampling]
seed = 1
post_init_seed = false
distribution = "linspace"
lower_bound = -2
upper_bound = 2
mean = 0
sigma = 0.5
num_weights_per_iteration = 6
num_samples_per_iteration = 2000
hof_evaluation_iterations = 4

[task]
name = "mnist784"
sample_order_seed = 0
test_portion = 0.2
sample_length = 10
num_categories = 8

[storage]
data_base_path = "data"
log_filename = "execution.log"
commit_elite_freq = -1
commit_metrics_freq = 10
include_prediction_records = false

[population]
num_generations = 160
size = 320
initial_enabled_edge_prob = 0.05
initial_genes = "full"
initial_func = "random"
hof_size = 10
enable_edge_signs = true
enabled_activation_funcs = "all"
initial_enabled_edge_probability = 0.05
enabled_activation_functions = "all"
initial_with_edges = true

[selection]
use_tournaments = true
elite_ratio = 0.1
culling_ratio = 0.2
tournament_size = 5
objectives = [ "-log_loss.min", "-log_loss.mean", "-n_hidden",]
recorded_metrics = [ "accuracy", "kappa", "log_loss",]
hof_metric = "accuracy.mean"

[mutation.new_edge]
probability = 0.2
strategy = "layer_agnostic"
propability = 0.2

[mutation.new_node]
probability = 0.25
propability = 0.3

[mutation.reenable_edge]
probability = 0.05
propability = 0.1

[mutation.change_activation]
probability = 0.5
propability = 0.4

[mutation.change_edge_sign]
probability = 0.2

[mutation.new_recurrent_edge]
probability = 0.2
strategy = "any"

[mutation.add_recurrent_edge]
probability = 0.3

2020-10-24 18:27:26,868 - root - INFO - Starting evolutionary algorithm
2020-10-24 18:27:27,112 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:28:10,390 - root - DEBUG - Updating hall of fame
2020-10-24 18:28:22,613 - root - INFO - Completed generation 1; 5.6e+01s elapsed, 5.6e+01s avg, 5.6e+01s total. Expected time remaining: 8.9e+03s
2020-10-24 18:28:22,721 - root - INFO - #1 MAX:accuracy.mean: 0.19
2020-10-24 18:28:22,896 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:29:05,380 - root - DEBUG - Updating hall of fame
2020-10-24 18:29:13,572 - root - INFO - Completed generation 2; 5.1e+01s elapsed, 5.3e+01s avg, 1.1e+02s total. Expected time remaining: 8.4e+03s
2020-10-24 18:29:13,679 - root - INFO - #2 MAX:accuracy.mean: 0.17
2020-10-24 18:29:13,851 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:29:57,519 - root - DEBUG - Updating hall of fame
2020-10-24 18:30:04,665 - root - INFO - Completed generation 3; 5.1e+01s elapsed, 5.3e+01s avg, 1.6e+02s total. Expected time remaining: 8.2e+03s
2020-10-24 18:30:04,773 - root - INFO - #3 MAX:accuracy.mean: 0.17
2020-10-24 18:30:04,938 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:30:48,991 - root - DEBUG - Updating hall of fame
2020-10-24 18:30:56,524 - root - INFO - Completed generation 4; 5.2e+01s elapsed, 5.2e+01s avg, 2.1e+02s total. Expected time remaining: 8.2e+03s
2020-10-24 18:30:56,628 - root - INFO - #4 MAX:accuracy.mean: 0.19
2020-10-24 18:30:56,793 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:31:41,222 - root - DEBUG - Updating hall of fame
2020-10-24 18:31:47,302 - root - INFO - Completed generation 5; 5.1e+01s elapsed, 5.2e+01s avg, 2.6e+02s total. Expected time remaining: 8.1e+03s
2020-10-24 18:31:47,407 - root - INFO - #5 MAX:accuracy.mean: 0.19
2020-10-24 18:31:47,569 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:32:31,065 - root - DEBUG - Updating hall of fame
2020-10-24 18:32:35,983 - root - INFO - Completed generation 6; 4.9e+01s elapsed, 5.1e+01s avg, 3.1e+02s total. Expected time remaining: 7.9e+03s
2020-10-24 18:32:36,090 - root - INFO - #6 MAX:accuracy.mean: 0.2
2020-10-24 18:32:36,252 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:33:23,353 - root - DEBUG - Updating hall of fame
2020-10-24 18:33:27,856 - root - INFO - Completed generation 7; 5.2e+01s elapsed, 5.1e+01s avg, 3.6e+02s total. Expected time remaining: 7.9e+03s
2020-10-24 18:33:27,960 - root - INFO - #7 MAX:accuracy.mean: 0.19
2020-10-24 18:33:28,128 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:34:14,829 - root - DEBUG - Updating hall of fame
2020-10-24 18:34:17,440 - root - INFO - Completed generation 8; 4.9e+01s elapsed, 5.1e+01s avg, 4.1e+02s total. Expected time remaining: 7.8e+03s
2020-10-24 18:34:17,543 - root - INFO - #8 MAX:accuracy.mean: 0.19
2020-10-24 18:34:17,707 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:35:04,778 - root - DEBUG - Updating hall of fame
2020-10-24 18:35:06,561 - root - INFO - Completed generation 9; 4.9e+01s elapsed, 5.1e+01s avg, 4.6e+02s total. Expected time remaining: 7.7e+03s
2020-10-24 18:35:06,667 - root - INFO - #9 MAX:accuracy.mean: 0.18
2020-10-24 18:35:06,830 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:35:52,926 - root - DEBUG - Updating hall of fame
2020-10-24 18:35:56,336 - root - INFO - Completed generation 10; 5e+01s elapsed, 5.1e+01s avg, 5.1e+02s total. Expected time remaining: 7.6e+03s
2020-10-24 18:35:56,441 - root - INFO - #10 MAX:accuracy.mean: 0.18
2020-10-24 18:35:56,628 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:36:42,473 - root - DEBUG - Updating hall of fame
2020-10-24 18:36:45,143 - root - INFO - Completed generation 11; 4.9e+01s elapsed, 5.1e+01s avg, 5.6e+02s total. Expected time remaining: 7.5e+03s
2020-10-24 18:36:45,247 - root - INFO - #11 MAX:accuracy.mean: 0.19
2020-10-24 18:36:45,408 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:37:31,775 - root - DEBUG - Updating hall of fame
2020-10-24 18:37:35,751 - root - INFO - Completed generation 12; 5.1e+01s elapsed, 5.1e+01s avg, 6.1e+02s total. Expected time remaining: 7.5e+03s
2020-10-24 18:37:35,857 - root - INFO - #12 MAX:accuracy.mean: 0.19
2020-10-24 18:37:36,023 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:38:22,384 - root - DEBUG - Updating hall of fame
2020-10-24 18:38:27,088 - root - INFO - Completed generation 13; 5.1e+01s elapsed, 5.1e+01s avg, 6.6e+02s total. Expected time remaining: 7.5e+03s
2020-10-24 18:38:27,189 - root - INFO - #13 MAX:accuracy.mean: 0.19
2020-10-24 18:38:27,352 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:39:13,180 - root - DEBUG - Updating hall of fame
2020-10-24 18:39:17,309 - root - INFO - Completed generation 14; 5e+01s elapsed, 5.1e+01s avg, 7.1e+02s total. Expected time remaining: 7.4e+03s
2020-10-24 18:39:17,414 - root - INFO - #14 MAX:accuracy.mean: 0.2
2020-10-24 18:39:17,575 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:40:04,598 - root - DEBUG - Updating hall of fame
2020-10-24 18:40:09,519 - root - INFO - Completed generation 15; 5.2e+01s elapsed, 5.1e+01s avg, 7.6e+02s total. Expected time remaining: 7.4e+03s
2020-10-24 18:40:09,623 - root - INFO - #15 MAX:accuracy.mean: 0.2
2020-10-24 18:40:09,788 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:40:57,444 - root - DEBUG - Updating hall of fame
2020-10-24 18:41:01,668 - root - INFO - Completed generation 16; 5.2e+01s elapsed, 5.1e+01s avg, 8.1e+02s total. Expected time remaining: 7.3e+03s
2020-10-24 18:41:01,774 - root - INFO - #16 MAX:accuracy.mean: 0.2
2020-10-24 18:41:01,937 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:41:48,648 - root - DEBUG - Updating hall of fame
2020-10-24 18:41:51,116 - root - INFO - Completed generation 17; 4.9e+01s elapsed, 5.1e+01s avg, 8.6e+02s total. Expected time remaining: 7.3e+03s
2020-10-24 18:41:51,221 - root - INFO - #17 MAX:accuracy.mean: 0.21
2020-10-24 18:41:51,383 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:42:38,097 - root - DEBUG - Updating hall of fame
2020-10-24 18:42:42,649 - root - INFO - Completed generation 18; 5.1e+01s elapsed, 5.1e+01s avg, 9.1e+02s total. Expected time remaining: 7.2e+03s
2020-10-24 18:42:42,756 - root - INFO - #18 MAX:accuracy.mean: 0.2
2020-10-24 18:42:42,934 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:43:28,519 - root - DEBUG - Updating hall of fame
2020-10-24 18:43:30,437 - root - INFO - Completed generation 19; 4.8e+01s elapsed, 5.1e+01s avg, 9.6e+02s total. Expected time remaining: 7.1e+03s
2020-10-24 18:43:30,544 - root - INFO - #19 MAX:accuracy.mean: 0.2
2020-10-24 18:43:30,705 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:44:17,422 - root - DEBUG - Updating hall of fame
2020-10-24 18:44:19,463 - root - INFO - Completed generation 20; 4.9e+01s elapsed, 5.1e+01s avg, 1e+03s total. Expected time remaining: 7.1e+03s
2020-10-24 18:44:19,567 - root - INFO - #20 MAX:accuracy.mean: 0.2
2020-10-24 18:44:19,757 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:45:05,670 - root - DEBUG - Updating hall of fame
2020-10-24 18:45:07,568 - root - INFO - Completed generation 21; 4.8e+01s elapsed, 5e+01s avg, 1.1e+03s total. Expected time remaining: 7e+03s
2020-10-24 18:45:07,673 - root - INFO - #21 MAX:accuracy.mean: 0.21
2020-10-24 18:45:07,837 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:45:55,899 - root - DEBUG - Updating hall of fame
2020-10-24 18:46:01,275 - root - INFO - Completed generation 22; 5.4e+01s elapsed, 5.1e+01s avg, 1.1e+03s total. Expected time remaining: 7e+03s
2020-10-24 18:46:01,381 - root - INFO - #22 MAX:accuracy.mean: 0.21
2020-10-24 18:46:01,549 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:46:49,868 - root - DEBUG - Updating hall of fame
2020-10-24 18:46:53,254 - root - INFO - Completed generation 23; 5.2e+01s elapsed, 5.1e+01s avg, 1.2e+03s total. Expected time remaining: 6.9e+03s
2020-10-24 18:46:53,355 - root - INFO - #23 MAX:accuracy.mean: 0.2
2020-10-24 18:46:53,516 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:47:44,646 - root - DEBUG - Updating hall of fame
2020-10-24 18:47:47,934 - root - INFO - Completed generation 24; 5.5e+01s elapsed, 5.1e+01s avg, 1.2e+03s total. Expected time remaining: 6.9e+03s
2020-10-24 18:47:48,050 - root - INFO - #24 MAX:accuracy.mean: 0.21
2020-10-24 18:47:48,210 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:48:38,181 - root - DEBUG - Updating hall of fame
2020-10-24 18:48:41,726 - root - INFO - Completed generation 25; 5.4e+01s elapsed, 5.1e+01s avg, 1.3e+03s total. Expected time remaining: 6.9e+03s
2020-10-24 18:48:41,829 - root - INFO - #25 MAX:accuracy.mean: 0.22
2020-10-24 18:48:41,991 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:49:31,164 - root - DEBUG - Updating hall of fame
2020-10-24 18:49:34,334 - root - INFO - Completed generation 26; 5.3e+01s elapsed, 5.1e+01s avg, 1.3e+03s total. Expected time remaining: 6.8e+03s
2020-10-24 18:49:34,439 - root - INFO - #26 MAX:accuracy.mean: 0.21
2020-10-24 18:49:34,602 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:50:23,501 - root - DEBUG - Updating hall of fame
2020-10-24 18:50:25,543 - root - INFO - Completed generation 27; 5.1e+01s elapsed, 5.1e+01s avg, 1.4e+03s total. Expected time remaining: 6.8e+03s
2020-10-24 18:50:25,648 - root - INFO - #27 MAX:accuracy.mean: 0.2
2020-10-24 18:50:25,809 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:51:15,734 - root - DEBUG - Updating hall of fame
2020-10-24 18:51:18,753 - root - INFO - Completed generation 28; 5.3e+01s elapsed, 5.1e+01s avg, 1.4e+03s total. Expected time remaining: 6.7e+03s
2020-10-24 18:51:18,863 - root - INFO - #28 MAX:accuracy.mean: 0.2
2020-10-24 18:51:19,051 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:52:06,927 - root - DEBUG - Updating hall of fame
2020-10-24 18:52:08,017 - root - INFO - Completed generation 29; 4.9e+01s elapsed, 5.1e+01s avg, 1.5e+03s total. Expected time remaining: 6.7e+03s
2020-10-24 18:52:08,125 - root - INFO - #29 MAX:accuracy.mean: 0.2
2020-10-24 18:52:08,290 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:52:58,311 - root - DEBUG - Updating hall of fame
2020-10-24 18:53:01,115 - root - INFO - Completed generation 30; 5.3e+01s elapsed, 5.1e+01s avg, 1.5e+03s total. Expected time remaining: 6.6e+03s
2020-10-24 18:53:01,216 - root - INFO - #30 MAX:accuracy.mean: 0.22
2020-10-24 18:53:01,408 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:53:50,902 - root - DEBUG - Updating hall of fame
2020-10-24 18:53:53,881 - root - INFO - Completed generation 31; 5.3e+01s elapsed, 5.1e+01s avg, 1.6e+03s total. Expected time remaining: 6.6e+03s
2020-10-24 18:53:53,988 - root - INFO - #31 MAX:accuracy.mean: 0.21
2020-10-24 18:53:54,167 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:54:45,631 - root - DEBUG - Updating hall of fame
2020-10-24 18:54:48,266 - root - INFO - Completed generation 32; 5.4e+01s elapsed, 5.1e+01s avg, 1.6e+03s total. Expected time remaining: 6.6e+03s
2020-10-24 18:54:48,371 - root - INFO - #32 MAX:accuracy.mean: 0.21
2020-10-24 18:54:48,535 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:55:38,603 - root - DEBUG - Updating hall of fame
2020-10-24 18:55:40,968 - root - INFO - Completed generation 33; 5.3e+01s elapsed, 5.1e+01s avg, 1.7e+03s total. Expected time remaining: 6.5e+03s
2020-10-24 18:55:41,075 - root - INFO - #33 MAX:accuracy.mean: 0.22
2020-10-24 18:55:41,240 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:56:30,817 - root - DEBUG - Updating hall of fame
2020-10-24 18:56:34,315 - root - INFO - Completed generation 34; 5.3e+01s elapsed, 5.1e+01s avg, 1.7e+03s total. Expected time remaining: 6.5e+03s
2020-10-24 18:56:34,418 - root - INFO - #34 MAX:accuracy.mean: 0.2
2020-10-24 18:56:34,585 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:57:26,346 - root - DEBUG - Updating hall of fame
2020-10-24 18:57:29,915 - root - INFO - Completed generation 35; 5.5e+01s elapsed, 5.1e+01s avg, 1.8e+03s total. Expected time remaining: 6.4e+03s
2020-10-24 18:57:30,030 - root - INFO - #35 MAX:accuracy.mean: 0.21
2020-10-24 18:57:30,198 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:58:23,149 - root - DEBUG - Updating hall of fame
2020-10-24 18:58:27,226 - root - INFO - Completed generation 36; 5.7e+01s elapsed, 5.2e+01s avg, 1.9e+03s total. Expected time remaining: 6.4e+03s
2020-10-24 18:58:27,332 - root - INFO - #36 MAX:accuracy.mean: 0.21
2020-10-24 18:58:27,500 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 18:59:18,584 - root - DEBUG - Updating hall of fame
2020-10-24 18:59:24,061 - root - INFO - Completed generation 37; 5.7e+01s elapsed, 5.2e+01s avg, 1.9e+03s total. Expected time remaining: 6.4e+03s
2020-10-24 18:59:24,171 - root - INFO - #37 MAX:accuracy.mean: 0.21
2020-10-24 18:59:24,334 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:00:13,021 - root - DEBUG - Updating hall of fame
2020-10-24 19:00:17,439 - root - INFO - Completed generation 38; 5.3e+01s elapsed, 5.2e+01s avg, 2e+03s total. Expected time remaining: 6.3e+03s
2020-10-24 19:00:17,569 - root - INFO - #38 MAX:accuracy.mean: 0.21
2020-10-24 19:00:17,785 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:01:06,853 - root - DEBUG - Updating hall of fame
2020-10-24 19:01:10,292 - root - INFO - Completed generation 39; 5.3e+01s elapsed, 5.2e+01s avg, 2e+03s total. Expected time remaining: 6.3e+03s
2020-10-24 19:01:10,398 - root - INFO - #39 MAX:accuracy.mean: 0.21
2020-10-24 19:01:10,565 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:02:01,451 - root - DEBUG - Updating hall of fame
2020-10-24 19:02:04,688 - root - INFO - Completed generation 40; 5.4e+01s elapsed, 5.2e+01s avg, 2.1e+03s total. Expected time remaining: 6.2e+03s
2020-10-24 19:02:04,790 - root - INFO - #40 MAX:accuracy.mean: 0.21
2020-10-24 19:02:04,991 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:02:56,114 - root - DEBUG - Updating hall of fame
2020-10-24 19:03:00,272 - root - INFO - Completed generation 41; 5.5e+01s elapsed, 5.2e+01s avg, 2.1e+03s total. Expected time remaining: 6.2e+03s
2020-10-24 19:03:00,379 - root - INFO - #41 MAX:accuracy.mean: 0.21
2020-10-24 19:03:00,544 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:03:49,470 - root - DEBUG - Updating hall of fame
2020-10-24 19:03:52,141 - root - INFO - Completed generation 42; 5.2e+01s elapsed, 5.2e+01s avg, 2.2e+03s total. Expected time remaining: 6.1e+03s
2020-10-24 19:03:52,250 - root - INFO - #42 MAX:accuracy.mean: 0.21
2020-10-24 19:03:52,417 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:04:41,443 - root - DEBUG - Updating hall of fame
2020-10-24 19:04:44,809 - root - INFO - Completed generation 43; 5.3e+01s elapsed, 5.2e+01s avg, 2.2e+03s total. Expected time remaining: 6.1e+03s
2020-10-24 19:04:44,917 - root - INFO - #43 MAX:accuracy.mean: 0.22
2020-10-24 19:04:45,096 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:05:34,667 - root - DEBUG - Updating hall of fame
2020-10-24 19:05:38,184 - root - INFO - Completed generation 44; 5.3e+01s elapsed, 5.2e+01s avg, 2.3e+03s total. Expected time remaining: 6e+03s
2020-10-24 19:05:38,288 - root - INFO - #44 MAX:accuracy.mean: 0.21
2020-10-24 19:05:38,450 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:06:27,532 - root - DEBUG - Updating hall of fame
2020-10-24 19:06:30,541 - root - INFO - Completed generation 45; 5.2e+01s elapsed, 5.2e+01s avg, 2.3e+03s total. Expected time remaining: 6e+03s
2020-10-24 19:06:30,648 - root - INFO - #45 MAX:accuracy.mean: 0.21
2020-10-24 19:06:30,814 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:07:19,529 - root - DEBUG - Updating hall of fame
2020-10-24 19:07:22,174 - root - INFO - Completed generation 46; 5.2e+01s elapsed, 5.2e+01s avg, 2.4e+03s total. Expected time remaining: 5.9e+03s
2020-10-24 19:07:22,280 - root - INFO - #46 MAX:accuracy.mean: 0.21
2020-10-24 19:07:22,446 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:08:11,784 - root - DEBUG - Updating hall of fame
2020-10-24 19:08:13,371 - root - INFO - Completed generation 47; 5.1e+01s elapsed, 5.2e+01s avg, 2.4e+03s total. Expected time remaining: 5.9e+03s
2020-10-24 19:08:13,475 - root - INFO - #47 MAX:accuracy.mean: 0.2
2020-10-24 19:08:13,641 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:09:02,252 - root - DEBUG - Updating hall of fame
2020-10-24 19:09:05,425 - root - INFO - Completed generation 48; 5.2e+01s elapsed, 5.2e+01s avg, 2.5e+03s total. Expected time remaining: 5.8e+03s
2020-10-24 19:09:05,530 - root - INFO - #48 MAX:accuracy.mean: 0.22
2020-10-24 19:09:05,696 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:09:54,437 - root - DEBUG - Updating hall of fame
2020-10-24 19:09:57,703 - root - INFO - Completed generation 49; 5.2e+01s elapsed, 5.2e+01s avg, 2.5e+03s total. Expected time remaining: 5.8e+03s
2020-10-24 19:09:57,822 - root - INFO - #49 MAX:accuracy.mean: 0.2
2020-10-24 19:09:58,032 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:10:48,609 - root - DEBUG - Updating hall of fame
2020-10-24 19:10:51,471 - root - INFO - Completed generation 50; 5.4e+01s elapsed, 5.2e+01s avg, 2.6e+03s total. Expected time remaining: 5.7e+03s
2020-10-24 19:10:51,576 - root - INFO - #50 MAX:accuracy.mean: 0.21
2020-10-24 19:10:51,774 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:11:40,536 - root - DEBUG - Updating hall of fame
2020-10-24 19:11:43,331 - root - INFO - Completed generation 51; 5.2e+01s elapsed, 5.2e+01s avg, 2.7e+03s total. Expected time remaining: 5.7e+03s
2020-10-24 19:11:43,435 - root - INFO - #51 MAX:accuracy.mean: 0.21
2020-10-24 19:11:43,600 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:12:34,166 - root - DEBUG - Updating hall of fame
2020-10-24 19:12:37,107 - root - INFO - Completed generation 52; 5.4e+01s elapsed, 5.2e+01s avg, 2.7e+03s total. Expected time remaining: 5.6e+03s
2020-10-24 19:12:37,213 - root - INFO - #52 MAX:accuracy.mean: 0.21
2020-10-24 19:12:37,402 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:13:27,504 - root - DEBUG - Updating hall of fame
2020-10-24 19:13:29,574 - root - INFO - Completed generation 53; 5.2e+01s elapsed, 5.2e+01s avg, 2.8e+03s total. Expected time remaining: 5.6e+03s
2020-10-24 19:13:29,680 - root - INFO - #53 MAX:accuracy.mean: 0.21
2020-10-24 19:13:29,843 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:14:20,251 - root - DEBUG - Updating hall of fame
2020-10-24 19:14:23,769 - root - INFO - Completed generation 54; 5.4e+01s elapsed, 5.2e+01s avg, 2.8e+03s total. Expected time remaining: 5.5e+03s
2020-10-24 19:14:23,876 - root - INFO - #54 MAX:accuracy.mean: 0.23
2020-10-24 19:14:24,047 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:15:13,584 - root - DEBUG - Updating hall of fame
2020-10-24 19:15:16,750 - root - INFO - Completed generation 55; 5.3e+01s elapsed, 5.2e+01s avg, 2.9e+03s total. Expected time remaining: 5.5e+03s
2020-10-24 19:15:16,855 - root - INFO - #55 MAX:accuracy.mean: 0.21
2020-10-24 19:15:17,028 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:16:07,136 - root - DEBUG - Updating hall of fame
2020-10-24 19:16:12,047 - root - INFO - Completed generation 56; 5.5e+01s elapsed, 5.2e+01s avg, 2.9e+03s total. Expected time remaining: 5.4e+03s
2020-10-24 19:16:12,153 - root - INFO - #56 MAX:accuracy.mean: 0.21
2020-10-24 19:16:12,323 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:17:03,582 - root - DEBUG - Updating hall of fame
2020-10-24 19:17:05,829 - root - INFO - Completed generation 57; 5.4e+01s elapsed, 5.2e+01s avg, 3e+03s total. Expected time remaining: 5.4e+03s
2020-10-24 19:17:05,937 - root - INFO - #57 MAX:accuracy.mean: 0.21
2020-10-24 19:17:06,109 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:17:57,089 - root - DEBUG - Updating hall of fame
2020-10-24 19:18:00,766 - root - INFO - Completed generation 58; 5.5e+01s elapsed, 5.2e+01s avg, 3e+03s total. Expected time remaining: 5.3e+03s
2020-10-24 19:18:00,874 - root - INFO - #58 MAX:accuracy.mean: 0.21
2020-10-24 19:18:01,047 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:18:51,814 - root - DEBUG - Updating hall of fame
2020-10-24 19:18:54,995 - root - INFO - Completed generation 59; 5.4e+01s elapsed, 5.2e+01s avg, 3.1e+03s total. Expected time remaining: 5.3e+03s
2020-10-24 19:18:55,104 - root - INFO - #59 MAX:accuracy.mean: 0.22
2020-10-24 19:18:55,276 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:19:47,441 - root - DEBUG - Updating hall of fame
2020-10-24 19:19:49,353 - root - INFO - Completed generation 60; 5.4e+01s elapsed, 5.2e+01s avg, 3.1e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 19:19:49,459 - root - INFO - #60 MAX:accuracy.mean: 0.22
2020-10-24 19:19:49,670 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:20:39,152 - root - DEBUG - Updating hall of fame
2020-10-24 19:20:41,296 - root - INFO - Completed generation 61; 5.2e+01s elapsed, 5.2e+01s avg, 3.2e+03s total. Expected time remaining: 5.2e+03s
2020-10-24 19:20:41,400 - root - INFO - #61 MAX:accuracy.mean: 0.22
2020-10-24 19:20:41,622 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:21:30,354 - root - DEBUG - Updating hall of fame
2020-10-24 19:21:32,740 - root - INFO - Completed generation 62; 5.1e+01s elapsed, 5.2e+01s avg, 3.2e+03s total. Expected time remaining: 5.1e+03s
2020-10-24 19:21:32,842 - root - INFO - #62 MAX:accuracy.mean: 0.22
2020-10-24 19:21:33,014 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:22:22,342 - root - DEBUG - Updating hall of fame
2020-10-24 19:22:24,435 - root - INFO - Completed generation 63; 5.2e+01s elapsed, 5.2e+01s avg, 3.3e+03s total. Expected time remaining: 5.1e+03s
2020-10-24 19:22:24,541 - root - INFO - #63 MAX:accuracy.mean: 0.22
2020-10-24 19:22:24,703 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:23:16,212 - root - DEBUG - Updating hall of fame
2020-10-24 19:23:18,792 - root - INFO - Completed generation 64; 5.4e+01s elapsed, 5.2e+01s avg, 3.3e+03s total. Expected time remaining: 5e+03s
2020-10-24 19:23:18,908 - root - INFO - #64 MAX:accuracy.mean: 0.22
2020-10-24 19:23:19,089 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:24:09,639 - root - DEBUG - Updating hall of fame
2020-10-24 19:24:11,326 - root - INFO - Completed generation 65; 5.2e+01s elapsed, 5.2e+01s avg, 3.4e+03s total. Expected time remaining: 5e+03s
2020-10-24 19:24:11,429 - root - INFO - #65 MAX:accuracy.mean: 0.22
2020-10-24 19:24:11,594 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:25:03,188 - root - DEBUG - Updating hall of fame
2020-10-24 19:25:04,531 - root - INFO - Completed generation 66; 5.3e+01s elapsed, 5.2e+01s avg, 3.5e+03s total. Expected time remaining: 4.9e+03s
2020-10-24 19:25:04,636 - root - INFO - #66 MAX:accuracy.mean: 0.24
2020-10-24 19:25:04,800 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:25:55,946 - root - DEBUG - Updating hall of fame
2020-10-24 19:25:57,536 - root - INFO - Completed generation 67; 5.3e+01s elapsed, 5.2e+01s avg, 3.5e+03s total. Expected time remaining: 4.9e+03s
2020-10-24 19:25:57,639 - root - INFO - #67 MAX:accuracy.mean: 0.24
2020-10-24 19:25:57,799 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:26:47,744 - root - DEBUG - Updating hall of fame
2020-10-24 19:26:49,860 - root - INFO - Completed generation 68; 5.2e+01s elapsed, 5.2e+01s avg, 3.6e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 19:26:49,968 - root - INFO - #68 MAX:accuracy.mean: 0.24
2020-10-24 19:26:50,149 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:27:39,897 - root - DEBUG - Updating hall of fame
2020-10-24 19:27:42,801 - root - INFO - Completed generation 69; 5.3e+01s elapsed, 5.2e+01s avg, 3.6e+03s total. Expected time remaining: 4.8e+03s
2020-10-24 19:27:42,910 - root - INFO - #69 MAX:accuracy.mean: 0.24
2020-10-24 19:27:43,090 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:28:31,698 - root - DEBUG - Updating hall of fame
2020-10-24 19:28:34,117 - root - INFO - Completed generation 70; 5.1e+01s elapsed, 5.2e+01s avg, 3.7e+03s total. Expected time remaining: 4.7e+03s
2020-10-24 19:28:34,222 - root - INFO - #70 MAX:accuracy.mean: 0.25
2020-10-24 19:28:34,424 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:29:23,816 - root - DEBUG - Updating hall of fame
2020-10-24 19:29:26,035 - root - INFO - Completed generation 71; 5.2e+01s elapsed, 5.2e+01s avg, 3.7e+03s total. Expected time remaining: 4.7e+03s
2020-10-24 19:29:26,141 - root - INFO - #71 MAX:accuracy.mean: 0.25
2020-10-24 19:29:26,307 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:30:15,624 - root - DEBUG - Updating hall of fame
2020-10-24 19:30:17,829 - root - INFO - Completed generation 72; 5.2e+01s elapsed, 5.2e+01s avg, 3.8e+03s total. Expected time remaining: 4.6e+03s
2020-10-24 19:30:17,935 - root - INFO - #72 MAX:accuracy.mean: 0.26
2020-10-24 19:30:18,103 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:31:09,146 - root - DEBUG - Updating hall of fame
2020-10-24 19:31:11,840 - root - INFO - Completed generation 73; 5.4e+01s elapsed, 5.2e+01s avg, 3.8e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 19:31:11,947 - root - INFO - #73 MAX:accuracy.mean: 0.26
2020-10-24 19:31:12,125 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:32:04,274 - root - DEBUG - Updating hall of fame
2020-10-24 19:32:07,606 - root - INFO - Completed generation 74; 5.6e+01s elapsed, 5.2e+01s avg, 3.9e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 19:32:07,712 - root - INFO - #74 MAX:accuracy.mean: 0.26
2020-10-24 19:32:07,890 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:33:00,436 - root - DEBUG - Updating hall of fame
2020-10-24 19:33:03,374 - root - INFO - Completed generation 75; 5.6e+01s elapsed, 5.2e+01s avg, 3.9e+03s total. Expected time remaining: 4.5e+03s
2020-10-24 19:33:03,479 - root - INFO - #75 MAX:accuracy.mean: 0.26
2020-10-24 19:33:03,651 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:33:57,284 - root - DEBUG - Updating hall of fame
2020-10-24 19:33:59,290 - root - INFO - Completed generation 76; 5.6e+01s elapsed, 5.2e+01s avg, 4e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 19:33:59,396 - root - INFO - #76 MAX:accuracy.mean: 0.26
2020-10-24 19:33:59,563 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:34:49,429 - root - DEBUG - Updating hall of fame
2020-10-24 19:34:52,494 - root - INFO - Completed generation 77; 5.3e+01s elapsed, 5.2e+01s avg, 4e+03s total. Expected time remaining: 4.4e+03s
2020-10-24 19:34:52,611 - root - INFO - #77 MAX:accuracy.mean: 0.26
2020-10-24 19:34:52,787 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:35:44,988 - root - DEBUG - Updating hall of fame
2020-10-24 19:35:48,300 - root - INFO - Completed generation 78; 5.6e+01s elapsed, 5.2e+01s avg, 4.1e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 19:35:48,404 - root - INFO - #78 MAX:accuracy.mean: 0.26
2020-10-24 19:35:48,570 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:36:39,880 - root - DEBUG - Updating hall of fame
2020-10-24 19:36:41,692 - root - INFO - Completed generation 79; 5.3e+01s elapsed, 5.2e+01s avg, 4.1e+03s total. Expected time remaining: 4.3e+03s
2020-10-24 19:36:41,799 - root - INFO - #79 MAX:accuracy.mean: 0.25
2020-10-24 19:36:41,983 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:37:33,695 - root - DEBUG - Updating hall of fame
2020-10-24 19:37:35,325 - root - INFO - Completed generation 80; 5.4e+01s elapsed, 5.2e+01s avg, 4.2e+03s total. Expected time remaining: 4.2e+03s
2020-10-24 19:37:35,430 - root - INFO - #80 MAX:accuracy.mean: 0.26
2020-10-24 19:37:35,634 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:38:27,873 - root - DEBUG - Updating hall of fame
2020-10-24 19:38:28,956 - root - INFO - Completed generation 81; 5.3e+01s elapsed, 5.3e+01s avg, 4.3e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 19:38:29,066 - root - INFO - #81 MAX:accuracy.mean: 0.26
2020-10-24 19:38:29,236 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:39:20,255 - root - DEBUG - Updating hall of fame
2020-10-24 19:39:22,370 - root - INFO - Completed generation 82; 5.3e+01s elapsed, 5.3e+01s avg, 4.3e+03s total. Expected time remaining: 4.1e+03s
2020-10-24 19:39:22,478 - root - INFO - #82 MAX:accuracy.mean: 0.27
2020-10-24 19:39:22,648 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:40:13,272 - root - DEBUG - Updating hall of fame
2020-10-24 19:40:14,917 - root - INFO - Completed generation 83; 5.2e+01s elapsed, 5.3e+01s avg, 4.4e+03s total. Expected time remaining: 4e+03s
2020-10-24 19:40:15,028 - root - INFO - #83 MAX:accuracy.mean: 0.26
2020-10-24 19:40:15,197 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:41:05,967 - root - DEBUG - Updating hall of fame
2020-10-24 19:41:06,967 - root - INFO - Completed generation 84; 5.2e+01s elapsed, 5.3e+01s avg, 4.4e+03s total. Expected time remaining: 4e+03s
2020-10-24 19:41:07,076 - root - INFO - #84 MAX:accuracy.mean: 0.27
2020-10-24 19:41:07,238 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:41:59,637 - root - DEBUG - Updating hall of fame
2020-10-24 19:42:01,366 - root - INFO - Completed generation 85; 5.4e+01s elapsed, 5.3e+01s avg, 4.5e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 19:42:01,474 - root - INFO - #85 MAX:accuracy.mean: 0.26
2020-10-24 19:42:01,650 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:42:53,341 - root - DEBUG - Updating hall of fame
2020-10-24 19:42:55,138 - root - INFO - Completed generation 86; 5.4e+01s elapsed, 5.3e+01s avg, 4.5e+03s total. Expected time remaining: 3.9e+03s
2020-10-24 19:42:55,246 - root - INFO - #86 MAX:accuracy.mean: 0.26
2020-10-24 19:42:55,405 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:43:45,497 - root - DEBUG - Updating hall of fame
2020-10-24 19:43:46,632 - root - INFO - Completed generation 87; 5.1e+01s elapsed, 5.3e+01s avg, 4.6e+03s total. Expected time remaining: 3.8e+03s
2020-10-24 19:43:46,741 - root - INFO - #87 MAX:accuracy.mean: 0.26
2020-10-24 19:43:46,912 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:44:38,143 - root - DEBUG - Updating hall of fame
2020-10-24 19:44:40,333 - root - INFO - Completed generation 88; 5.4e+01s elapsed, 5.3e+01s avg, 4.6e+03s total. Expected time remaining: 3.8e+03s
2020-10-24 19:44:40,437 - root - INFO - #88 MAX:accuracy.mean: 0.27
2020-10-24 19:44:40,604 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:45:32,259 - root - DEBUG - Updating hall of fame
2020-10-24 19:45:34,477 - root - INFO - Completed generation 89; 5.4e+01s elapsed, 5.3e+01s avg, 4.7e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 19:45:34,586 - root - INFO - #89 MAX:accuracy.mean: 0.27
2020-10-24 19:45:34,754 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:46:25,975 - root - DEBUG - Updating hall of fame
2020-10-24 19:46:28,424 - root - INFO - Completed generation 90; 5.4e+01s elapsed, 5.3e+01s avg, 4.7e+03s total. Expected time remaining: 3.7e+03s
2020-10-24 19:46:28,529 - root - INFO - #90 MAX:accuracy.mean: 0.27
2020-10-24 19:46:28,738 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:47:21,120 - root - DEBUG - Updating hall of fame
2020-10-24 19:47:23,385 - root - INFO - Completed generation 91; 5.5e+01s elapsed, 5.3e+01s avg, 4.8e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 19:47:23,488 - root - INFO - #91 MAX:accuracy.mean: 0.29
2020-10-24 19:47:23,658 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:48:16,151 - root - DEBUG - Updating hall of fame
2020-10-24 19:48:19,122 - root - INFO - Completed generation 92; 5.6e+01s elapsed, 5.3e+01s avg, 4.8e+03s total. Expected time remaining: 3.6e+03s
2020-10-24 19:48:19,231 - root - INFO - #92 MAX:accuracy.mean: 0.28
2020-10-24 19:48:19,402 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:49:10,164 - root - DEBUG - Updating hall of fame
2020-10-24 19:49:12,208 - root - INFO - Completed generation 93; 5.3e+01s elapsed, 5.3e+01s avg, 4.9e+03s total. Expected time remaining: 3.5e+03s
2020-10-24 19:49:12,311 - root - INFO - #93 MAX:accuracy.mean: 0.29
2020-10-24 19:49:12,481 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:50:04,529 - root - DEBUG - Updating hall of fame
2020-10-24 19:50:06,755 - root - INFO - Completed generation 94; 5.4e+01s elapsed, 5.3e+01s avg, 4.9e+03s total. Expected time remaining: 3.5e+03s
2020-10-24 19:50:06,863 - root - INFO - #94 MAX:accuracy.mean: 0.29
2020-10-24 19:50:07,036 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:50:57,335 - root - DEBUG - Updating hall of fame
2020-10-24 19:50:59,222 - root - INFO - Completed generation 95; 5.2e+01s elapsed, 5.3e+01s avg, 5e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 19:50:59,325 - root - INFO - #95 MAX:accuracy.mean: 0.29
2020-10-24 19:50:59,496 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:51:51,423 - root - DEBUG - Updating hall of fame
2020-10-24 19:51:53,867 - root - INFO - Completed generation 96; 5.5e+01s elapsed, 5.3e+01s avg, 5.1e+03s total. Expected time remaining: 3.4e+03s
2020-10-24 19:51:53,973 - root - INFO - #96 MAX:accuracy.mean: 0.29
2020-10-24 19:51:54,145 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:52:45,578 - root - DEBUG - Updating hall of fame
2020-10-24 19:52:48,843 - root - INFO - Completed generation 97; 5.5e+01s elapsed, 5.3e+01s avg, 5.1e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 19:52:48,963 - root - INFO - #97 MAX:accuracy.mean: 0.29
2020-10-24 19:52:49,149 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:53:41,534 - root - DEBUG - Updating hall of fame
2020-10-24 19:53:43,470 - root - INFO - Completed generation 98; 5.5e+01s elapsed, 5.3e+01s avg, 5.2e+03s total. Expected time remaining: 3.3e+03s
2020-10-24 19:53:43,574 - root - INFO - #98 MAX:accuracy.mean: 0.3
2020-10-24 19:53:43,746 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:54:35,041 - root - DEBUG - Updating hall of fame
2020-10-24 19:54:36,208 - root - INFO - Completed generation 99; 5.3e+01s elapsed, 5.3e+01s avg, 5.2e+03s total. Expected time remaining: 3.2e+03s
2020-10-24 19:54:36,312 - root - INFO - #99 MAX:accuracy.mean: 0.29
2020-10-24 19:54:36,476 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:55:27,735 - root - DEBUG - Updating hall of fame
2020-10-24 19:55:30,331 - root - INFO - Completed generation 100; 5.4e+01s elapsed, 5.3e+01s avg, 5.3e+03s total. Expected time remaining: 3.2e+03s
2020-10-24 19:55:30,439 - root - INFO - #100 MAX:accuracy.mean: 0.31
2020-10-24 19:55:30,650 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:56:21,593 - root - DEBUG - Updating hall of fame
2020-10-24 19:56:23,530 - root - INFO - Completed generation 101; 5.3e+01s elapsed, 5.3e+01s avg, 5.3e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 19:56:23,635 - root - INFO - #101 MAX:accuracy.mean: 0.3
2020-10-24 19:56:23,800 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:57:13,469 - root - DEBUG - Updating hall of fame
2020-10-24 19:57:14,776 - root - INFO - Completed generation 102; 5.1e+01s elapsed, 5.3e+01s avg, 5.4e+03s total. Expected time remaining: 3.1e+03s
2020-10-24 19:57:14,880 - root - INFO - #102 MAX:accuracy.mean: 0.3
2020-10-24 19:57:15,064 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:58:06,254 - root - DEBUG - Updating hall of fame
2020-10-24 19:58:07,194 - root - INFO - Completed generation 103; 5.2e+01s elapsed, 5.3e+01s avg, 5.4e+03s total. Expected time remaining: 3e+03s
2020-10-24 19:58:07,300 - root - INFO - #103 MAX:accuracy.mean: 0.31
2020-10-24 19:58:07,471 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:58:59,540 - root - DEBUG - Updating hall of fame
2020-10-24 19:59:01,432 - root - INFO - Completed generation 104; 5.4e+01s elapsed, 5.3e+01s avg, 5.5e+03s total. Expected time remaining: 3e+03s
2020-10-24 19:59:01,537 - root - INFO - #104 MAX:accuracy.mean: 0.31
2020-10-24 19:59:01,717 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 19:59:56,570 - root - DEBUG - Updating hall of fame
2020-10-24 19:59:58,133 - root - INFO - Completed generation 105; 5.7e+01s elapsed, 5.3e+01s avg, 5.5e+03s total. Expected time remaining: 2.9e+03s
2020-10-24 19:59:58,239 - root - INFO - #105 MAX:accuracy.mean: 0.31
2020-10-24 19:59:58,409 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:00:48,689 - root - DEBUG - Updating hall of fame
2020-10-24 20:00:51,134 - root - INFO - Completed generation 106; 5.3e+01s elapsed, 5.3e+01s avg, 5.6e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 20:00:51,240 - root - INFO - #106 MAX:accuracy.mean: 0.3
2020-10-24 20:00:51,410 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:01:41,060 - root - DEBUG - Updating hall of fame
2020-10-24 20:01:43,253 - root - INFO - Completed generation 107; 5.2e+01s elapsed, 5.3e+01s avg, 5.6e+03s total. Expected time remaining: 2.8e+03s
2020-10-24 20:01:43,356 - root - INFO - #107 MAX:accuracy.mean: 0.32
2020-10-24 20:01:43,529 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:02:35,131 - root - DEBUG - Updating hall of fame
2020-10-24 20:02:36,833 - root - INFO - Completed generation 108; 5.3e+01s elapsed, 5.3e+01s avg, 5.7e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 20:02:36,941 - root - INFO - #108 MAX:accuracy.mean: 0.32
2020-10-24 20:02:37,124 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:03:28,652 - root - DEBUG - Updating hall of fame
2020-10-24 20:03:30,367 - root - INFO - Completed generation 109; 5.3e+01s elapsed, 5.3e+01s avg, 5.8e+03s total. Expected time remaining: 2.7e+03s
2020-10-24 20:03:30,471 - root - INFO - #109 MAX:accuracy.mean: 0.31
2020-10-24 20:03:30,639 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:04:23,333 - root - DEBUG - Updating hall of fame
2020-10-24 20:04:25,246 - root - INFO - Completed generation 110; 5.5e+01s elapsed, 5.3e+01s avg, 5.8e+03s total. Expected time remaining: 2.6e+03s
2020-10-24 20:04:25,349 - root - INFO - #110 MAX:accuracy.mean: 0.31
2020-10-24 20:04:25,558 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:05:18,296 - root - DEBUG - Updating hall of fame
2020-10-24 20:05:20,739 - root - INFO - Completed generation 111; 5.5e+01s elapsed, 5.3e+01s avg, 5.9e+03s total. Expected time remaining: 2.6e+03s
2020-10-24 20:05:20,844 - root - INFO - #111 MAX:accuracy.mean: 0.32
2020-10-24 20:05:21,018 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:06:14,316 - root - DEBUG - Updating hall of fame
2020-10-24 20:06:16,243 - root - INFO - Completed generation 112; 5.5e+01s elapsed, 5.3e+01s avg, 5.9e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 20:06:16,348 - root - INFO - #112 MAX:accuracy.mean: 0.32
2020-10-24 20:06:16,529 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:07:09,912 - root - DEBUG - Updating hall of fame
2020-10-24 20:07:12,106 - root - INFO - Completed generation 113; 5.6e+01s elapsed, 5.3e+01s avg, 6e+03s total. Expected time remaining: 2.5e+03s
2020-10-24 20:07:12,215 - root - INFO - #113 MAX:accuracy.mean: 0.32
2020-10-24 20:07:12,397 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:08:04,666 - root - DEBUG - Updating hall of fame
2020-10-24 20:08:06,702 - root - INFO - Completed generation 114; 5.4e+01s elapsed, 5.3e+01s avg, 6e+03s total. Expected time remaining: 2.4e+03s
2020-10-24 20:08:06,807 - root - INFO - #114 MAX:accuracy.mean: 0.33
2020-10-24 20:08:06,980 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:08:57,838 - root - DEBUG - Updating hall of fame
2020-10-24 20:09:00,130 - root - INFO - Completed generation 115; 5.3e+01s elapsed, 5.3e+01s avg, 6.1e+03s total. Expected time remaining: 2.4e+03s
2020-10-24 20:09:00,233 - root - INFO - #115 MAX:accuracy.mean: 0.32
2020-10-24 20:09:00,405 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:09:50,906 - root - DEBUG - Updating hall of fame
2020-10-24 20:09:53,366 - root - INFO - Completed generation 116; 5.3e+01s elapsed, 5.3e+01s avg, 6.1e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 20:09:53,472 - root - INFO - #116 MAX:accuracy.mean: 0.32
2020-10-24 20:09:53,649 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:10:45,414 - root - DEBUG - Updating hall of fame
2020-10-24 20:10:48,148 - root - INFO - Completed generation 117; 5.5e+01s elapsed, 5.3e+01s avg, 6.2e+03s total. Expected time remaining: 2.3e+03s
2020-10-24 20:10:48,308 - root - INFO - #117 MAX:accuracy.mean: 0.33
2020-10-24 20:10:48,522 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:11:42,116 - root - DEBUG - Updating hall of fame
2020-10-24 20:11:44,775 - root - INFO - Completed generation 118; 5.6e+01s elapsed, 5.3e+01s avg, 6.2e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 20:11:44,883 - root - INFO - #118 MAX:accuracy.mean: 0.34
2020-10-24 20:11:45,071 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:12:37,853 - root - DEBUG - Updating hall of fame
2020-10-24 20:12:40,040 - root - INFO - Completed generation 119; 5.5e+01s elapsed, 5.3e+01s avg, 6.3e+03s total. Expected time remaining: 2.2e+03s
2020-10-24 20:12:40,144 - root - INFO - #119 MAX:accuracy.mean: 0.34
2020-10-24 20:12:40,318 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:13:35,067 - root - DEBUG - Updating hall of fame
2020-10-24 20:13:37,304 - root - INFO - Completed generation 120; 5.7e+01s elapsed, 5.3e+01s avg, 6.4e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 20:13:37,411 - root - INFO - #120 MAX:accuracy.mean: 0.33
2020-10-24 20:13:37,637 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:14:31,581 - root - DEBUG - Updating hall of fame
2020-10-24 20:14:33,744 - root - INFO - Completed generation 121; 5.6e+01s elapsed, 5.3e+01s avg, 6.4e+03s total. Expected time remaining: 2.1e+03s
2020-10-24 20:14:33,851 - root - INFO - #121 MAX:accuracy.mean: 0.33
2020-10-24 20:14:34,032 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:15:27,995 - root - DEBUG - Updating hall of fame
2020-10-24 20:15:29,308 - root - INFO - Completed generation 122; 5.5e+01s elapsed, 5.3e+01s avg, 6.5e+03s total. Expected time remaining: 2e+03s
2020-10-24 20:15:29,413 - root - INFO - #122 MAX:accuracy.mean: 0.33
2020-10-24 20:15:29,581 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:16:21,932 - root - DEBUG - Updating hall of fame
2020-10-24 20:16:23,517 - root - INFO - Completed generation 123; 5.4e+01s elapsed, 5.3e+01s avg, 6.5e+03s total. Expected time remaining: 2e+03s
2020-10-24 20:16:23,623 - root - INFO - #123 MAX:accuracy.mean: 0.34
2020-10-24 20:16:23,795 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:17:16,047 - root - DEBUG - Updating hall of fame
2020-10-24 20:17:17,003 - root - INFO - Completed generation 124; 5.3e+01s elapsed, 5.3e+01s avg, 6.6e+03s total. Expected time remaining: 1.9e+03s
2020-10-24 20:17:17,117 - root - INFO - #124 MAX:accuracy.mean: 0.33
2020-10-24 20:17:17,288 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:18:12,498 - root - DEBUG - Updating hall of fame
2020-10-24 20:18:13,718 - root - INFO - Completed generation 125; 5.7e+01s elapsed, 5.3e+01s avg, 6.6e+03s total. Expected time remaining: 1.9e+03s
2020-10-24 20:18:13,823 - root - INFO - #125 MAX:accuracy.mean: 0.33
2020-10-24 20:18:14,004 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:19:04,925 - root - DEBUG - Updating hall of fame
2020-10-24 20:19:06,034 - root - INFO - Completed generation 126; 5.2e+01s elapsed, 5.3e+01s avg, 6.7e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 20:19:06,139 - root - INFO - #126 MAX:accuracy.mean: 0.33
2020-10-24 20:19:06,318 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:20:08,332 - root - DEBUG - Updating hall of fame
2020-10-24 20:20:09,883 - root - INFO - Completed generation 127; 6.4e+01s elapsed, 5.3e+01s avg, 6.7e+03s total. Expected time remaining: 1.8e+03s
2020-10-24 20:20:09,986 - root - INFO - #127 MAX:accuracy.mean: 0.34
2020-10-24 20:20:10,175 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:21:02,838 - root - DEBUG - Updating hall of fame
2020-10-24 20:21:03,974 - root - INFO - Completed generation 128; 5.4e+01s elapsed, 5.3e+01s avg, 6.8e+03s total. Expected time remaining: 1.7e+03s
2020-10-24 20:21:04,091 - root - INFO - #128 MAX:accuracy.mean: 0.35
2020-10-24 20:21:04,259 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:21:55,515 - root - DEBUG - Updating hall of fame
2020-10-24 20:21:56,773 - root - INFO - Completed generation 129; 5.3e+01s elapsed, 5.3e+01s avg, 6.9e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 20:21:56,878 - root - INFO - #129 MAX:accuracy.mean: 0.34
2020-10-24 20:21:57,060 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:22:53,347 - root - DEBUG - Updating hall of fame
2020-10-24 20:22:55,039 - root - INFO - Completed generation 130; 5.8e+01s elapsed, 5.3e+01s avg, 6.9e+03s total. Expected time remaining: 1.6e+03s
2020-10-24 20:22:55,142 - root - INFO - #130 MAX:accuracy.mean: 0.34
2020-10-24 20:22:55,368 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:23:46,773 - root - DEBUG - Updating hall of fame
2020-10-24 20:23:48,200 - root - INFO - Completed generation 131; 5.3e+01s elapsed, 5.3e+01s avg, 7e+03s total. Expected time remaining: 1.5e+03s
2020-10-24 20:23:48,307 - root - INFO - #131 MAX:accuracy.mean: 0.34
2020-10-24 20:23:48,478 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:24:42,243 - root - DEBUG - Updating hall of fame
2020-10-24 20:24:43,909 - root - INFO - Completed generation 132; 5.6e+01s elapsed, 5.3e+01s avg, 7e+03s total. Expected time remaining: 1.5e+03s
2020-10-24 20:24:44,023 - root - INFO - #132 MAX:accuracy.mean: 0.34
2020-10-24 20:24:44,200 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:25:38,459 - root - DEBUG - Updating hall of fame
2020-10-24 20:25:39,504 - root - INFO - Completed generation 133; 5.5e+01s elapsed, 5.3e+01s avg, 7.1e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 20:25:39,608 - root - INFO - #133 MAX:accuracy.mean: 0.34
2020-10-24 20:25:39,780 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:26:34,296 - root - DEBUG - Updating hall of fame
2020-10-24 20:26:35,795 - root - INFO - Completed generation 134; 5.6e+01s elapsed, 5.3e+01s avg, 7.1e+03s total. Expected time remaining: 1.4e+03s
2020-10-24 20:26:35,902 - root - INFO - #134 MAX:accuracy.mean: 0.34
2020-10-24 20:26:36,087 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:27:28,711 - root - DEBUG - Updating hall of fame
2020-10-24 20:27:30,117 - root - INFO - Completed generation 135; 5.4e+01s elapsed, 5.3e+01s avg, 7.2e+03s total. Expected time remaining: 1.3e+03s
2020-10-24 20:27:30,221 - root - INFO - #135 MAX:accuracy.mean: 0.35
2020-10-24 20:27:30,391 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:28:24,692 - root - DEBUG - Updating hall of fame
2020-10-24 20:28:26,272 - root - INFO - Completed generation 136; 5.6e+01s elapsed, 5.3e+01s avg, 7.2e+03s total. Expected time remaining: 1.3e+03s
2020-10-24 20:28:26,375 - root - INFO - #136 MAX:accuracy.mean: 0.34
2020-10-24 20:28:26,545 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:29:20,567 - root - DEBUG - Updating hall of fame
2020-10-24 20:29:21,916 - root - INFO - Completed generation 137; 5.6e+01s elapsed, 5.3e+01s avg, 7.3e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 20:29:22,025 - root - INFO - #137 MAX:accuracy.mean: 0.33
2020-10-24 20:29:22,210 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:30:19,177 - root - DEBUG - Updating hall of fame
2020-10-24 20:30:20,529 - root - INFO - Completed generation 138; 5.9e+01s elapsed, 5.3e+01s avg, 7.4e+03s total. Expected time remaining: 1.2e+03s
2020-10-24 20:30:20,633 - root - INFO - #138 MAX:accuracy.mean: 0.33
2020-10-24 20:30:20,813 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:31:15,330 - root - DEBUG - Updating hall of fame
2020-10-24 20:31:15,694 - root - INFO - Completed generation 139; 5.5e+01s elapsed, 5.3e+01s avg, 7.4e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 20:31:15,801 - root - INFO - #139 MAX:accuracy.mean: 0.34
2020-10-24 20:31:15,985 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:32:12,089 - root - DEBUG - Updating hall of fame
2020-10-24 20:32:13,782 - root - INFO - Completed generation 140; 5.8e+01s elapsed, 5.3e+01s avg, 7.5e+03s total. Expected time remaining: 1.1e+03s
2020-10-24 20:32:13,892 - root - INFO - #140 MAX:accuracy.mean: 0.35
2020-10-24 20:32:14,131 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:33:10,879 - root - DEBUG - Updating hall of fame
2020-10-24 20:33:12,875 - root - INFO - Completed generation 141; 5.9e+01s elapsed, 5.3e+01s avg, 7.5e+03s total. Expected time remaining: 1e+03s
2020-10-24 20:33:12,999 - root - INFO - #141 MAX:accuracy.mean: 0.35
2020-10-24 20:33:13,238 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:34:06,511 - root - DEBUG - Updating hall of fame
2020-10-24 20:34:07,173 - root - INFO - Completed generation 142; 5.4e+01s elapsed, 5.3e+01s avg, 7.6e+03s total. Expected time remaining: 9.6e+02s
2020-10-24 20:34:07,278 - root - INFO - #142 MAX:accuracy.mean: 0.35
2020-10-24 20:34:07,454 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:35:01,186 - root - DEBUG - Updating hall of fame
2020-10-24 20:35:02,752 - root - INFO - Completed generation 143; 5.5e+01s elapsed, 5.3e+01s avg, 7.6e+03s total. Expected time remaining: 9.1e+02s
2020-10-24 20:35:02,861 - root - INFO - #143 MAX:accuracy.mean: 0.34
2020-10-24 20:35:03,049 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:35:56,057 - root - DEBUG - Updating hall of fame
2020-10-24 20:35:56,725 - root - INFO - Completed generation 144; 5.4e+01s elapsed, 5.3e+01s avg, 7.7e+03s total. Expected time remaining: 8.5e+02s
2020-10-24 20:35:56,829 - root - INFO - #144 MAX:accuracy.mean: 0.33
2020-10-24 20:35:57,001 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:36:51,058 - root - DEBUG - Updating hall of fame
2020-10-24 20:36:52,400 - root - INFO - Completed generation 145; 5.6e+01s elapsed, 5.3e+01s avg, 7.7e+03s total. Expected time remaining: 8e+02s
2020-10-24 20:36:52,504 - root - INFO - #145 MAX:accuracy.mean: 0.33
2020-10-24 20:36:52,684 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:37:48,860 - root - DEBUG - Updating hall of fame
2020-10-24 20:37:49,831 - root - INFO - Completed generation 146; 5.7e+01s elapsed, 5.3e+01s avg, 7.8e+03s total. Expected time remaining: 7.5e+02s
2020-10-24 20:37:49,936 - root - INFO - #146 MAX:accuracy.mean: 0.34
2020-10-24 20:37:50,112 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:38:45,182 - root - DEBUG - Updating hall of fame
2020-10-24 20:38:46,747 - root - INFO - Completed generation 147; 5.7e+01s elapsed, 5.3e+01s avg, 7.9e+03s total. Expected time remaining: 7e+02s
2020-10-24 20:38:46,853 - root - INFO - #147 MAX:accuracy.mean: 0.34
2020-10-24 20:38:47,042 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:39:40,939 - root - DEBUG - Updating hall of fame
2020-10-24 20:39:42,154 - root - INFO - Completed generation 148; 5.5e+01s elapsed, 5.4e+01s avg, 7.9e+03s total. Expected time remaining: 6.4e+02s
2020-10-24 20:39:42,257 - root - INFO - #148 MAX:accuracy.mean: 0.34
2020-10-24 20:39:42,431 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:40:37,540 - root - DEBUG - Updating hall of fame
2020-10-24 20:40:38,793 - root - INFO - Completed generation 149; 5.7e+01s elapsed, 5.4e+01s avg, 8e+03s total. Expected time remaining: 5.9e+02s
2020-10-24 20:40:38,901 - root - INFO - #149 MAX:accuracy.mean: 0.34
2020-10-24 20:40:39,091 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:41:32,961 - root - DEBUG - Updating hall of fame
2020-10-24 20:41:34,815 - root - INFO - Completed generation 150; 5.6e+01s elapsed, 5.4e+01s avg, 8e+03s total. Expected time remaining: 5.4e+02s
2020-10-24 20:41:34,921 - root - INFO - #150 MAX:accuracy.mean: 0.34
2020-10-24 20:41:35,159 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:42:32,139 - root - DEBUG - Updating hall of fame
2020-10-24 20:42:34,050 - root - INFO - Completed generation 151; 5.9e+01s elapsed, 5.4e+01s avg, 8.1e+03s total. Expected time remaining: 4.8e+02s
2020-10-24 20:42:34,158 - root - INFO - #151 MAX:accuracy.mean: 0.34
2020-10-24 20:42:34,330 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:43:28,687 - root - DEBUG - Updating hall of fame
2020-10-24 20:43:29,932 - root - INFO - Completed generation 152; 5.6e+01s elapsed, 5.4e+01s avg, 8.1e+03s total. Expected time remaining: 4.3e+02s
2020-10-24 20:43:30,052 - root - INFO - #152 MAX:accuracy.mean: 0.34
2020-10-24 20:43:30,224 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:44:25,559 - root - DEBUG - Updating hall of fame
2020-10-24 20:44:27,140 - root - INFO - Completed generation 153; 5.7e+01s elapsed, 5.4e+01s avg, 8.2e+03s total. Expected time remaining: 3.8e+02s
2020-10-24 20:44:27,243 - root - INFO - #153 MAX:accuracy.mean: 0.35
2020-10-24 20:44:27,419 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:45:22,384 - root - DEBUG - Updating hall of fame
2020-10-24 20:45:24,478 - root - INFO - Completed generation 154; 5.7e+01s elapsed, 5.4e+01s avg, 8.3e+03s total. Expected time remaining: 3.2e+02s
2020-10-24 20:45:24,601 - root - INFO - #154 MAX:accuracy.mean: 0.34
2020-10-24 20:45:24,805 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:46:17,310 - root - DEBUG - Updating hall of fame
2020-10-24 20:46:19,320 - root - INFO - Completed generation 155; 5.5e+01s elapsed, 5.4e+01s avg, 8.3e+03s total. Expected time remaining: 2.7e+02s
2020-10-24 20:46:19,426 - root - INFO - #155 MAX:accuracy.mean: 0.36
2020-10-24 20:46:19,603 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:47:13,603 - root - DEBUG - Updating hall of fame
2020-10-24 20:47:15,481 - root - INFO - Completed generation 156; 5.6e+01s elapsed, 5.4e+01s avg, 8.4e+03s total. Expected time remaining: 2.1e+02s
2020-10-24 20:47:15,587 - root - INFO - #156 MAX:accuracy.mean: 0.35
2020-10-24 20:47:15,768 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:48:14,003 - root - DEBUG - Updating hall of fame
2020-10-24 20:48:15,881 - root - INFO - Completed generation 157; 6e+01s elapsed, 5.4e+01s avg, 8.4e+03s total. Expected time remaining: 1.6e+02s
2020-10-24 20:48:15,990 - root - INFO - #157 MAX:accuracy.mean: 0.35
2020-10-24 20:48:16,205 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:49:15,294 - root - DEBUG - Updating hall of fame
2020-10-24 20:49:17,860 - root - INFO - Completed generation 158; 6.2e+01s elapsed, 5.4e+01s avg, 8.5e+03s total. Expected time remaining: 1.1e+02s
2020-10-24 20:49:17,978 - root - INFO - #158 MAX:accuracy.mean: 0.35
2020-10-24 20:49:18,197 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:50:14,337 - root - DEBUG - Updating hall of fame
2020-10-24 20:50:16,201 - root - INFO - Completed generation 159; 5.8e+01s elapsed, 5.4e+01s avg, 8.6e+03s total. Expected time remaining: 5.4e+01s
2020-10-24 20:50:16,307 - root - INFO - #159 MAX:accuracy.mean: 0.35
2020-10-24 20:50:16,481 - root - DEBUG - Sampled weight [-2.  -1.2 -0.4  0.4  1.2  2. ]
2020-10-24 20:51:11,314 - root - DEBUG - Updating hall of fame
2020-10-24 20:51:13,572 - root - INFO - Completed generation 160; 5.7e+01s elapsed, 5.4e+01s avg, 8.6e+03s total. Expected time remaining: 0.0s
2020-10-24 20:51:13,678 - root - INFO - #160 MAX:accuracy.mean: 0.35
2020-10-24 20:51:14,804 - root - DEBUG - Loaded 10000 samples.
2020-10-24 20:51:14,874 - root - INFO - Evaluating indivs in hall of fame.
2020-10-24 20:54:44,200 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-24 20:54:44,220 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,220 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,221 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-24 20:54:44,221 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,222 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,222 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-24 20:54:44,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,223 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,224 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,224 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,224 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-24 20:54:44,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,225 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,226 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,226 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,226 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,227 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,228 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,228 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-24 20:54:44,228 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,228 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,229 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,229 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,229 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,230 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium-Italic.ttf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,231 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,232 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (lobster.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,233 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,234 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bold Oblique' (UniversalisADFStd-BoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,235 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,235 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,235 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,236 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,237 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,238 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Solid-900.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,239 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,240 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,241 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 20:54:44,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,242 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,243 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,244 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBoldItalic.otf) italic normal semibold normal>) = 11.24
2020-10-24 20:54:44,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,245 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
2020-10-24 20:54:44,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,246 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,247 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,248 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,249 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,249 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Gazis' (GFSGazis.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,250 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,251 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Brands' (Font Awesome 5 Brands-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,252 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal light condensed>) = 11.44
2020-10-24 20:54:44,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,253 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenic.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,254 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS BodoniClassic' (GFSBodoniClassic.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal book normal>) = 11.05
2020-10-24 20:54:44,255 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,256 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-LightItalic.otf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 20:54:44,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RBI.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Display O' (LinLibertine_DR.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 20:54:44,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,299 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
2020-10-24 20:54:44,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2020-10-24 20:54:44,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,300 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,301 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZ.otf) normal normal semibold normal>) = 10.24
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,302 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,303 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,304 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,305 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard Sans' (BagnardSans.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,306 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,307 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,308 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal light condensed>) = 10.44
2020-10-24 20:54:44,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,309 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZI.otf) italic normal semibold normal>) = 11.24
2020-10-24 20:54:44,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,310 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-24 20:54:44,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,311 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 20:54:44,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-boldslanted.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,312 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-24 20:54:44,313 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,313 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,313 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,313 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,314 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-24 20:54:44,314 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,314 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,314 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,314 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,314 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,314 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,315 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,315 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-24 20:54:44,315 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,315 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,315 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,316 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,316 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,316 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,316 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,316 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,317 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand_Dash.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,317 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,317 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,317 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,317 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,317 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,318 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,318 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,318 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,340 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-slanted.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal book normal>) = 11.05
2020-10-24 20:54:44,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2020-10-24 20:54:44,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Asana Math' (Asana-Math.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 20:54:44,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-24 20:54:44,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidot.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 20:54:44,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
2020-10-24 20:54:44,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareB.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 20:54:44,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
2020-10-24 20:54:44,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Medium.otf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCondObl.otf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot Classic' (GFSDidotClassic.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,365 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-24 20:54:44,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,366 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard' (Bagnard.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,367 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,472 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,473 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,474 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,475 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2020-10-24 20:54:44,476 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,477 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,478 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,479 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Light.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,480 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 20:54:44,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,481 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2020-10-24 20:54:44,482 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,483 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSArtemisiaBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,484 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundR.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-MediumItalic.otf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,485 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,486 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,487 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,488 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,489 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,490 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,491 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,492 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,493 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Solomos' (GFSSolomos.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 20:54:44,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,494 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,495 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,496 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,497 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,498 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-CondOblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,499 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Olga' (GFSOlga.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,500 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oblique' (UniversalisADFStd-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,501 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,502 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundB.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,503 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,504 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,505 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,506 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,507 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,508 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 700 normal>) = 11.335
2020-10-24 20:54:44,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphorigenic' (euphorigenic.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal regular condensed>) = 10.25
2020-10-24 20:54:44,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-LightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Complutum' (GFSPolyglot.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 20:54:44,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran' (amiri-quran.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum Keyboard O' (LinBiolinum_K.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisia.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 20:54:44,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Initials O' (LinLibertine_I.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Mono O' (LinLibertine_M.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
2020-10-24 20:54:44,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran Colored' (amiri-quran-colored.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBold.otf) normal normal semibold normal>) = 10.24
2020-10-24 20:54:44,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Theokritos' (GFSTheokritos.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal demi condensed>) = 11.44
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareR.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-24 20:54:44,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,536 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/data/Lab/rewann/venv/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-24 20:54:44,668 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2020-10-24 20:54:44,668 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,669 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,669 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-24 20:54:44,669 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,669 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,669 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,669 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-10-24 20:54:44,669 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,669 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,670 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,671 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,672 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium-Italic.ttf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPen' (UnPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,673 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,674 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,674 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,674 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,674 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,674 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,674 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,674 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,674 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,675 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,675 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (lobster.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,675 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,675 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,675 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,675 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bold Oblique' (UniversalisADFStd-BoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,675 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,675 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (TakaoPGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,676 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,677 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,677 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,677 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,677 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,677 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,677 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Solid-900.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,677 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,677 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,678 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,678 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,678 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,678 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,678 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,678 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,678 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM GB' (gkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,678 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,679 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TakaoPGothic' (fonts-japanese-gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,679 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,679 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,679 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,679 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,679 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,679 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,680 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 20:54:44,680 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,680 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (ipaexm.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,680 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,680 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,680 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,681 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,681 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,681 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,681 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,681 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,681 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,681 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,682 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,682 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,682 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDotum' (UnDotumBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,682 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,682 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,682 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,682 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,683 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,683 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBoldItalic.otf) italic normal semibold normal>) = 11.24
2020-10-24 20:54:44,683 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,683 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,683 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,683 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,683 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,683 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,684 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnVada' (UnVada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,685 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoNovel' (UnJamoNovel.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,685 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,685 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,685 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,685 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Baskerville' (GFSBaskerville.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,685 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,685 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,685 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,686 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Gazis' (GFSGazis.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,686 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,686 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,686 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,686 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,686 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,686 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,686 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Brands' (Font Awesome 5 Brands-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal light condensed>) = 11.44
2020-10-24 20:54:44,687 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,688 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,688 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,688 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,688 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,688 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,688 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenic.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,688 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal heavy normal>) = 10.43
2020-10-24 20:54:44,689 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,689 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotItalic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,689 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS BodoniClassic' (GFSBodoniClassic.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,689 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,689 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexMincho' (fonts-japanese-mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,689 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,689 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,690 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal book normal>) = 11.05
2020-10-24 20:54:44,690 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa_Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,690 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,690 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,690 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,690 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,690 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-LightItalic.otf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,690 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,691 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,691 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 20:54:44,691 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,691 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,691 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,691 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,691 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,691 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RBI.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Display O' (LinLibertine_DR.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,692 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,693 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,693 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,693 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-CondItalic.otf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,693 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,693 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 20:54:44,693 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,693 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,693 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,694 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,694 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
2020-10-24 20:54:44,694 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,694 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,694 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2020-10-24 20:54:44,694 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,694 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,695 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,695 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,695 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,695 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,695 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,695 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,695 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,695 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZ.otf) normal normal semibold normal>) = 10.24
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPGothic' (ipagp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,696 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,697 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,698 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,698 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,698 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,698 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,698 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard Sans' (BagnardSans.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,698 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,698 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,699 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,699 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,699 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,699 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,699 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,699 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,699 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,699 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali UI' (NotoSansBengaliUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,700 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Medium' (Go-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal light condensed>) = 10.44
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUnicode-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumMyeongjo' (NanumMyeongjoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,701 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RZI.otf) italic normal semibold normal>) = 11.24
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,702 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsSm' (STIXIntegralsSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-SemiboldItalic.ttf) italic normal semibold normal>) = 11.24
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-boldslanted.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnYetgul' (UnYetgul.ttf) normal normal 700 normal>) = 10.335
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,703 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,704 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumBarunGothic' (NanumBarunGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,705 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,705 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2020-10-24 20:54:44,705 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GentiumAlt' (GentiumAlt-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,705 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,705 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,705 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,705 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,705 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-MediumItalic.ttf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,706 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,706 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,706 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand_Dash.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,706 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,706 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAexGothic' (ipaexg.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,706 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,706 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,706 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,707 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,707 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,707 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,707 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,707 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,707 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,707 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,707 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri' (amiri-slanted.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,708 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai' (NotoSansThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,708 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,708 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,708 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,708 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,708 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,708 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,708 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGraphic' (UnGraphicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,709 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal book normal>) = 11.05
2020-10-24 20:54:44,710 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,710 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,710 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaru.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,710 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,710 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,710 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,710 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-B.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,710 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsD' (STIXIntegralsD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,711 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,711 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,711 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,711 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,711 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2020-10-24 20:54:44,711 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Asana Math' (Asana-Math.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,711 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,711 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX Math' (STIXMath-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,712 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal heavy normal>) = 11.43
2020-10-24 20:54:44,713 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,713 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,713 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,713 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,713 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,713 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,713 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidot.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,713 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,714 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,715 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium' (Gentium-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,715 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
2020-10-24 20:54:44,715 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareB.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,715 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,715 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,715 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,715 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,715 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,716 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,716 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,716 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Deseret' (NotoSansDeseret-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,716 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,716 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 20:54:44,716 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLight.ttf) normal normal light condensed>) = 10.44
2020-10-24 20:54:44,716 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,716 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,717 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,718 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu UI' (NotoSansTeluguUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Bengali' (NotoSansBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,719 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Batang' (batang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Medium.otf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus' (GentiumPlus-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-BoldCondObl.otf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,720 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,721 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot Classic' (GFSDidotClassic.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,722 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXVariants' (STIXVariants-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal roman normal>) = 10.145
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,723 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Bengali' (NotoSerifBengali-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Telugu' (NotoSerifTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bagnard' (Bagnard.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,724 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Ethiopic' (NotoSerifEthiopic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans Condensed' (OpenSans-CondBold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,725 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari' (NotoSansDevanagari-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,726 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL KaitiM Big5' (bkai00mp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,727 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Devanagari UI' (NotoSansDevanagariUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAGothic' (ipag.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,728 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,729 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Light.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,730 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2020-10-24 20:54:44,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL Mingti2L Big5' (bsmi00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi UI' (NotoSansGurmukhiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,731 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill2' (EBGaramond-InitialsF2.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-I.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,732 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSArtemisiaBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada UI' (NotoSansKannadaUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundR.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,733 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-MediumItalic.otf) italic normal medium normal>) = 11.145
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials' (EBGaramond-Initials.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao UI' (NotoSansLaoUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,734 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Thin.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,735 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnDinaru' (UnDinaruLight.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer' (NotoSansKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya UI' (NotoSansOriyaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Gujarati' (NotoSerifGujarati-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,736 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati UI' (NotoSansGujaratiUI-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicIt.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Telugu' (NotoSansTelugu-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,737 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIX' (STIX-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Solomos' (GFSSolomos.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal roman normal>) = 11.145
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,738 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Sinhala' (NotoSerifSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgia' (UnPilgia.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,739 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpD' (STIXIntegralsUpD-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Gulim' (gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro SC' (BerenisADFProSC-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Bold-Italic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,740 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Universalis ADF Std' (UniversalisADFStd-CondOblique.otf) oblique normal 400 condensed>) = 11.25
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Black.ttf) normal normal black normal>) = 10.525
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Malayalam' (NotoSerifMalayalam-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,741 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Olga' (GFSOlga.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Oblique' (UniversalisADFStd-Oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,742 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std' (AccanthisADFStd-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'AR PL SungtiL GB' (gbsn00lp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquareRound' (NanumSquareRoundB.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond SC' (EBGaramondSC08-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala UI' (NotoSansSinhalaUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tibetan' (NotoSansTibetan-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizeThreeSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,743 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil' (NotoSansTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCondItalic.otf) italic normal bold condensed>) = 11.535
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_R.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,744 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPenheulim' (UnPenheulim.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gujarati' (NotoSansGujarati-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Ethiopic' (NotoSansEthiopic-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,745 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAPMincho' (ipamp.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,746 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam' (NotoSansMalayalam-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,747 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,748 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,748 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 700 normal>) = 11.335
2020-10-24 20:54:44,748 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,748 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Euphorigenic' (euphorigenic.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,748 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,748 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go Mono' (Go-Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,748 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,748 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,749 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal regular condensed>) = 10.25
2020-10-24 20:54:44,749 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,749 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,749 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,749 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Display' (NotoSerifDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,749 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,749 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Dotum' (dotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,749 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnTaza' (UnTaza.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF' (GilliusADF-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Devanagari' (NotoSerifDevanagari-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-LightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond Initials Fill1' (EBGaramond-InitialsF1.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,750 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Andika New Basic' (AndikaNewBasic-BI.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Complutum' (GFSPolyglot.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,751 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisiaBold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Gurmukhi' (NotoSansGurmukhi-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntegralsUpSm-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,752 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Semibold.ttf) normal normal semibold normal>) = 10.24
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizeFiveSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran' (amiri-quran.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Khmer' (NotoSerifKhmer-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,753 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Berenis ADF Pro' (BerenisADFPro-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum Keyboard O' (LinBiolinum_K.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnBatang' (UnBatangBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Comfortaa' (Comfortaa-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Artemisia' (GFSArtemisia.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Malayalam UI' (NotoSansMalayalamUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,754 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgiBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-CondLightItalic.ttf) italic normal light condensed>) = 11.44
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumGothic' (NanumGothicBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,755 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Initials O' (LinLibertine_I.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine Mono O' (LinLibertine_M.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Thai' (NotoSerifThai-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cousine' (Cousine-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,756 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoBatang' (UnJamoBatang.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-ExtraBoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Open Sans' (OpenSans-LightItalic.ttf) italic normal light normal>) = 11.24
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,757 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Myanmar UI' (NotoSansMyanmarUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond' (EBGaramond12-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Didot' (GFSDidotBoldItalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal roman normal>) = 11.145
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,758 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'EB Garamond 12 All SC' (EBGaramond12-AllSC.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'IPAMincho' (ipam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Neohellenic' (GFSNeohellenicBoldIt.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Adlam Unjoined' (NotoSansAdlamUnjoined-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No3' (AccanthisADFStdNo3-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,759 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Tamil UI' (NotoSansTamilUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gillius ADF No2' (GilliusADFNo2-BoldCond.otf) normal normal bold condensed>) = 10.535
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Go' (Go-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizeFourSym-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Gentium Plus Compact' (GentiumPlusCompact-R.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,760 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Baekmuk Headline' (hline.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Amiri Quran Colored' (amiri-quran-colored.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cabin' (Cabin-SemiBold.otf) normal normal semibold normal>) = 10.24
2020-10-24 20:54:44,761 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Symbols' (NotoSansSymbols-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-24 20:54:44,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnGungseo' (UnGungseo.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,762 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Theokritos' (GFSTheokritos.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnPilgi' (UnPilgi.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal demi condensed>) = 11.44
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Alegreya' (Alegreya-BlackItalic.ttf) italic normal black normal>) = 11.525
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Tamil' (NotoSerifTamil-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,763 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lobster Two' (LobsterTwo-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Khmer UI' (NotoSansKhmerUI-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizeTwoSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'NanumSquare' (NanumSquareR.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,764 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal light normal>) = 10.24
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizeOneSym-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'GFS Porson' (GFSPorson.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Accanthis ADF Std No2' (AccanthisADFStdNo2-Bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Biolinum O' (LinBiolinum_RB.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Junicode' (Junicode-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoSora' (UnJamoSora.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,765 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Display' (NotoSansDisplay-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'UnJamoDotum' (UnJamoDotum.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXIntegralsUp' (STIXIntegralsUp-Regular.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,766 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal bold normal>) = 11.335
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Roboto' (Roboto-Medium.ttf) normal normal medium normal>) = 10.145
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Sinhala' (NotoSansSinhala-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Font Awesome 5 Free' (Font Awesome 5 Free-Regular-400.otf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Thai UI' (NotoSansThaiUI-Bold.ttf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal bold normal>) = 10.335
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Tinos' (Tinos-Regular.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-10-24 20:54:44,767 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2020-10-24 20:54:44,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Cherokee' (NotoSansCherokee-Regular.ttf) normal normal regular normal>) = 10.05
2020-10-24 20:54:44,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2020-10-24 20:54:44,768 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Linux Libertine O' (LinLibertine_RI.otf) italic normal 400 normal>) = 11.05
2020-10-24 20:54:44,768 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/data/Lab/rewann/venv/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-24 20:54:47,190 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9db528b8e0>
2020-10-24 20:54:47,191 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:54:47,191 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9db528b8e0>
2020-10-24 20:54:47,191 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:54:55,790 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9da8026a60>
2020-10-24 20:54:55,790 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:54:55,790 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9da8026a60>
2020-10-24 20:54:55,790 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:01,074 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d99445040>
2020-10-24 20:55:01,074 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:55:01,074 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d99445040>
2020-10-24 20:55:01,074 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:06,537 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9da0052eb0>
2020-10-24 20:55:06,537 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:55:06,537 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9da0052eb0>
2020-10-24 20:55:06,537 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:11,875 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d99b9f7f0>
2020-10-24 20:55:11,876 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:55:11,876 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d99b9f7f0>
2020-10-24 20:55:11,876 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:17,443 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d992d2d30>
2020-10-24 20:55:17,443 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:55:17,443 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d992d2d30>
2020-10-24 20:55:17,443 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:22,711 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9da807c760>
2020-10-24 20:55:22,711 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:55:22,711 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9da807c760>
2020-10-24 20:55:22,711 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:27,834 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d98f1e1c0>
2020-10-24 20:55:27,834 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:55:27,834 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d98f1e1c0>
2020-10-24 20:55:27,834 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:33,177 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9db0097c70>
2020-10-24 20:55:33,178 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:55:33,178 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9db0097c70>
2020-10-24 20:55:33,178 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:38,427 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9db5b9db50>
2020-10-24 20:55:38,427 - matplotlib.colorbar - DEBUG - Using auto colorbar locator on colorbar
2020-10-24 20:55:38,427 - matplotlib.colorbar - DEBUG - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9db5b9db50>
2020-10-24 20:55:38,427 - matplotlib.colorbar - DEBUG - Setting pcolormesh
2020-10-24 20:55:42,254 - root - INFO - Completed excution.
